{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About \u00b6 \u7b80\u4ecb \u00b6 \u8fd9\u662f\u6211\u7684Wiki\u9875\u9762\uff0c\u4e3b\u8981\u7528\u6765\u8bb0\u5f55\u4e00\u4e9b\u7b14\u8bb0\u548c\u5b58\u6863\u3002 \u90e8\u5206\u7b14\u8bb0\u8f83\u4e3a\u51cc\u4e71\uff0c\u56e0\u6b64\u672a\u5c06\u5168\u90e8\u7b14\u8bb0\u8fdb\u884c\u5c55\u793a\uff0c\u53ef\u4ee5\u4ece github \u67e5\u770b\u5b8c\u6574\u5185\u5bb9\u3002 \u8054\u7cfb\u65b9\u5f0f \u00b6 ieiao@outlook.com","title":"\u5173\u4e8e"},{"location":"#about","text":"","title":"About"},{"location":"#_1","text":"\u8fd9\u662f\u6211\u7684Wiki\u9875\u9762\uff0c\u4e3b\u8981\u7528\u6765\u8bb0\u5f55\u4e00\u4e9b\u7b14\u8bb0\u548c\u5b58\u6863\u3002 \u90e8\u5206\u7b14\u8bb0\u8f83\u4e3a\u51cc\u4e71\uff0c\u56e0\u6b64\u672a\u5c06\u5168\u90e8\u7b14\u8bb0\u8fdb\u884c\u5c55\u793a\uff0c\u53ef\u4ee5\u4ece github \u67e5\u770b\u5b8c\u6574\u5185\u5bb9\u3002","title":"\u7b80\u4ecb"},{"location":"#_2","text":"ieiao@outlook.com","title":"\u8054\u7cfb\u65b9\u5f0f"},{"location":"blog-archive/","text":"Blog Archive \u00b6 \u4fdd\u5b58\u4e92\u8054\u7f51\u4e2d\u9047\u5230\u7684\u4e00\u4e9b\u6709\u8da3\u7684\u535a\u5ba2/\u9879\u76ee\u539f\u6587\u94fe\u63a5\u53ca\u76f8\u5173\u5b58\u6863\u3002 SimpleNFC \u4f7f\u7528\u5206\u7acb\u539f\u4ef6\u642d\u5efa\u8c03\u5236\u89e3\u8c03\u7535\u8def\u5b9e\u73b0\u4e86NFC\u6807\u7b7e\u7684\u6a21\u62df","title":"\u535a\u5ba2/\u9879\u76ee\u5b58\u6863"},{"location":"blog-archive/#blog-archive","text":"\u4fdd\u5b58\u4e92\u8054\u7f51\u4e2d\u9047\u5230\u7684\u4e00\u4e9b\u6709\u8da3\u7684\u535a\u5ba2/\u9879\u76ee\u539f\u6587\u94fe\u63a5\u53ca\u76f8\u5173\u5b58\u6863\u3002 SimpleNFC \u4f7f\u7528\u5206\u7acb\u539f\u4ef6\u642d\u5efa\u8c03\u5236\u89e3\u8c03\u7535\u8def\u5b9e\u73b0\u4e86NFC\u6807\u7b7e\u7684\u6a21\u62df","title":"Blog Archive"},{"location":"blog-archive/SimpleNFC/","text":"SimpleNFC \u00b6 SimpleNFC\u4f7f\u7528\u5206\u7acb\u539f\u4ef6\u642d\u5efa\u8c03\u5236\u89e3\u8c03\u7535\u8def\u5b9e\u73b0\u4e86NFC\u6807\u7b7e\u7684\u6a21\u62df\uff0c\u8fd9\u91cc\u5bf9\u535a\u5ba2\u5185\u5bb9\u8fdb\u884c\u4e86\u5b58\u6863\u3002 \u539f\u6587\u5730\u5740 PDF\u7248\u672c \u4ee3\u7801\u5b58\u6863 \u76f8\u5173\u9605\u8bfb\u4e2dNiall Quirke\u7684\u8bba\u6587","title":"SimpleNFC"},{"location":"blog-archive/SimpleNFC/#simplenfc","text":"SimpleNFC\u4f7f\u7528\u5206\u7acb\u539f\u4ef6\u642d\u5efa\u8c03\u5236\u89e3\u8c03\u7535\u8def\u5b9e\u73b0\u4e86NFC\u6807\u7b7e\u7684\u6a21\u62df\uff0c\u8fd9\u91cc\u5bf9\u535a\u5ba2\u5185\u5bb9\u8fdb\u884c\u4e86\u5b58\u6863\u3002 \u539f\u6587\u5730\u5740 PDF\u7248\u672c \u4ee3\u7801\u5b58\u6863 \u76f8\u5173\u9605\u8bfb\u4e2dNiall Quirke\u7684\u8bba\u6587","title":"SimpleNFC"},{"location":"code/languages/c/","text":"C/C++ \u00b6 1. C/C++\u7684\u76f8\u4e92\u8c03\u7528 \u00b6 1.1 C++\u8c03\u7528C\uff08\u4f7f\u7528g++\u8fdb\u884c\u7f16\u8bd1\u65f6\u5019\u7684\u5904\u7406\uff09 \u00b6 \u5f53\u7edf\u4e00\u4f7f\u7528g++\u8fdb\u884c\u7f16\u8bd1\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e.c\u6587\u4ef6\u6240\u5bf9\u5e94\u7684.h\u6587\u4ef6\u91cc\u9762\u7684\u51fd\u6570\u58f0\u660e\uff0c\u5e94\u8be5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u5feb\u8fdb\u884c\u5305\u88f9\u4ee5\u8868\u660e\u8be5\u51fd\u6570\u4e3aC\u8bed\u8a00\u51fd\u6570\u3002 #if defined(__cplusplus) extern \"C\" { #endif /* \u51fd\u6570\u58f0\u660e */ #if defined(__cplusplus) } #endif 1.2 C\u8c03\u7528C++ \u00b6 C\u65e0\u6cd5\u76f4\u63a5\u8c03\u7528C++\u51fd\u6570\uff0c\u5fc5\u987b\u6dfb\u52a0\u4e00\u5c42wrapper\uff0c\u5728\u8be5wrapper\u4e2d\u5bf9\u6211\u4eec\u9700\u8981\u7684\u529f\u80fd\u8fdb\u884c\u7b80\u5355\u5c01\u88c5\uff0c\u6700\u540e\u518d\u4ee5C\u7684\u5f62\u5f0f\u8fdb\u884c\u58f0\u660e\uff0c\u5373\u53ef\u5b9e\u73b0C\u8c03\u7528C++\u3002 /* apds9960_wrapper.h */ #ifndef APP_APDS9960_WRAPPER_H_ #define APP_APDS9960_WRAPPER_H_ #include <stdio.h> #if defined(__cplusplus) extern \"C\" { #endif bool apds9960_init ( void ); void apds9960_startGesture ( void ); uint8_t apds9960_read ( void ); #if defined(__cplusplus) } #endif #endif /* APP_APDS9960_WRAPPER_H_ */ /* apds9960_wrapper.cpp */ #include \"apds9960_wrapper.h\" #include \"Adafruit_APDS9960.h\" Adafruit_APDS9960 apds ; bool apds9960_init ( void ) { return apds . begin (); } void apds9960_startGesture ( void ) { apds . enableProximity ( true ); apds . enableGesture ( true ); } uint8_t apds9960_read ( void ) { return apds . readGesture (); }","title":"C/C++"},{"location":"code/languages/c/#cc","text":"","title":"C/C++"},{"location":"code/languages/c/#1-cc","text":"","title":"1. C/C++\u7684\u76f8\u4e92\u8c03\u7528"},{"location":"code/languages/c/#11-ccg","text":"\u5f53\u7edf\u4e00\u4f7f\u7528g++\u8fdb\u884c\u7f16\u8bd1\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e.c\u6587\u4ef6\u6240\u5bf9\u5e94\u7684.h\u6587\u4ef6\u91cc\u9762\u7684\u51fd\u6570\u58f0\u660e\uff0c\u5e94\u8be5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u5feb\u8fdb\u884c\u5305\u88f9\u4ee5\u8868\u660e\u8be5\u51fd\u6570\u4e3aC\u8bed\u8a00\u51fd\u6570\u3002 #if defined(__cplusplus) extern \"C\" { #endif /* \u51fd\u6570\u58f0\u660e */ #if defined(__cplusplus) } #endif","title":"1.1 C++\u8c03\u7528C\uff08\u4f7f\u7528g++\u8fdb\u884c\u7f16\u8bd1\u65f6\u5019\u7684\u5904\u7406\uff09"},{"location":"code/languages/c/#12-cc","text":"C\u65e0\u6cd5\u76f4\u63a5\u8c03\u7528C++\u51fd\u6570\uff0c\u5fc5\u987b\u6dfb\u52a0\u4e00\u5c42wrapper\uff0c\u5728\u8be5wrapper\u4e2d\u5bf9\u6211\u4eec\u9700\u8981\u7684\u529f\u80fd\u8fdb\u884c\u7b80\u5355\u5c01\u88c5\uff0c\u6700\u540e\u518d\u4ee5C\u7684\u5f62\u5f0f\u8fdb\u884c\u58f0\u660e\uff0c\u5373\u53ef\u5b9e\u73b0C\u8c03\u7528C++\u3002 /* apds9960_wrapper.h */ #ifndef APP_APDS9960_WRAPPER_H_ #define APP_APDS9960_WRAPPER_H_ #include <stdio.h> #if defined(__cplusplus) extern \"C\" { #endif bool apds9960_init ( void ); void apds9960_startGesture ( void ); uint8_t apds9960_read ( void ); #if defined(__cplusplus) } #endif #endif /* APP_APDS9960_WRAPPER_H_ */ /* apds9960_wrapper.cpp */ #include \"apds9960_wrapper.h\" #include \"Adafruit_APDS9960.h\" Adafruit_APDS9960 apds ; bool apds9960_init ( void ) { return apds . begin (); } void apds9960_startGesture ( void ) { apds . enableProximity ( true ); apds . enableGesture ( true ); } uint8_t apds9960_read ( void ) { return apds . readGesture (); }","title":"1.2 C\u8c03\u7528C++"},{"location":"code/languages/markdown/","text":"Markdown \u00b6 Markdown\u9875\u5185\u8df3\u8f6c <a id=\"jump\"></a> [ \u8df3\u8f6c ]( #jump )","title":"Markdown"},{"location":"code/languages/markdown/#markdown","text":"Markdown\u9875\u5185\u8df3\u8f6c <a id=\"jump\"></a> [ \u8df3\u8f6c ]( #jump )","title":"Markdown"},{"location":"code/snippets/CMakeLists/","text":"CMakeLists \u00b6 \u6a21\u677f \u00b6 # CMake template file # Use this file with # mkdir build # cd build # cmake .. && make .. # make -C build cmake_minimum_required ( VERSION 3.15.3 ) # Optional: print out extra messages to see what is going on. Comment it to have less verbose messages set ( CMAKE_VERBOSE_MAKEFILE ON ) # Path to toolchain file. This one has to be before 'project()' below SET ( CROSS_COMPILE \"/path-to-toolchain/bin/arm-none-eabi-\" ) SET ( CMAKE_C_COMPILER ${ CROSS_COMPILE } gcc ) SET ( CMAKE_CXX_COMPILER ${ CROSS_COMPILE } g++ ) # Setup project, output and linker file project ( make_template ) set ( EXECUTABLE ${ PROJECT_NAME } .elf ) set ( LINKER_FILE ${ CMAKE_SOURCE_DIR } /link.ld ) enable_language ( C ASM ) set ( CMAKE_C_STANDARD 99 ) set ( CMAKE_C_STANDARD_REQUIRED ON ) set ( CMAKE_C_EXTENSIONS OFF ) set ( CMAKE_EXPORT_COMPILE_COMMANDS ON ) # List of source files set ( SRC_FILES main.c ) # Build the executable based on the source files add_executable ( ${ EXECUTABLE } ${ SRC_FILES } ) # List of compiler defines, prefix with -D compiler option target_compile_definitions ( ${ EXECUTABLE } PRIVATE -DDEBUG ) # List of includ directories target_include_directories ( ${ EXECUTABLE } PRIVATE . driver ) # Compiler options target_compile_options ( ${ EXECUTABLE } PRIVATE -fdata-sections -ffunction-sections -Wall -O2 ) # Linker options target_link_options ( ${ EXECUTABLE } PRIVATE -T ${ LINKER_FILE } -lm -Wl,-Map= ${ PROJECT_NAME } .map,--cref -Wl,--gc-sections -Xlinker -print-memory-usage -Xlinker ) # Linker libraries #target_link_libraries(${EXECUTABLE} PRIVATE # m # ) # Optional: Print executable size as part of the post build process add_custom_command ( TARGET ${ EXECUTABLE } POST_BUILD COMMAND ${ CMAKE_SIZE_UTIL } ${ EXECUTABLE_OUTPUT_PATH } / ${ EXECUTABLE } ) # Optional: Create hex, bin and S-Record files after the build add_custom_command ( TARGET ${ EXECUTABLE } POST_BUILD COMMAND ${ CMAKE_OBJCOPY } -O srec --srec-len=64 \"${EXECUTABLE_OUTPUT_PATH}/${EXECUTABLE}\" \"${EXECUTABLE_OUTPUT_PATH}/${PROJECT_NAME}.s19\" COMMAND ${ CMAKE_OBJCOPY } -O ihex \"${EXECUTABLE_OUTPUT_PATH}/${EXECUTABLE}\" \"${EXECUTABLE_OUTPUT_PATH}/${PROJECT_NAME}.hex\" COMMAND ${ CMAKE_OBJCOPY } -O binary \"${EXECUTABLE_OUTPUT_PATH}/${EXECUTABLE}\" \"${EXECUTABLE_OUTPUT_PATH}/${PROJECT_NAME}.bin\" ) # Optional: flash device add_custom_target ( flash COMMAND openocd/pyocd commands DEPENDS ${ EXECUTABLE } )","title":"CMakeLists"},{"location":"code/snippets/CMakeLists/#cmakelists","text":"","title":"CMakeLists"},{"location":"code/snippets/CMakeLists/#_1","text":"# CMake template file # Use this file with # mkdir build # cd build # cmake .. && make .. # make -C build cmake_minimum_required ( VERSION 3.15.3 ) # Optional: print out extra messages to see what is going on. Comment it to have less verbose messages set ( CMAKE_VERBOSE_MAKEFILE ON ) # Path to toolchain file. This one has to be before 'project()' below SET ( CROSS_COMPILE \"/path-to-toolchain/bin/arm-none-eabi-\" ) SET ( CMAKE_C_COMPILER ${ CROSS_COMPILE } gcc ) SET ( CMAKE_CXX_COMPILER ${ CROSS_COMPILE } g++ ) # Setup project, output and linker file project ( make_template ) set ( EXECUTABLE ${ PROJECT_NAME } .elf ) set ( LINKER_FILE ${ CMAKE_SOURCE_DIR } /link.ld ) enable_language ( C ASM ) set ( CMAKE_C_STANDARD 99 ) set ( CMAKE_C_STANDARD_REQUIRED ON ) set ( CMAKE_C_EXTENSIONS OFF ) set ( CMAKE_EXPORT_COMPILE_COMMANDS ON ) # List of source files set ( SRC_FILES main.c ) # Build the executable based on the source files add_executable ( ${ EXECUTABLE } ${ SRC_FILES } ) # List of compiler defines, prefix with -D compiler option target_compile_definitions ( ${ EXECUTABLE } PRIVATE -DDEBUG ) # List of includ directories target_include_directories ( ${ EXECUTABLE } PRIVATE . driver ) # Compiler options target_compile_options ( ${ EXECUTABLE } PRIVATE -fdata-sections -ffunction-sections -Wall -O2 ) # Linker options target_link_options ( ${ EXECUTABLE } PRIVATE -T ${ LINKER_FILE } -lm -Wl,-Map= ${ PROJECT_NAME } .map,--cref -Wl,--gc-sections -Xlinker -print-memory-usage -Xlinker ) # Linker libraries #target_link_libraries(${EXECUTABLE} PRIVATE # m # ) # Optional: Print executable size as part of the post build process add_custom_command ( TARGET ${ EXECUTABLE } POST_BUILD COMMAND ${ CMAKE_SIZE_UTIL } ${ EXECUTABLE_OUTPUT_PATH } / ${ EXECUTABLE } ) # Optional: Create hex, bin and S-Record files after the build add_custom_command ( TARGET ${ EXECUTABLE } POST_BUILD COMMAND ${ CMAKE_OBJCOPY } -O srec --srec-len=64 \"${EXECUTABLE_OUTPUT_PATH}/${EXECUTABLE}\" \"${EXECUTABLE_OUTPUT_PATH}/${PROJECT_NAME}.s19\" COMMAND ${ CMAKE_OBJCOPY } -O ihex \"${EXECUTABLE_OUTPUT_PATH}/${EXECUTABLE}\" \"${EXECUTABLE_OUTPUT_PATH}/${PROJECT_NAME}.hex\" COMMAND ${ CMAKE_OBJCOPY } -O binary \"${EXECUTABLE_OUTPUT_PATH}/${EXECUTABLE}\" \"${EXECUTABLE_OUTPUT_PATH}/${PROJECT_NAME}.bin\" ) # Optional: flash device add_custom_target ( flash COMMAND openocd/pyocd commands DEPENDS ${ EXECUTABLE } )","title":"\u6a21\u677f"},{"location":"code/snippets/binary_search/","text":"\u4e8c\u5206\u67e5\u627e \u00b6 int binarySearch ( int [] nums , int target ) { int left = 0 ; int right = nums . length - 1 ; while ( left <= right ) { int mid = left + ( right - left ) / 2 ; if ( nums [ mid ] == target ) return mid ; else if ( nums [ mid ] < target ) left = mid + 1 ; else if ( nums [ mid ] > target ) right = mid - 1 ; } return -1 ; }","title":"\u4e8c\u5206\u67e5\u627e"},{"location":"code/snippets/binary_search/#_1","text":"int binarySearch ( int [] nums , int target ) { int left = 0 ; int right = nums . length - 1 ; while ( left <= right ) { int mid = left + ( right - left ) / 2 ; if ( nums [ mid ] == target ) return mid ; else if ( nums [ mid ] < target ) left = mid + 1 ; else if ( nums [ mid ] > target ) right = mid - 1 ; } return -1 ; }","title":"\u4e8c\u5206\u67e5\u627e"},{"location":"code/snippets/utf8c/","text":"UTF-8\u8f6cUnicode \u00b6 #include <stdio.h> #include <stdlib.h> static const char head_mask [] = { 0xff , 0x7f , 0x1f , 0x0f , 0x07 , 0x03 , 0x01 }; static const char shift_tab [] = { 0 , 6 , 12 , 18 , 24 , 30 }; int32_t utf8_cov_unicode ( const char * stream ) { char head = * stream ; char unicode_buf [ 4 ] = { 0 }; int32_t * unicode = ( int32_t * ) unicode_buf ; int length = 0 ; if ( ! ( head & 0x80 )) length = 1 ; else { while ( head & 0x80 ) { length ++ ; head <<= 1 ; } } if ( length == 1 ) unicode_buf [ 0 ] = head ; else { stream += ( length - 1 ); switch ( length ) { case 6 : * unicode |= ( int32_t )(( * stream -- ) & 0x3f ); case 5 : * unicode |= ( int32_t )(( * stream -- ) & 0x3f ) << shift_tab [ length -5 ]; case 4 : * unicode |= ( int32_t )(( * stream -- ) & 0x3f ) << shift_tab [ length -4 ]; case 3 : * unicode |= ( int32_t )(( * stream -- ) & 0x3f ) << shift_tab [ length -3 ]; case 2 : * unicode |= ( int32_t )(( * stream -- ) & 0x3f ) << shift_tab [ length -2 ]; * unicode |= ( int32_t )( * stream & head_mask [ length -1 ]) << shift_tab [ length -1 ]; break ; default : * unicode = -1 ; } } return * unicode ; } int main ( int argc , char * argv []) { printf ( \"%x \\n \" , utf8_cov_unicode ( argv [ 1 ])); return 0 ; }","title":"UTF-8\u8f6cUnicode"},{"location":"code/snippets/utf8c/#utf-8unicode","text":"#include <stdio.h> #include <stdlib.h> static const char head_mask [] = { 0xff , 0x7f , 0x1f , 0x0f , 0x07 , 0x03 , 0x01 }; static const char shift_tab [] = { 0 , 6 , 12 , 18 , 24 , 30 }; int32_t utf8_cov_unicode ( const char * stream ) { char head = * stream ; char unicode_buf [ 4 ] = { 0 }; int32_t * unicode = ( int32_t * ) unicode_buf ; int length = 0 ; if ( ! ( head & 0x80 )) length = 1 ; else { while ( head & 0x80 ) { length ++ ; head <<= 1 ; } } if ( length == 1 ) unicode_buf [ 0 ] = head ; else { stream += ( length - 1 ); switch ( length ) { case 6 : * unicode |= ( int32_t )(( * stream -- ) & 0x3f ); case 5 : * unicode |= ( int32_t )(( * stream -- ) & 0x3f ) << shift_tab [ length -5 ]; case 4 : * unicode |= ( int32_t )(( * stream -- ) & 0x3f ) << shift_tab [ length -4 ]; case 3 : * unicode |= ( int32_t )(( * stream -- ) & 0x3f ) << shift_tab [ length -3 ]; case 2 : * unicode |= ( int32_t )(( * stream -- ) & 0x3f ) << shift_tab [ length -2 ]; * unicode |= ( int32_t )( * stream & head_mask [ length -1 ]) << shift_tab [ length -1 ]; break ; default : * unicode = -1 ; } } return * unicode ; } int main ( int argc , char * argv []) { printf ( \"%x \\n \" , utf8_cov_unicode ( argv [ 1 ])); return 0 ; }","title":"UTF-8\u8f6cUnicode"},{"location":"embedded-dev/hardware/","text":"\u786c\u4ef6\u76f8\u5173 \u00b6 \u8bb0\u5f55\u4e86\u4e00\u4e9b\u7f51\u4e0a\u770b\u5230\u7684\u53ef\u80fd\u4f1a\u7528\u5230\u7684\u786c\u4ef6\u76f8\u5173\u5185\u5bb9 DC-DC \u00b6 TI/TPS61220 5.5uA\u9759\u6001\u7535\u6d41 \u4ef7\u683c\u6bd4\u8f83\u8d35\uff0c\u96f6\u552e10RMB \u5357\u4eac\u5fae\u76df/ME2188 7uA\u9759\u6001\u7535\u6d41 \u96f6\u552e0.5RMB\u5de6\u53f3 MP2359 \u5185\u7f6e\u529f\u7387MOSFET\u7684\u5355\u7247\u964d\u538b\u5f00\u5173\u8f6c\u6362\u5668\u3002\u5728\u5bbd\u8f93\u5165\u8303\u56f4\u5185\uff0c\u53ef\u63d0\u4f9b 1.2A \u7684\u5cf0\u503c\u8f93\u51fa\u7535\u6d41 TPS63060 2.5V \u81f3 12V \u8f93\u5165\u7535\u538b\u3001\u6548\u7387\u4e3a 93% \u7684 2.25A \u5f00\u5173\u9650\u6d41\u964d\u538b/\u5347\u538b\u8f6c\u6362\u5668 LDO \u00b6 XC6206 ME6216 ME6210A33 DAC \u00b6 PT8211 \u5ec9\u4ef716bit\u97f3\u9891DAC PA \u00b6 8002 \u5355\u901a\u9053\u6865\u5f0f\u8fde\u63a5\u97f3\u9891\u529f\u7387\u653e\u5927\u5668 PHY \u00b6 LAN8720 10/100 Base-T/TX Ethernet Transceiver with RMII Interface \u9502\u7535\u6c60\u5145\u7535 \u00b6 TC4056A","title":"\u786c\u4ef6\u76f8\u5173"},{"location":"embedded-dev/hardware/#_1","text":"\u8bb0\u5f55\u4e86\u4e00\u4e9b\u7f51\u4e0a\u770b\u5230\u7684\u53ef\u80fd\u4f1a\u7528\u5230\u7684\u786c\u4ef6\u76f8\u5173\u5185\u5bb9","title":"\u786c\u4ef6\u76f8\u5173"},{"location":"embedded-dev/hardware/#dc-dc","text":"TI/TPS61220 5.5uA\u9759\u6001\u7535\u6d41 \u4ef7\u683c\u6bd4\u8f83\u8d35\uff0c\u96f6\u552e10RMB \u5357\u4eac\u5fae\u76df/ME2188 7uA\u9759\u6001\u7535\u6d41 \u96f6\u552e0.5RMB\u5de6\u53f3 MP2359 \u5185\u7f6e\u529f\u7387MOSFET\u7684\u5355\u7247\u964d\u538b\u5f00\u5173\u8f6c\u6362\u5668\u3002\u5728\u5bbd\u8f93\u5165\u8303\u56f4\u5185\uff0c\u53ef\u63d0\u4f9b 1.2A \u7684\u5cf0\u503c\u8f93\u51fa\u7535\u6d41 TPS63060 2.5V \u81f3 12V \u8f93\u5165\u7535\u538b\u3001\u6548\u7387\u4e3a 93% \u7684 2.25A \u5f00\u5173\u9650\u6d41\u964d\u538b/\u5347\u538b\u8f6c\u6362\u5668","title":"DC-DC"},{"location":"embedded-dev/hardware/#ldo","text":"XC6206 ME6216 ME6210A33","title":"LDO"},{"location":"embedded-dev/hardware/#dac","text":"PT8211 \u5ec9\u4ef716bit\u97f3\u9891DAC","title":"DAC"},{"location":"embedded-dev/hardware/#pa","text":"8002 \u5355\u901a\u9053\u6865\u5f0f\u8fde\u63a5\u97f3\u9891\u529f\u7387\u653e\u5927\u5668","title":"PA"},{"location":"embedded-dev/hardware/#phy","text":"LAN8720 10/100 Base-T/TX Ethernet Transceiver with RMII Interface","title":"PHY"},{"location":"embedded-dev/hardware/#_2","text":"TC4056A","title":"\u9502\u7535\u6c60\u5145\u7535"},{"location":"embedded-dev/openwrt/","text":"OpenWrt \u00b6 1. \u514b\u9686 \u00b6 OpenWrt git\u4ed3\u5e93\u5730\u5740 git://git.openwrt.org/openwrt/openwrt.git \u53ef\u4ee5\u4f7f\u7528\u955c\u50cf\u7ad9\u70b9\u52a0\u5feb\u514b\u9686\uff0c\u4f8b\u5982 https://gitee.com/harvey520 2. \u914d\u7f6e\u53ca\u7f16\u8bd1 \u00b6 2.1 \u5feb\u901f\u6784\u5efa \u00b6 # \u66f4\u65b0\u8f6f\u4ef6\u5305\uff0c\u56fd\u5185\u7f51\u7edc\u73af\u5883\u4e0b\u8f7d\u53ef\u80fd\u4f1a\u6bd4\u8f83\u6162\uff0c\u53ef\u4ee5\u4f7f\u7528\u955c\u50cf\u7ad9\u70b9\u4e0b\u8f7d\uff0c\u5982\u4e0b # \u4fee\u6539 openwrt \u6e90\u7801\u76ee\u5f55\u7684 feeds.conf.default \u6587\u4ef6\u4e2d\u7684\u955c\u50cf\u6e90 # \u5c06 https://git.openwrt.org/feed/packages.git \u6539\u4e3a https://gitee.com/harvey520/packages.git # \u5c06 https://git.openwrt.org/project/luci.git \u6539\u4e3a https://gitee.com/harvey520/luci.git # \u5c06 https://git.openwrt.org/feed/routing.git \u6539\u4e3a https://gitee.com/harvey520/routing.git # \u5c06 https://git.openwrt.org/feed/telephony.git \u6539\u4e3a https://gitee.com/harvey520/telephony.git ./scripts/feeds update -a ./scripts/feeds install -a # This opens the OpenWrt configuration menu for setting target and options. # \u914d\u7f6e\u76ee\u6807\u677f\u5361 make menuconfig 2.2 \u5176\u4ed6\u9009\u9879 \u00b6 # \u6253\u5f00kernel\u914d\u7f6e\u754c\u9762 make kernel_menuconfig 3. \u5b9a\u5236 \u00b6 3.1 \u6dfb\u52a0\u81ea\u5b9a\u4e49\u6587\u4ef6 \u00b6 You can include custom files in your image by placing them in /files, e.g. if you want to have my_config included in your image in the directory /etc/config/ \u21d2 /files/etc/config/my_config. If the files directory doesn't exist on your buildsystem, then create it. 3.2 \u4fee\u6539dts \u00b6 \u8bbe\u5907\u6811\u8def\u5f84\u662f target/linux/xxx/dts \uff0c\u4f8b\u5982rt5350f\u7684\u8bbe\u5907\u6811\u662f target/linux/ramips/dts/rt5350.dtsi \u53ca\u76f8\u5173\u677f\u5361\u6587\u4ef6\u3002 3.3 \u5185\u6838\u6e90\u7801 \u00b6 \u5185\u6838\u6e90\u7801\u8def\u5f84\u5e94\u8be5\u662f build_dir/target-xxx/linux-xxx/linux-x.x.xx \uff0c\u914d\u7f6e\u6587\u4ef6\u7684\u8def\u5f84\u662f target/linux/target-name/xxx/config \uff0c\u4f8b\u5982rt5350f\u7684\u914d\u7f6e\u6587\u4ef6\u662f target/linux/ramips/rt305x/config-4.14 \u3002 3.4 udhcpc \u00b6 /usr/share/udhcpc/default.script /etc/udhcpc.user root@OpenWrt:/tmp/run# udhcpc --help BusyBox v1.31.1 () multi-call binary. Usage: udhcpc [ -fbqRB ] [ -t N ] [ -T SEC ] [ -A SEC/-n ] [ -i IFACE ] [ -s PROG ] [ -p PIDFILE ] [ -oC ] [ -r IP ] [ -V VENDOR ] [ -F NAME ] [ -x OPT:VAL ] ... [ -O OPT ] ... -i IFACE Interface to use ( default eth0 ) -s PROG Run PROG at DHCP events ( default /usr/share/udhcpc/default.script ) -p FILE Create pidfile -B Request broadcast replies -t N Send up to N discover packets ( default 3 ) -T SEC Pause between packets ( default 3 ) -A SEC Wait if lease is not obtained ( default 20 ) -b Background if lease is not obtained -n Exit if lease is not obtained -q Exit after obtaining lease -R Release IP on exit -f Run in foreground -S Log to syslog too -r IP Request this IP address -o Don 't request any options (unless -O is given) -O OPT Request option OPT from server (cumulative) -x OPT:VAL Include option OPT in sent packets (cumulative) Examples of string, numeric, and hex byte opts: -x hostname:bbox - option 12 -x lease:3600 - option 51 (lease time) -x 0x3d:0100BEEFC0FFEE - option 61 (client id) -x 14:' \"dumpfile\" ' - option 14 (shell-quoted) -F NAME Ask server to update DNS mapping for NAME -V VENDOR Vendor identifier (default ' udhcp VERSION ') -C Don' t send MAC as client identifier Signals: USR1 Renew lease USR2 Release lease","title":"OpenWrt"},{"location":"embedded-dev/openwrt/#openwrt","text":"","title":"OpenWrt"},{"location":"embedded-dev/openwrt/#1","text":"OpenWrt git\u4ed3\u5e93\u5730\u5740 git://git.openwrt.org/openwrt/openwrt.git \u53ef\u4ee5\u4f7f\u7528\u955c\u50cf\u7ad9\u70b9\u52a0\u5feb\u514b\u9686\uff0c\u4f8b\u5982 https://gitee.com/harvey520","title":"1. \u514b\u9686"},{"location":"embedded-dev/openwrt/#2","text":"","title":"2. \u914d\u7f6e\u53ca\u7f16\u8bd1"},{"location":"embedded-dev/openwrt/#21","text":"# \u66f4\u65b0\u8f6f\u4ef6\u5305\uff0c\u56fd\u5185\u7f51\u7edc\u73af\u5883\u4e0b\u8f7d\u53ef\u80fd\u4f1a\u6bd4\u8f83\u6162\uff0c\u53ef\u4ee5\u4f7f\u7528\u955c\u50cf\u7ad9\u70b9\u4e0b\u8f7d\uff0c\u5982\u4e0b # \u4fee\u6539 openwrt \u6e90\u7801\u76ee\u5f55\u7684 feeds.conf.default \u6587\u4ef6\u4e2d\u7684\u955c\u50cf\u6e90 # \u5c06 https://git.openwrt.org/feed/packages.git \u6539\u4e3a https://gitee.com/harvey520/packages.git # \u5c06 https://git.openwrt.org/project/luci.git \u6539\u4e3a https://gitee.com/harvey520/luci.git # \u5c06 https://git.openwrt.org/feed/routing.git \u6539\u4e3a https://gitee.com/harvey520/routing.git # \u5c06 https://git.openwrt.org/feed/telephony.git \u6539\u4e3a https://gitee.com/harvey520/telephony.git ./scripts/feeds update -a ./scripts/feeds install -a # This opens the OpenWrt configuration menu for setting target and options. # \u914d\u7f6e\u76ee\u6807\u677f\u5361 make menuconfig","title":"2.1 \u5feb\u901f\u6784\u5efa"},{"location":"embedded-dev/openwrt/#22","text":"# \u6253\u5f00kernel\u914d\u7f6e\u754c\u9762 make kernel_menuconfig","title":"2.2 \u5176\u4ed6\u9009\u9879"},{"location":"embedded-dev/openwrt/#3","text":"","title":"3. \u5b9a\u5236"},{"location":"embedded-dev/openwrt/#31","text":"You can include custom files in your image by placing them in /files, e.g. if you want to have my_config included in your image in the directory /etc/config/ \u21d2 /files/etc/config/my_config. If the files directory doesn't exist on your buildsystem, then create it.","title":"3.1 \u6dfb\u52a0\u81ea\u5b9a\u4e49\u6587\u4ef6"},{"location":"embedded-dev/openwrt/#32-dts","text":"\u8bbe\u5907\u6811\u8def\u5f84\u662f target/linux/xxx/dts \uff0c\u4f8b\u5982rt5350f\u7684\u8bbe\u5907\u6811\u662f target/linux/ramips/dts/rt5350.dtsi \u53ca\u76f8\u5173\u677f\u5361\u6587\u4ef6\u3002","title":"3.2 \u4fee\u6539dts"},{"location":"embedded-dev/openwrt/#33","text":"\u5185\u6838\u6e90\u7801\u8def\u5f84\u5e94\u8be5\u662f build_dir/target-xxx/linux-xxx/linux-x.x.xx \uff0c\u914d\u7f6e\u6587\u4ef6\u7684\u8def\u5f84\u662f target/linux/target-name/xxx/config \uff0c\u4f8b\u5982rt5350f\u7684\u914d\u7f6e\u6587\u4ef6\u662f target/linux/ramips/rt305x/config-4.14 \u3002","title":"3.3 \u5185\u6838\u6e90\u7801"},{"location":"embedded-dev/openwrt/#34-udhcpc","text":"/usr/share/udhcpc/default.script /etc/udhcpc.user root@OpenWrt:/tmp/run# udhcpc --help BusyBox v1.31.1 () multi-call binary. Usage: udhcpc [ -fbqRB ] [ -t N ] [ -T SEC ] [ -A SEC/-n ] [ -i IFACE ] [ -s PROG ] [ -p PIDFILE ] [ -oC ] [ -r IP ] [ -V VENDOR ] [ -F NAME ] [ -x OPT:VAL ] ... [ -O OPT ] ... -i IFACE Interface to use ( default eth0 ) -s PROG Run PROG at DHCP events ( default /usr/share/udhcpc/default.script ) -p FILE Create pidfile -B Request broadcast replies -t N Send up to N discover packets ( default 3 ) -T SEC Pause between packets ( default 3 ) -A SEC Wait if lease is not obtained ( default 20 ) -b Background if lease is not obtained -n Exit if lease is not obtained -q Exit after obtaining lease -R Release IP on exit -f Run in foreground -S Log to syslog too -r IP Request this IP address -o Don 't request any options (unless -O is given) -O OPT Request option OPT from server (cumulative) -x OPT:VAL Include option OPT in sent packets (cumulative) Examples of string, numeric, and hex byte opts: -x hostname:bbox - option 12 -x lease:3600 - option 51 (lease time) -x 0x3d:0100BEEFC0FFEE - option 61 (client id) -x 14:' \"dumpfile\" ' - option 14 (shell-quoted) -F NAME Ask server to update DNS mapping for NAME -V VENDOR Vendor identifier (default ' udhcp VERSION ') -C Don' t send MAC as client identifier Signals: USR1 Renew lease USR2 Release lease","title":"3.4 udhcpc"},{"location":"embedded-dev/rotary-encoder/","text":"\u65cb\u8f6c\u7f16\u7801\u5668 \u00b6 EC11 \u00b6 \u6ce8\uff1a\u4ee5\u4e0b\u5185\u5bb9\u5747\u4e3a\u5206\u6790\u4ee3\u7801\u5f97\u51fa\uff0c\u672a\u7ecf\u5b9e\u9645\u9a8c\u8bc1\u3002 Linux\u5185\u6838\u9a71\u52a8\u4e2d\u65cb\u8f6c\u7f16\u7801\u5668\u7684\u72b6\u6001\u68c0\u6d4b\u903b\u8f91\u5982\u4e0b\u6240\u793a rotary-encoder,encoding = \"gray\" BIT: 1 0 PIN: B A CW/clockwise/\u987a\u65f6\u9488 A ````````````````````|__________________|```````````` B ```````````|_________________|`````````````````````` raw(gray) 01 00 10 11 GPIO_ACTIVE_LOW logic(gray) 10 11 01 00 normal 11 10 01 00 state armed (2-1) report CCW/counter-clockwise/\u9006\u65f6\u9488 A ```````````|_________________|`````````````````````` B ````````````````````|__________________|```````````` raw(gray) 10 00 01 11 GPIO_ACTIVE_LOW logic(gray) 01 11 10 00 normal 01 10 11 00 state armed (2-3) report \u5185\u6838\u9a71\u52a8\u4e2d\u5c06\u8bfb\u53d6\u5230\u7684\u65cb\u8f6c\u7f16\u7801\u5668\u7f16\u7801\u503c\u7531\u683c\u96f7\u7801\u8f6c\u6362\u4e3a\u666e\u901a\u4e8c\u8fdb\u5236\u6570\u503c\uff0c\u5229\u7528\u8be5\u6570\u503c\u5b9e\u73b0\u4e86\u72b6\u6001\u673a\u5e76\u8fdb\u884c\u4e86\u4e8b\u4ef6\u4e0a\u62a5\u3002 \u5185\u6838\u4e2d\u8bfb\u53d6\u7f16\u7801\u5668\u6570\u503c\u5e76\u8fdb\u884c\u8f6c\u6362\u7684\u4ee3\u7801\u5982\u4e0b static unsigned int rotary_encoder_get_state ( struct rotary_encoder * encoder ) { int i ; unsigned int ret = 0 ; for ( i = 0 ; i < encoder -> gpios -> ndescs ; ++ i ) { int val = gpiod_get_value_cansleep ( encoder -> gpios -> desc [ i ]); /* convert from gray encoding to normal */ if ( encoder -> encoding == ROTENC_GRAY && ret & 1 ) val = ! val ; ret = ret << 1 | val ; } return ret & 3 ; } \u5176\u4e2d\uff0c\u5c06\u683c\u96f7\u7801\u8f6c\u6362\u4e3a\u666e\u901a\u6570\u503c\u65f6\u4f7f\u7528\u4e86\u4e00\u4e2a\u7b80\u5355\u7684 ! \u903b\u8f91\uff0c\u5176\u539f\u7406\u662f\u56e0\u4e3a\u65cb\u8f6c\u7f16\u7801\u5668\u6570\u503c\u53ea\u6709\u4e24\u4f4d\uff0c\u5f53\u6211\u4eec\u5c06\u4e24\u4f4d\u7684\u666e\u901a\u6570\u503c\u4e0e\u683c\u96f7\u7801\u904d\u5386\u5199\u51fa\u65f6\u4f1a\u5f97\u5230\u5982\u4e0b\u5185\u5bb9\uff1a normal gray 00 00 01 01 10 11 11 10 \u4e0d\u96be\u770b\u51fa\uff0c\u5f53\u9ad8\u4f4d\u4e3a1\u65f6\u4f4e\u4f4d\u7684\u72b6\u6001\u6b63\u597d\u662f\u76f8\u53cd\u7684\uff0c\u56e0\u6b64\u5f53\u9ad8\u4f4d\u4e3a1\u65f6\u628a\u4f4e\u4f4d\u53d6\u53cd\u4fbf\u53ef\u4ee5\u5c06\u7f16\u7801\u5668\u6570\u503c\u7531\u683c\u96f7\u7801\u8f6c\u6362\u4e3a\u666e\u901a\u6570\u503c\u4e86\u3002","title":"\u65cb\u8f6c\u7f16\u7801\u5668"},{"location":"embedded-dev/rotary-encoder/#_1","text":"","title":"\u65cb\u8f6c\u7f16\u7801\u5668"},{"location":"embedded-dev/rotary-encoder/#ec11","text":"\u6ce8\uff1a\u4ee5\u4e0b\u5185\u5bb9\u5747\u4e3a\u5206\u6790\u4ee3\u7801\u5f97\u51fa\uff0c\u672a\u7ecf\u5b9e\u9645\u9a8c\u8bc1\u3002 Linux\u5185\u6838\u9a71\u52a8\u4e2d\u65cb\u8f6c\u7f16\u7801\u5668\u7684\u72b6\u6001\u68c0\u6d4b\u903b\u8f91\u5982\u4e0b\u6240\u793a rotary-encoder,encoding = \"gray\" BIT: 1 0 PIN: B A CW/clockwise/\u987a\u65f6\u9488 A ````````````````````|__________________|```````````` B ```````````|_________________|`````````````````````` raw(gray) 01 00 10 11 GPIO_ACTIVE_LOW logic(gray) 10 11 01 00 normal 11 10 01 00 state armed (2-1) report CCW/counter-clockwise/\u9006\u65f6\u9488 A ```````````|_________________|`````````````````````` B ````````````````````|__________________|```````````` raw(gray) 10 00 01 11 GPIO_ACTIVE_LOW logic(gray) 01 11 10 00 normal 01 10 11 00 state armed (2-3) report \u5185\u6838\u9a71\u52a8\u4e2d\u5c06\u8bfb\u53d6\u5230\u7684\u65cb\u8f6c\u7f16\u7801\u5668\u7f16\u7801\u503c\u7531\u683c\u96f7\u7801\u8f6c\u6362\u4e3a\u666e\u901a\u4e8c\u8fdb\u5236\u6570\u503c\uff0c\u5229\u7528\u8be5\u6570\u503c\u5b9e\u73b0\u4e86\u72b6\u6001\u673a\u5e76\u8fdb\u884c\u4e86\u4e8b\u4ef6\u4e0a\u62a5\u3002 \u5185\u6838\u4e2d\u8bfb\u53d6\u7f16\u7801\u5668\u6570\u503c\u5e76\u8fdb\u884c\u8f6c\u6362\u7684\u4ee3\u7801\u5982\u4e0b static unsigned int rotary_encoder_get_state ( struct rotary_encoder * encoder ) { int i ; unsigned int ret = 0 ; for ( i = 0 ; i < encoder -> gpios -> ndescs ; ++ i ) { int val = gpiod_get_value_cansleep ( encoder -> gpios -> desc [ i ]); /* convert from gray encoding to normal */ if ( encoder -> encoding == ROTENC_GRAY && ret & 1 ) val = ! val ; ret = ret << 1 | val ; } return ret & 3 ; } \u5176\u4e2d\uff0c\u5c06\u683c\u96f7\u7801\u8f6c\u6362\u4e3a\u666e\u901a\u6570\u503c\u65f6\u4f7f\u7528\u4e86\u4e00\u4e2a\u7b80\u5355\u7684 ! \u903b\u8f91\uff0c\u5176\u539f\u7406\u662f\u56e0\u4e3a\u65cb\u8f6c\u7f16\u7801\u5668\u6570\u503c\u53ea\u6709\u4e24\u4f4d\uff0c\u5f53\u6211\u4eec\u5c06\u4e24\u4f4d\u7684\u666e\u901a\u6570\u503c\u4e0e\u683c\u96f7\u7801\u904d\u5386\u5199\u51fa\u65f6\u4f1a\u5f97\u5230\u5982\u4e0b\u5185\u5bb9\uff1a normal gray 00 00 01 01 10 11 11 10 \u4e0d\u96be\u770b\u51fa\uff0c\u5f53\u9ad8\u4f4d\u4e3a1\u65f6\u4f4e\u4f4d\u7684\u72b6\u6001\u6b63\u597d\u662f\u76f8\u53cd\u7684\uff0c\u56e0\u6b64\u5f53\u9ad8\u4f4d\u4e3a1\u65f6\u628a\u4f4e\u4f4d\u53d6\u53cd\u4fbf\u53ef\u4ee5\u5c06\u7f16\u7801\u5668\u6570\u503c\u7531\u683c\u96f7\u7801\u8f6c\u6362\u4e3a\u666e\u901a\u6570\u503c\u4e86\u3002","title":"EC11"},{"location":"embedded-dev/MCU/arm/","text":"ARM \u00b6 1. _exit\u95ee\u9898 \u00b6 \u94fe\u63a5\u65f6\u62a5\u9519\uff0c\u4fe1\u606f\u5982\u4e0b gcc-arm-none-eabi-8-2019-q3-update/bin/../lib/gcc/arm-none-eabi/8.3.1/../../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc.a ( lib_a-exit.o ) : in function ` exit ': exit.c:(.text.exit+0x16): undefined reference to `_exit' collect2: error: ld returned 1 exit status \u9020\u6210\u4e0a\u8ff0\u95ee\u9898\u7684\u539f\u56e0\u662f\u94fe\u63a5\u65f6\u672a\u6307\u5b9a --specs=nosys.specs \uff0c\u589e\u52a0\u8be5\u53c2\u6570\u5373\u53ef\u89e3\u51b3\u6b64\u95ee\u9898. \u6b64\u5916\uff0c\u5982\u679c\u9700\u8981semihosting\uff0c\u94fe\u63a5\u5982\u4e0b\uff1a $ arm-none-eabi-gcc --specs = rdimon.specs $( OTHER_LINK_OPTIONS ) \u5982\u679c\u4f7f\u7528retarget\uff08\u91cd\u5b9a\u5411\uff09\uff0c\u94fe\u63a5\u5982\u4e0b\uff1a $ arm-none-eabi-gcc --specs = nosys.specs $( OTHER_LINK_OPTIONS )","title":"ARM"},{"location":"embedded-dev/MCU/arm/#arm","text":"","title":"ARM"},{"location":"embedded-dev/MCU/arm/#1-_exit","text":"\u94fe\u63a5\u65f6\u62a5\u9519\uff0c\u4fe1\u606f\u5982\u4e0b gcc-arm-none-eabi-8-2019-q3-update/bin/../lib/gcc/arm-none-eabi/8.3.1/../../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc.a ( lib_a-exit.o ) : in function ` exit ': exit.c:(.text.exit+0x16): undefined reference to `_exit' collect2: error: ld returned 1 exit status \u9020\u6210\u4e0a\u8ff0\u95ee\u9898\u7684\u539f\u56e0\u662f\u94fe\u63a5\u65f6\u672a\u6307\u5b9a --specs=nosys.specs \uff0c\u589e\u52a0\u8be5\u53c2\u6570\u5373\u53ef\u89e3\u51b3\u6b64\u95ee\u9898. \u6b64\u5916\uff0c\u5982\u679c\u9700\u8981semihosting\uff0c\u94fe\u63a5\u5982\u4e0b\uff1a $ arm-none-eabi-gcc --specs = rdimon.specs $( OTHER_LINK_OPTIONS ) \u5982\u679c\u4f7f\u7528retarget\uff08\u91cd\u5b9a\u5411\uff09\uff0c\u94fe\u63a5\u5982\u4e0b\uff1a $ arm-none-eabi-gcc --specs = nosys.specs $( OTHER_LINK_OPTIONS )","title":"1. _exit\u95ee\u9898"},{"location":"embedded-dev/MCU/at-tiny85/","text":"AT tiny85 \u00b6 \u624b\u4e0a\u6709\u4e24\u4e2a\u53ebLipyPad\u7684\u5c0f\u7535\u8def\u677f\uff0c\u67e5\u8be2\u53d1\u73b0\u662f\u4e2aatmel\u7684avr\u5355\u7247\u673a\uff0c\u5e76\u4e14\u53ef\u4ee5\u4f7f\u7528digispark\u63d0\u4f9b\u7684\u5e93\u5728Arduino IDE\u4e2d\u8fdb\u884c\u7f16\u7a0b\u548c\u70e7\u5f55\uff0c\u4f3c\u4e4e\u633a\u597d\u73a9\u7684\u6837\u5b50\uff0c\u5927\u6982\u4e86\u89e3\u4e86\u4e00\u4e0b\uff0c\u968f\u540e\u914d\u7f6e\u4e00\u4e0b\u5f00\u53d1\u73af\u5883\uff0c\u8bb0\u5f55\u4e00\u4e0b\u3002 \u7531\u4e8e\u56fd\u5185\u7f51\u7edc\u73af\u5883\u7684\u539f\u56e0\uff0cArduino IDE\u5f00\u53d1\u677f\u7ba1\u7406\u4e2d\u4e0b\u8f7d\u7d22\u5f15\u6587\u4ef6\u603b\u662f\u5931\u8d25\uff0c\u6240\u4ee5\u9700\u8981\u6dfb\u52a0\u4ee3\u7406\uff0c\u5728Arduino IDE\u7684\u7f51\u7edc\u8bbe\u7f6e\u4e2d\u624b\u52a8\u6dfb\u52a0\u4e00\u4e2ahttp\u7684\u4ee3\u7406\uff0c\u5982\u679c\u4f60\u7684\u7f51\u7edc\u6ca1\u6709\u95ee\u9898\uff0c\u90a3\u4e48\u5c31\u4e0d\u9700\u8981\u8fd9\u4e00\u6b65\u3002 \u6dfb\u52a0\u5f00\u53d1\u677f\uff0c\u6dfb\u52a0\u5f00\u53d1\u677f\u94fe\u63a5 http://digistump.com/package_digistump_index.json \u5e76\u8fdb\u884c\u5b89\u88c5 \u6211\u81ea\u5df1\u6d4b\u8bd5\u7684\u65f6\u5019\u53d1\u73b0\u70e7\u5f55\u4f9d\u8d56libusb-0.1\u7684\u5e93\uff0c\u4f46\u7cfb\u7edf\u9ed8\u8ba4\u5b89\u88c5\u7684\u662f1.0\u7684\uff0c\u6240\u4ee5\u9700\u8981\u4f7f\u7528apt search\u641c\u7d22\u5b89\u88c5\u4e00\u4e0blibusb-0.1 attiny85\u70e7\u5f55\u7684\u56fa\u4ef6\u6765\u81ea\u8fd9\u91cc micronucleus \uff0c\u8fd9\u4e2a\u56fa\u4ef6\u4f7f\u7528\u4e86\u4e00\u4e2a\u53eb v-usb \u7684\u5e93,\u9700\u8981\u5c06micronucleus\u4ed3\u5e93\u4e2dcommandline\u76ee\u5f55\u4e0b\u768449-micronucleus.rules\u6dfb\u52a0\u5230/etc/udev/rules.d\u4e2d\u5e76\u91cd\u542fudev\u670d\u52a1 \u4ee5\u4e0a\uff0c\u6ca1\u4ec0\u4e48\u610f\u5916\u7684\u8bdd\u5230\u8fd9\u91cc\u5c31\u53ef\u4ee5\u6253\u5f00\u4e00\u4e2ablink\u5b9e\u4f8b\u8fdb\u884c\u6d4b\u8bd5\u4e86\uff0c\u5728\u63d0\u793a\u8fde\u63a5\u5f00\u53d1\u677f\u540e\u63d2\u5165USB\u5373\u53ef\u4e0b\u8f7d\u6210\u529f\u4e86\u3002 \u53ef\u4ee5\u53c2\u8003 digispark wiki \u4e2d\u7684\u5b89\u88c5\u53ca\u4f7f\u7528\u5e2e\u52a9\u6587\u6863\u3002","title":"AT tiny85"},{"location":"embedded-dev/MCU/at-tiny85/#at-tiny85","text":"\u624b\u4e0a\u6709\u4e24\u4e2a\u53ebLipyPad\u7684\u5c0f\u7535\u8def\u677f\uff0c\u67e5\u8be2\u53d1\u73b0\u662f\u4e2aatmel\u7684avr\u5355\u7247\u673a\uff0c\u5e76\u4e14\u53ef\u4ee5\u4f7f\u7528digispark\u63d0\u4f9b\u7684\u5e93\u5728Arduino IDE\u4e2d\u8fdb\u884c\u7f16\u7a0b\u548c\u70e7\u5f55\uff0c\u4f3c\u4e4e\u633a\u597d\u73a9\u7684\u6837\u5b50\uff0c\u5927\u6982\u4e86\u89e3\u4e86\u4e00\u4e0b\uff0c\u968f\u540e\u914d\u7f6e\u4e00\u4e0b\u5f00\u53d1\u73af\u5883\uff0c\u8bb0\u5f55\u4e00\u4e0b\u3002 \u7531\u4e8e\u56fd\u5185\u7f51\u7edc\u73af\u5883\u7684\u539f\u56e0\uff0cArduino IDE\u5f00\u53d1\u677f\u7ba1\u7406\u4e2d\u4e0b\u8f7d\u7d22\u5f15\u6587\u4ef6\u603b\u662f\u5931\u8d25\uff0c\u6240\u4ee5\u9700\u8981\u6dfb\u52a0\u4ee3\u7406\uff0c\u5728Arduino IDE\u7684\u7f51\u7edc\u8bbe\u7f6e\u4e2d\u624b\u52a8\u6dfb\u52a0\u4e00\u4e2ahttp\u7684\u4ee3\u7406\uff0c\u5982\u679c\u4f60\u7684\u7f51\u7edc\u6ca1\u6709\u95ee\u9898\uff0c\u90a3\u4e48\u5c31\u4e0d\u9700\u8981\u8fd9\u4e00\u6b65\u3002 \u6dfb\u52a0\u5f00\u53d1\u677f\uff0c\u6dfb\u52a0\u5f00\u53d1\u677f\u94fe\u63a5 http://digistump.com/package_digistump_index.json \u5e76\u8fdb\u884c\u5b89\u88c5 \u6211\u81ea\u5df1\u6d4b\u8bd5\u7684\u65f6\u5019\u53d1\u73b0\u70e7\u5f55\u4f9d\u8d56libusb-0.1\u7684\u5e93\uff0c\u4f46\u7cfb\u7edf\u9ed8\u8ba4\u5b89\u88c5\u7684\u662f1.0\u7684\uff0c\u6240\u4ee5\u9700\u8981\u4f7f\u7528apt search\u641c\u7d22\u5b89\u88c5\u4e00\u4e0blibusb-0.1 attiny85\u70e7\u5f55\u7684\u56fa\u4ef6\u6765\u81ea\u8fd9\u91cc micronucleus \uff0c\u8fd9\u4e2a\u56fa\u4ef6\u4f7f\u7528\u4e86\u4e00\u4e2a\u53eb v-usb \u7684\u5e93,\u9700\u8981\u5c06micronucleus\u4ed3\u5e93\u4e2dcommandline\u76ee\u5f55\u4e0b\u768449-micronucleus.rules\u6dfb\u52a0\u5230/etc/udev/rules.d\u4e2d\u5e76\u91cd\u542fudev\u670d\u52a1 \u4ee5\u4e0a\uff0c\u6ca1\u4ec0\u4e48\u610f\u5916\u7684\u8bdd\u5230\u8fd9\u91cc\u5c31\u53ef\u4ee5\u6253\u5f00\u4e00\u4e2ablink\u5b9e\u4f8b\u8fdb\u884c\u6d4b\u8bd5\u4e86\uff0c\u5728\u63d0\u793a\u8fde\u63a5\u5f00\u53d1\u677f\u540e\u63d2\u5165USB\u5373\u53ef\u4e0b\u8f7d\u6210\u529f\u4e86\u3002 \u53ef\u4ee5\u53c2\u8003 digispark wiki \u4e2d\u7684\u5b89\u88c5\u53ca\u4f7f\u7528\u5e2e\u52a9\u6587\u6863\u3002","title":"AT tiny85"},{"location":"embedded-dev/MCU/dbg-tools/","text":"\u8c03\u8bd5\u5de5\u5177 \u00b6 JLINK \u00b6 \u4f7f\u7528eclipse\u7b49IDE\u65f6\u53ef\u80fd\u4f1a\u9700\u8981\u4f7f\u7528JLink\u8fdb\u884c\u7a0b\u5e8f\u70e7\u5f55\uff0c\u5982\u679c\u4f7f\u7528\u56fe\u5f62\u754c\u9762\u7684\u8bdd\u9700\u8981\u5728\u591a\u4e2a\u754c\u9762\u4e4b\u95f4\u8fdb\u884c\u5207\u6362\uff0c\u4e0d\u662f\u5f88\u65b9\u4fbf\uff0c\u8fd9\u91cc\u53ef\u4ee5\u901a\u8fc7Tools\u4e4b\u7c7b\u7684IDE\u5de5\u5177\u901a\u8fc7\u547d\u4ee4\u884c\u76f4\u63a5\u8c03\u7528JLink\u4ece\u800c\u5b9e\u73b0\u7a0b\u5e8f\u4e0b\u8f7d\uff0c\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\u3002 JLink\u6709\u4e00\u4e2a\u5f88\u5b9e\u7528\u7684\u547d\u4ee4\u884c\u53c2\u6570\u662f-CommandFile <*.jlink>\uff0c\u901a\u8fc7\u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u5411JLink\u7a0b\u5e8f\u4f20\u9012\u6211\u4eec\u9700\u8981\u6267\u884c\u7684\u547d\u4ee4\uff0c\u8fd9\u4e2a*.jlink\u6587\u4ef6\u7684\u5185\u5bb9\u5176\u5b9e\u5c31\u662fJLink\u5185\u90e8\u547d\u4ee4\u7684\u6709\u5e8f\u6392\u5217\uff0c\u4e0b\u9762\u7684\u793a\u4f8b\u4fbf\u662f\u6211\u5728\u70e7\u5f55STM32F030K6\u7684\u7a0b\u5e8f\u65f6\u4f7f\u7528\u5230\u7684jlink\u6587\u4ef6\u3002 Device STM32F030K6 si SWD speed 4000 loadfile . \\b in \\R elease \\s tm32f030.hex r g exit Device \u547d\u4ee4\u6307\u5b9a\u76ee\u6807\u82af\u7247 si \u547d\u4ee4\u9009\u62e9\u8c03\u8bd5\u5668\u4f7f\u7528\u7684\u603b\u7ebf\uff0c\u5982SWD\u3001JTAG\u7b49 speed \u6307\u5b9a\u4f20\u8f93\u901f\u7387 loadfile \u547d\u4ee4\u52a0\u8f7d\u76ee\u6807\u6587\u4ef6\u81f3\u5355\u7247\u673a\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528loadbin r g exit \u4f9d\u6b21\u662f\u590d\u4f4d\u3001\u8fd0\u884c\u7136\u540e\u9000\u51faJLink.exe\u7a0b\u5e8f \u5c06\u4e0a\u9762\u7684\u8fd9\u51e0\u53e5\u4fdd\u5b58\u6210\u6587\u4ef6load.jlink\uff0c\u653e\u5230\u5de5\u7a0b\u76ee\u5f55\u4e2d\u53bb\uff0c\u7136\u540e\u4f7f\u7528IDE\u63d0\u4f9b\u7684\u5916\u90e8\u8c03\u7528\u5de5\u5177\u4fbf\u80fd\u76f4\u63a5\u5c06\u7a0b\u5e8f\u70e7\u5f55\u81f3\u5355\u7247\u673a\u4e86\u3002 DAPLINK \u00b6 CMSIS DAP\u662fARM\u63a8\u51fa\u7684\u5f00\u6e90\u65b9\u6848\u7684\u8c03\u8bd5\u5668\uff0c\u76ee\u524d\u8be5\u9879\u76ee\u5728Github\u4e0a\u5df2\u66f4\u540d\u4e3aDAPLink\uff0cARM\u5b98\u65b9\u63a8\u8350\u7684GDB Server\u662fpyocd\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528openocd\u6765\u4f5c\u4e3a\u8c03\u8bd5\u670d\u52a1\u5668\u3002 \u4e4b\u524d\u4ece\u6069\u667a\u6d66\u6280\u672f\u793e\u533a\u8bba\u575b\u7533\u8bf7\u5230\u4e86\u4e07\u5229\u7684\u5f00\u53d1\u677fLPC54114\uff0c\u8be5\u677f\u677f\u8f7dCMSIS DAP\u8c03\u8bd5\u5668\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u8fdb\u884c\u8c03\u8bd5\u3002\u6700\u521d\u6211\u6253\u7b97\u4f7f\u7528openocd\u6765\u4f5c\u4e3aGDB Server\uff0c\u4f46\u63a5\u4e0b\u6765\u6211\u53d1\u73b0\u76ee\u524d\u7248\u672c\u7684openocd\u5e76\u6ca1\u6709\u63d0\u4f9bLPC54114\u5fae\u63a7\u5236\u5668\u7684flash\u70e7\u5f55\u7b97\u6cd5\u652f\u6301\uff0c\u7136\u540e\u53ea\u80fd\u4f7f\u7528pyocd\u4e86\uff0c\u7136\u800cRelease\u7248\u672c(2018\u5e743\u6708\u5de6\u53f3\uff0c\u76ee\u524d\u7684\u7248\u672c\u5df2\u63d0\u4f9b\u4e86LPC54114\u652f\u6301)\u7684pyocd\u540c\u6837\u6ca1\u6709\u63d0\u4f9b\u652f\u6301,\u4f46\u662f\u6211\u5728github\u4ed3\u5e93\u4e2d\u53d1\u73b0\u5df2\u7ecf\u6709LPC54114\u7684\u652f\u6301\uff0c\u7136\u540e\u6309\u7167\u63d0\u793a\u4ece\u6e90\u7801\u8fdb\u884c\u4e86\u5b89\u88c5\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86\u3002 \u66f4\u65b0\u56fa\u4ef6 \u00b6 linux\u7cfb\u7edf\u4e0b\u66f4\u65b0\u56fa\u4ef6\u65e0\u6cd5\u4f7f\u7528\u62d6\u62fd\u5f0f\u66f4\u65b0\uff0c\u9700\u8981\u4f7f\u7528\u5982\u4e0b\u7684\u547d\u4ee4 dd if ={ new_firmware.bin } of ={ firmware.bin } conv = notrunc pyocd \u00b6 \u76ee\u524d\u5f88\u5c11\u4f1a\u4f7f\u7528pyocd\u4f5c\u4e3agdbserver\u6765\u8fdb\u884c\u5355\u6b65\u8c03\u8bd5\uff0c\u4e3b\u8981\u7528\u5b83\u6765\u4e0b\u8f7d\u7a0b\u5e8f\uff0c\u547d\u4ee4\u5982\u4e0b\uff0c\u53c2\u6570\u90fd\u6bd4\u8f83\u4e00\u76ee\u4e86\u7136\u4e86 pyocd flash -t lpc54114 xxx.bin \u67e5\u770bpyocd\u652f\u6301\u7684target\u5217\u8868\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4 pyocd list --target \u5176\u4ed6\u529f\u80fd\u7684\u4f7f\u7528\u53ef\u4ee5\u53c2\u8003\u5e2e\u52a9\u4fe1\u606f\u4ee5\u53capyocd\u7684 \u652f\u6301\u6587\u6863 \u3002 openocd \u00b6 \u81f3\u4e8eopenocd\uff0c\u867d\u7136\u6ca1\u6709\u4f7f\u7528\uff0c\u4f46\u5728\u8fd9\u91cc\u4e5f\u505a\u4e9b\u8bb0\u5f55\uff0c\u65b9\u4fbf\u4ee5\u540e\u4f7f\u7528\u3002\u4e0b\u9762\u6587\u6863\u6765\u6e90\u4e8e CMSIS-DAP\u548copenOCD\u90a3\u4e9b\u4e8b ,\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b(\u4ee5stm32\u4e3a\u4f8b) \u65b0\u5efa\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6ocd-stm32.cfg\uff0c\u4f7f\u7528swd\u63a5\u53e3 interface cmsis-dap transport select swd source [ find target/stm32f1x.cfg ] \u8fde\u63a5CMSIS-DAP\u548cstm32f103\uff0c\u52a0\u8f7d\u811a\u672c openocd -f ./ocd-stm32.cfg \u8fd9\u6837\u663e\u793a\u5c31\u662f\u8fde\u63a5\u6210\u529f\u4e86 Open On-Chip Debugger 0 .9.0 ( 2015 -05-19-12:09 ) Licensed under GNU GPL v2 For bug reports, read http://openocd.org/doc/doxygen/bugs.html Info : only one transport option ; autoselect 'swd' Warn : Transport \"swd\" was already selected adapter speed: 1000 kHz adapter_nsrst_delay: 100 none separate cortex_m reset_config sysresetreq Info : CMSIS-DAP: SWD Supported Info : CMSIS-DAP: Interface Initialised ( SWD ) Info : CMSIS-DAP: FW Version = 1 .0 Info : SWCLK/TCK = 1 SWDIO/TMS = 1 TDI = 0 TDO = 0 nTRST = 0 nRESET = 1 Info : CMSIS-DAP: Interface ready Info : clock speed 1000 kHz Info : SWD IDCODE 0x1ba01477 Info : stm32f1x.cpu: hardware has 6 breakpoints, 4 watchpoints openOCD\u9ed8\u8ba4\u7aef\u53e3telnet 4444\uff0cgdb server 3333\uff0c\u7136\u540etelnet\u8fde\u63a5\u5230 127.0.0.1:4444\uff0c\u5c31\u53ef\u4ee5\u4e3a\u6240\u6b32\u4e3a\u4e86\u3002 \u4e0b\u8f7d\u4e00\u4e2ahex\u6587\u4ef6\u5230flash flash write_image erase ./F103.hex","title":"\u8c03\u8bd5\u5de5\u5177"},{"location":"embedded-dev/MCU/dbg-tools/#_1","text":"","title":"\u8c03\u8bd5\u5de5\u5177"},{"location":"embedded-dev/MCU/dbg-tools/#jlink","text":"\u4f7f\u7528eclipse\u7b49IDE\u65f6\u53ef\u80fd\u4f1a\u9700\u8981\u4f7f\u7528JLink\u8fdb\u884c\u7a0b\u5e8f\u70e7\u5f55\uff0c\u5982\u679c\u4f7f\u7528\u56fe\u5f62\u754c\u9762\u7684\u8bdd\u9700\u8981\u5728\u591a\u4e2a\u754c\u9762\u4e4b\u95f4\u8fdb\u884c\u5207\u6362\uff0c\u4e0d\u662f\u5f88\u65b9\u4fbf\uff0c\u8fd9\u91cc\u53ef\u4ee5\u901a\u8fc7Tools\u4e4b\u7c7b\u7684IDE\u5de5\u5177\u901a\u8fc7\u547d\u4ee4\u884c\u76f4\u63a5\u8c03\u7528JLink\u4ece\u800c\u5b9e\u73b0\u7a0b\u5e8f\u4e0b\u8f7d\uff0c\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\u3002 JLink\u6709\u4e00\u4e2a\u5f88\u5b9e\u7528\u7684\u547d\u4ee4\u884c\u53c2\u6570\u662f-CommandFile <*.jlink>\uff0c\u901a\u8fc7\u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u5411JLink\u7a0b\u5e8f\u4f20\u9012\u6211\u4eec\u9700\u8981\u6267\u884c\u7684\u547d\u4ee4\uff0c\u8fd9\u4e2a*.jlink\u6587\u4ef6\u7684\u5185\u5bb9\u5176\u5b9e\u5c31\u662fJLink\u5185\u90e8\u547d\u4ee4\u7684\u6709\u5e8f\u6392\u5217\uff0c\u4e0b\u9762\u7684\u793a\u4f8b\u4fbf\u662f\u6211\u5728\u70e7\u5f55STM32F030K6\u7684\u7a0b\u5e8f\u65f6\u4f7f\u7528\u5230\u7684jlink\u6587\u4ef6\u3002 Device STM32F030K6 si SWD speed 4000 loadfile . \\b in \\R elease \\s tm32f030.hex r g exit Device \u547d\u4ee4\u6307\u5b9a\u76ee\u6807\u82af\u7247 si \u547d\u4ee4\u9009\u62e9\u8c03\u8bd5\u5668\u4f7f\u7528\u7684\u603b\u7ebf\uff0c\u5982SWD\u3001JTAG\u7b49 speed \u6307\u5b9a\u4f20\u8f93\u901f\u7387 loadfile \u547d\u4ee4\u52a0\u8f7d\u76ee\u6807\u6587\u4ef6\u81f3\u5355\u7247\u673a\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528loadbin r g exit \u4f9d\u6b21\u662f\u590d\u4f4d\u3001\u8fd0\u884c\u7136\u540e\u9000\u51faJLink.exe\u7a0b\u5e8f \u5c06\u4e0a\u9762\u7684\u8fd9\u51e0\u53e5\u4fdd\u5b58\u6210\u6587\u4ef6load.jlink\uff0c\u653e\u5230\u5de5\u7a0b\u76ee\u5f55\u4e2d\u53bb\uff0c\u7136\u540e\u4f7f\u7528IDE\u63d0\u4f9b\u7684\u5916\u90e8\u8c03\u7528\u5de5\u5177\u4fbf\u80fd\u76f4\u63a5\u5c06\u7a0b\u5e8f\u70e7\u5f55\u81f3\u5355\u7247\u673a\u4e86\u3002","title":"JLINK"},{"location":"embedded-dev/MCU/dbg-tools/#daplink","text":"CMSIS DAP\u662fARM\u63a8\u51fa\u7684\u5f00\u6e90\u65b9\u6848\u7684\u8c03\u8bd5\u5668\uff0c\u76ee\u524d\u8be5\u9879\u76ee\u5728Github\u4e0a\u5df2\u66f4\u540d\u4e3aDAPLink\uff0cARM\u5b98\u65b9\u63a8\u8350\u7684GDB Server\u662fpyocd\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528openocd\u6765\u4f5c\u4e3a\u8c03\u8bd5\u670d\u52a1\u5668\u3002 \u4e4b\u524d\u4ece\u6069\u667a\u6d66\u6280\u672f\u793e\u533a\u8bba\u575b\u7533\u8bf7\u5230\u4e86\u4e07\u5229\u7684\u5f00\u53d1\u677fLPC54114\uff0c\u8be5\u677f\u677f\u8f7dCMSIS DAP\u8c03\u8bd5\u5668\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u8fdb\u884c\u8c03\u8bd5\u3002\u6700\u521d\u6211\u6253\u7b97\u4f7f\u7528openocd\u6765\u4f5c\u4e3aGDB Server\uff0c\u4f46\u63a5\u4e0b\u6765\u6211\u53d1\u73b0\u76ee\u524d\u7248\u672c\u7684openocd\u5e76\u6ca1\u6709\u63d0\u4f9bLPC54114\u5fae\u63a7\u5236\u5668\u7684flash\u70e7\u5f55\u7b97\u6cd5\u652f\u6301\uff0c\u7136\u540e\u53ea\u80fd\u4f7f\u7528pyocd\u4e86\uff0c\u7136\u800cRelease\u7248\u672c(2018\u5e743\u6708\u5de6\u53f3\uff0c\u76ee\u524d\u7684\u7248\u672c\u5df2\u63d0\u4f9b\u4e86LPC54114\u652f\u6301)\u7684pyocd\u540c\u6837\u6ca1\u6709\u63d0\u4f9b\u652f\u6301,\u4f46\u662f\u6211\u5728github\u4ed3\u5e93\u4e2d\u53d1\u73b0\u5df2\u7ecf\u6709LPC54114\u7684\u652f\u6301\uff0c\u7136\u540e\u6309\u7167\u63d0\u793a\u4ece\u6e90\u7801\u8fdb\u884c\u4e86\u5b89\u88c5\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86\u3002","title":"DAPLINK"},{"location":"embedded-dev/MCU/dbg-tools/#_2","text":"linux\u7cfb\u7edf\u4e0b\u66f4\u65b0\u56fa\u4ef6\u65e0\u6cd5\u4f7f\u7528\u62d6\u62fd\u5f0f\u66f4\u65b0\uff0c\u9700\u8981\u4f7f\u7528\u5982\u4e0b\u7684\u547d\u4ee4 dd if ={ new_firmware.bin } of ={ firmware.bin } conv = notrunc","title":"\u66f4\u65b0\u56fa\u4ef6"},{"location":"embedded-dev/MCU/dbg-tools/#pyocd","text":"\u76ee\u524d\u5f88\u5c11\u4f1a\u4f7f\u7528pyocd\u4f5c\u4e3agdbserver\u6765\u8fdb\u884c\u5355\u6b65\u8c03\u8bd5\uff0c\u4e3b\u8981\u7528\u5b83\u6765\u4e0b\u8f7d\u7a0b\u5e8f\uff0c\u547d\u4ee4\u5982\u4e0b\uff0c\u53c2\u6570\u90fd\u6bd4\u8f83\u4e00\u76ee\u4e86\u7136\u4e86 pyocd flash -t lpc54114 xxx.bin \u67e5\u770bpyocd\u652f\u6301\u7684target\u5217\u8868\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4 pyocd list --target \u5176\u4ed6\u529f\u80fd\u7684\u4f7f\u7528\u53ef\u4ee5\u53c2\u8003\u5e2e\u52a9\u4fe1\u606f\u4ee5\u53capyocd\u7684 \u652f\u6301\u6587\u6863 \u3002","title":"pyocd"},{"location":"embedded-dev/MCU/dbg-tools/#openocd","text":"\u81f3\u4e8eopenocd\uff0c\u867d\u7136\u6ca1\u6709\u4f7f\u7528\uff0c\u4f46\u5728\u8fd9\u91cc\u4e5f\u505a\u4e9b\u8bb0\u5f55\uff0c\u65b9\u4fbf\u4ee5\u540e\u4f7f\u7528\u3002\u4e0b\u9762\u6587\u6863\u6765\u6e90\u4e8e CMSIS-DAP\u548copenOCD\u90a3\u4e9b\u4e8b ,\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b(\u4ee5stm32\u4e3a\u4f8b) \u65b0\u5efa\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6ocd-stm32.cfg\uff0c\u4f7f\u7528swd\u63a5\u53e3 interface cmsis-dap transport select swd source [ find target/stm32f1x.cfg ] \u8fde\u63a5CMSIS-DAP\u548cstm32f103\uff0c\u52a0\u8f7d\u811a\u672c openocd -f ./ocd-stm32.cfg \u8fd9\u6837\u663e\u793a\u5c31\u662f\u8fde\u63a5\u6210\u529f\u4e86 Open On-Chip Debugger 0 .9.0 ( 2015 -05-19-12:09 ) Licensed under GNU GPL v2 For bug reports, read http://openocd.org/doc/doxygen/bugs.html Info : only one transport option ; autoselect 'swd' Warn : Transport \"swd\" was already selected adapter speed: 1000 kHz adapter_nsrst_delay: 100 none separate cortex_m reset_config sysresetreq Info : CMSIS-DAP: SWD Supported Info : CMSIS-DAP: Interface Initialised ( SWD ) Info : CMSIS-DAP: FW Version = 1 .0 Info : SWCLK/TCK = 1 SWDIO/TMS = 1 TDI = 0 TDO = 0 nTRST = 0 nRESET = 1 Info : CMSIS-DAP: Interface ready Info : clock speed 1000 kHz Info : SWD IDCODE 0x1ba01477 Info : stm32f1x.cpu: hardware has 6 breakpoints, 4 watchpoints openOCD\u9ed8\u8ba4\u7aef\u53e3telnet 4444\uff0cgdb server 3333\uff0c\u7136\u540etelnet\u8fde\u63a5\u5230 127.0.0.1:4444\uff0c\u5c31\u53ef\u4ee5\u4e3a\u6240\u6b32\u4e3a\u4e86\u3002 \u4e0b\u8f7d\u4e00\u4e2ahex\u6587\u4ef6\u5230flash flash write_image erase ./F103.hex","title":"openocd"},{"location":"embedded-dev/MCU/msp430/","text":"MSP430 \u00b6 LaunchPad G2 \u00b6 \u624b\u91cc\u6709\u4e24\u5757LaunchPad G2\uff0c\u95f2\u7740\u6ca1\u4e8b\u5728linux\u4e0b\u642d\u4e86\u4e00\u4e0b\u7f16\u8bd1\u73af\u5883\uff0c\u5de5\u5177\u94fe\u76f4\u63a5\u53bbTI\u5b98\u7f51\u4e0b\u8f7dgcc\u5c31\u597d\uff0c\u4e0d\u8fc7\u8fd8\u5f97\u4e0b\u8f7d\u4e00\u4e2a\u652f\u6301\u5305\uff0c\u8fd9\u4e2a\u652f\u6301\u5305\u5305\u542b\u4e86\u6240\u6709\u8bbe\u5907\u7684\u5934\u6587\u4ef6\u548c\u94fe\u63a5\u811a\u672c\uff0c\u5b98\u7f51\u5feb\u901f\u6307\u5357\u91cc\u8bf4\u660e\u4e86\u652f\u6301\u6587\u4ef6\u5e94\u8be5\u62f7\u8d1d\u5230\u54ea\u91cc\u3002 \u7136\u540e\u5b89\u88c5\u4e00\u4e0b mspdebug \uff0c\u76f4\u63a5apt\u5c31\u597d\uff0c\u8fd9\u4e2a\u7528\u6765\u70e7\u5f55\u7a0b\u5e8f\u5230\u5355\u7247\u673a\u4e2d\u3002 \u6700\u540e\u5199\u4e2a\u7b80\u5355\u7684blink\uff0c\u5199\u4e2a\u7b80\u5355\u7684Makefile\u7f16\u8bd1\u4e00\u4e0b\uff0c\u7136\u540e sudo mspdebug rf2500 'prog xxx.bin' \u7a0b\u5e8f\u5c31\u6b22\u5feb\u7684\u8fd0\u884c\u8d77\u6765\u4e86\u3002","title":"MSP430"},{"location":"embedded-dev/MCU/msp430/#msp430","text":"","title":"MSP430"},{"location":"embedded-dev/MCU/msp430/#launchpad-g2","text":"\u624b\u91cc\u6709\u4e24\u5757LaunchPad G2\uff0c\u95f2\u7740\u6ca1\u4e8b\u5728linux\u4e0b\u642d\u4e86\u4e00\u4e0b\u7f16\u8bd1\u73af\u5883\uff0c\u5de5\u5177\u94fe\u76f4\u63a5\u53bbTI\u5b98\u7f51\u4e0b\u8f7dgcc\u5c31\u597d\uff0c\u4e0d\u8fc7\u8fd8\u5f97\u4e0b\u8f7d\u4e00\u4e2a\u652f\u6301\u5305\uff0c\u8fd9\u4e2a\u652f\u6301\u5305\u5305\u542b\u4e86\u6240\u6709\u8bbe\u5907\u7684\u5934\u6587\u4ef6\u548c\u94fe\u63a5\u811a\u672c\uff0c\u5b98\u7f51\u5feb\u901f\u6307\u5357\u91cc\u8bf4\u660e\u4e86\u652f\u6301\u6587\u4ef6\u5e94\u8be5\u62f7\u8d1d\u5230\u54ea\u91cc\u3002 \u7136\u540e\u5b89\u88c5\u4e00\u4e0b mspdebug \uff0c\u76f4\u63a5apt\u5c31\u597d\uff0c\u8fd9\u4e2a\u7528\u6765\u70e7\u5f55\u7a0b\u5e8f\u5230\u5355\u7247\u673a\u4e2d\u3002 \u6700\u540e\u5199\u4e2a\u7b80\u5355\u7684blink\uff0c\u5199\u4e2a\u7b80\u5355\u7684Makefile\u7f16\u8bd1\u4e00\u4e0b\uff0c\u7136\u540e sudo mspdebug rf2500 'prog xxx.bin' \u7a0b\u5e8f\u5c31\u6b22\u5feb\u7684\u8fd0\u884c\u8d77\u6765\u4e86\u3002","title":"LaunchPad G2"},{"location":"embedded-dev/MCU/rt-thread/","text":"RT-Thread \u00b6 \u97f3\u9891\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1 \u00b6 \u5f88\u4e45\u4e4b\u524d\u673a\u7f18\u5de7\u5408\u62ff\u5230\u4e00\u5757\u4e07\u5229\u7535\u5b50\u7684LPC54114-Lite\u5f00\u53d1\u677f\uff0c\u4e00\u76f4\u4ee5\u6765\u90fd\u5bf9mp3\u5ff5\u5ff5\u4e0d\u5fd8\uff0c\u4e4b\u524d\u4e5f\u5728\u8fd9\u5757\u677f\u5b50\u4e0a\u8dd1\u8fc7libmp3\u8fd9\u4e2a\u5f00\u6e90\u7684\u89e3\u7801\u5e93\u6765\u64ad\u653emp3\uff0c\u4e0d\u8fc7\u90a3\u65f6\u8dd1\u7684\u662ffreeRTOS\uff0c\u6700\u8fd1\u67e5\u770brt-thread\u6587\u6863\u65f6\u6070\u5de7\u770b\u5230rt-thread\u6587\u6863\u4e2d\u5305\u542b\u4e86audio\u8bbe\u5907\u76f8\u5173\u7684\u8bf4\u660e\uff0c\u5fc3\u8840\u6765\u6f6e\uff0c\u53c2\u8003\u5176\u4ed6bsp\u4e2d\u5df2\u6709\u7684audio\u9a71\u52a8\uff0c\u505a\u4e86\u4e00\u4e9b\u57fa\u7840\u7684\u529f\u80fd\uff0c\u7b80\u5355\u5b9e\u73b0\u4e86\u4e00\u4e0b\u8be5\u677f\u5361\u4e0a\u7684\u97f3\u9891\u8bbe\u5907\u9a71\u52a8\u3002 \u9a71\u52a8\u7ed3\u6784 \u00b6 \u7b80\u5355\u770b\u4e86\u4e0baudio\u8bbe\u5907\u7684\u6e90\u7801\uff0crt-thread\u7684\u8bbe\u5907\u9a71\u52a8\u8bbe\u8ba1\u601d\u60f3\u548cLinux\u63a5\u8fd1\uff0c\u63d0\u4f9b\u4e86\u4e00\u7cfb\u7edf\u901a\u7528\u7684ops\u56de\u8c03\u51fd\u6570\uff0c\u7531\u7279\u5b9a\u7684bsp\u4ee3\u7801\u6765\u5b9e\u73b0\u8fd9\u4e9bops\u56de\u8c03\u51fd\u6570\uff0c\u7136\u540e\u7528\u6237\u4ee3\u7801\u5c31\u80fd\u4f7f\u7528\u901a\u7528\u7684read/write\u6765\u64cd\u4f5c\u8bbe\u5907\u4e86\u3002\u8fd9\u91cc\u6211\u4eec\u53ea\u9700\u8981\u5173\u6ce8 struct rt_audio_ops { rt_err_t ( * getcaps )( struct rt_audio_device * audio , struct rt_audio_caps * caps ); rt_err_t ( * configure )( struct rt_audio_device * audio , struct rt_audio_caps * caps ); rt_err_t ( * init )( struct rt_audio_device * audio ); rt_err_t ( * start )( struct rt_audio_device * audio , int stream ); rt_err_t ( * stop )( struct rt_audio_device * audio , int stream ); rt_size_t ( * transmit )( struct rt_audio_device * audio , const void * writeBuf , void * readBuf , rt_size_t size ); /* get page size of codec or private buffer's info */ void ( * buffer_info )( struct rt_audio_device * audio , struct rt_audio_buf_info * info ); }; \u8fd9\u4e2aops\u7ed3\u6784\u5c31\u597d\u4e86\uff0c\u6bcf\u4e2a\u56de\u8c03\u51fd\u6570\u7684\u529f\u80fd\u4ece\u5b57\u9762\u610f\u4e49\u770b\u5df2\u7ecf\u5f88\u660e\u663e\u4e86\uff0c\u5177\u4f53\u7684\u5b9e\u73b0\u6211\u4eec\u53ef\u4ee5\u53c2\u8003\u5176\u4ed6bsp\u5df2\u6709\u7684audio\u9a71\u52a8\uff0c\u8fd9\u91cc\u6211\u53c2\u8003\u7684\u662fqemu-vexpress-a9\u8fd9\u4e2absp\u4e2d\u7684audio\u9a71\u52a8\uff0c\u5176\u5b9e\u53ea\u8981\u6b63\u786e\u7684\u5b9e\u73b0 init \u3001 start \u3001 stop \u3001 transmit \u3001 buffer_info \u8fd9\u51e0\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u97f3\u9891\u8bbe\u5907\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86\uff0c\u53ea\u4e0d\u8fc7\u65e0\u6cd5\u8fdb\u884c\u914d\u7f6e\u3002 \u8fd9\u91cc\u8fd8\u9700\u8981\u5173\u6ce8\u7684\u662f rt_audio_tx_complete \u8fd9\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u4f1a\u5c06\u5f85\u53d1\u9001\u7684\u6570\u636e\u62f7\u8d1d\u81f3 buffer_info \u6240\u6307\u5b9a\u7684\u7f13\u51b2\u533a\u4e2d\uff0c\u5982\u679ctransmit\u8fd9\u4e2a\u56de\u8c03\u5b58\u5728\u7684\u8bdd\uff0c\u4f1a\u89e6\u53d1\u8be5\u56de\u8c03\u8fdb\u884c\u6570\u636e\u4f20\u8f93\u3002 ops\u56de\u8c03\u5b9e\u73b0 \u00b6 \u8fd9\u4e9bops\u56de\u8c03\u90fd\u8ddf\u5177\u4f53\u7684\u5668\u4ef6\u548c\u786c\u4ef6\u8fde\u7ebf\u76f8\u5173\u4e86\uff0c init \u505a\u5177\u4f53\u786c\u4ef6\u7684\u521d\u59cb\u5316\uff0c start \u4f7f\u80fd\u5668\u4ef6\u8fdb\u884c\u6570\u636e\u4f20\u8f93\uff0c stop \u7ed3\u675f\u6570\u636e\u4f20\u8f93\uff0c transmit \u5f00\u59cb\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u5757\u4f20\u8f93\uff0c buffer_info \u83b7\u53d6\u7f13\u5b58\u533a\u4fe1\u606f\uff0c\u76f4\u63a5\u53c2\u8003\u5176\u4ed6bsp\u7684\u5b9e\u73b0\u5c31\u53ef\u4ee5\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u4e00\u822c\u4f7f\u7528DMA\u6765\u8fdb\u884c\u97f3\u9891\u6570\u636e\u7684\u4f20\u8f93\uff0c\u8fd9\u91cc\u9700\u8981\u8003\u8651\u4e0d\u540cmcu\u7684\u5dee\u5f02\uff0c\u5bf9\u4e8estm32f4\u6765\u8bf4\uff0c\u4ed6\u7684dma\u652f\u6301\u534a\u7a7a\u548c\u5168\u7a7a\u4e2d\u65ad\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06dma\u914d\u7f6e\u4e3a\u4e52\u4e53\u4f20\u8f93\u6a21\u5f0f\uff0c\u53ef\u4ee5\u7701\u53bbtransmit\u8fd9\u4e2a\u56de\u8c03\u3002 \u5bf9\u4e8eLPC54114-Lite\u8fd9\u4e2a\u677f\u5361\uff0c\u4ed6\u7684dma\u662f\u53ef\u4ee5\u914d\u7f6e\u6210\u4e52\u4e53\u6a21\u5f0f\u7684\uff0c\u4f46\u662fdma\u53ea\u6709\u5168\u7a7a\u8fd9\u4e2a\u7c7b\u578b\u7684\u4e2d\u65ad\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u6682\u4e14\u5b9e\u73b0\u4e00\u4e0btransmit\u8fd9\u4e2a\u56de\u8c03\uff0c\u7531\u8fd9\u4e2a\u56de\u8c03\u6765\u89e6\u53d1\u6570\u636e\u7684\u4f20\u8f93\u3002 \u57fa\u672c\u4e0a\u5230\u8fd9\u91cc\u97f3\u9891\u8bbe\u5907\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u7b80\u5355\u7684\u6d4b\u8bd5\u64ad\u653e\u56fa\u5b9a\u9891\u7387\u7684\u97f3\u9891\uff0c\u7136\u540e\u5b9e\u73b0 configure \u56de\u8c03\u4e4b\u540e\u5c31\u53ef\u4ee5\u8bbe\u7f6e\u97f3\u9891\u91c7\u6837\u7387\u8fd9\u4e9b\u53c2\u6570\u4e86\uff0c\u97f3\u9891\u8bbe\u5907\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86\u3002","title":"RT-Thread"},{"location":"embedded-dev/MCU/rt-thread/#rt-thread","text":"","title":"RT-Thread"},{"location":"embedded-dev/MCU/rt-thread/#_1","text":"\u5f88\u4e45\u4e4b\u524d\u673a\u7f18\u5de7\u5408\u62ff\u5230\u4e00\u5757\u4e07\u5229\u7535\u5b50\u7684LPC54114-Lite\u5f00\u53d1\u677f\uff0c\u4e00\u76f4\u4ee5\u6765\u90fd\u5bf9mp3\u5ff5\u5ff5\u4e0d\u5fd8\uff0c\u4e4b\u524d\u4e5f\u5728\u8fd9\u5757\u677f\u5b50\u4e0a\u8dd1\u8fc7libmp3\u8fd9\u4e2a\u5f00\u6e90\u7684\u89e3\u7801\u5e93\u6765\u64ad\u653emp3\uff0c\u4e0d\u8fc7\u90a3\u65f6\u8dd1\u7684\u662ffreeRTOS\uff0c\u6700\u8fd1\u67e5\u770brt-thread\u6587\u6863\u65f6\u6070\u5de7\u770b\u5230rt-thread\u6587\u6863\u4e2d\u5305\u542b\u4e86audio\u8bbe\u5907\u76f8\u5173\u7684\u8bf4\u660e\uff0c\u5fc3\u8840\u6765\u6f6e\uff0c\u53c2\u8003\u5176\u4ed6bsp\u4e2d\u5df2\u6709\u7684audio\u9a71\u52a8\uff0c\u505a\u4e86\u4e00\u4e9b\u57fa\u7840\u7684\u529f\u80fd\uff0c\u7b80\u5355\u5b9e\u73b0\u4e86\u4e00\u4e0b\u8be5\u677f\u5361\u4e0a\u7684\u97f3\u9891\u8bbe\u5907\u9a71\u52a8\u3002","title":"\u97f3\u9891\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1"},{"location":"embedded-dev/MCU/rt-thread/#_2","text":"\u7b80\u5355\u770b\u4e86\u4e0baudio\u8bbe\u5907\u7684\u6e90\u7801\uff0crt-thread\u7684\u8bbe\u5907\u9a71\u52a8\u8bbe\u8ba1\u601d\u60f3\u548cLinux\u63a5\u8fd1\uff0c\u63d0\u4f9b\u4e86\u4e00\u7cfb\u7edf\u901a\u7528\u7684ops\u56de\u8c03\u51fd\u6570\uff0c\u7531\u7279\u5b9a\u7684bsp\u4ee3\u7801\u6765\u5b9e\u73b0\u8fd9\u4e9bops\u56de\u8c03\u51fd\u6570\uff0c\u7136\u540e\u7528\u6237\u4ee3\u7801\u5c31\u80fd\u4f7f\u7528\u901a\u7528\u7684read/write\u6765\u64cd\u4f5c\u8bbe\u5907\u4e86\u3002\u8fd9\u91cc\u6211\u4eec\u53ea\u9700\u8981\u5173\u6ce8 struct rt_audio_ops { rt_err_t ( * getcaps )( struct rt_audio_device * audio , struct rt_audio_caps * caps ); rt_err_t ( * configure )( struct rt_audio_device * audio , struct rt_audio_caps * caps ); rt_err_t ( * init )( struct rt_audio_device * audio ); rt_err_t ( * start )( struct rt_audio_device * audio , int stream ); rt_err_t ( * stop )( struct rt_audio_device * audio , int stream ); rt_size_t ( * transmit )( struct rt_audio_device * audio , const void * writeBuf , void * readBuf , rt_size_t size ); /* get page size of codec or private buffer's info */ void ( * buffer_info )( struct rt_audio_device * audio , struct rt_audio_buf_info * info ); }; \u8fd9\u4e2aops\u7ed3\u6784\u5c31\u597d\u4e86\uff0c\u6bcf\u4e2a\u56de\u8c03\u51fd\u6570\u7684\u529f\u80fd\u4ece\u5b57\u9762\u610f\u4e49\u770b\u5df2\u7ecf\u5f88\u660e\u663e\u4e86\uff0c\u5177\u4f53\u7684\u5b9e\u73b0\u6211\u4eec\u53ef\u4ee5\u53c2\u8003\u5176\u4ed6bsp\u5df2\u6709\u7684audio\u9a71\u52a8\uff0c\u8fd9\u91cc\u6211\u53c2\u8003\u7684\u662fqemu-vexpress-a9\u8fd9\u4e2absp\u4e2d\u7684audio\u9a71\u52a8\uff0c\u5176\u5b9e\u53ea\u8981\u6b63\u786e\u7684\u5b9e\u73b0 init \u3001 start \u3001 stop \u3001 transmit \u3001 buffer_info \u8fd9\u51e0\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u97f3\u9891\u8bbe\u5907\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86\uff0c\u53ea\u4e0d\u8fc7\u65e0\u6cd5\u8fdb\u884c\u914d\u7f6e\u3002 \u8fd9\u91cc\u8fd8\u9700\u8981\u5173\u6ce8\u7684\u662f rt_audio_tx_complete \u8fd9\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u4f1a\u5c06\u5f85\u53d1\u9001\u7684\u6570\u636e\u62f7\u8d1d\u81f3 buffer_info \u6240\u6307\u5b9a\u7684\u7f13\u51b2\u533a\u4e2d\uff0c\u5982\u679ctransmit\u8fd9\u4e2a\u56de\u8c03\u5b58\u5728\u7684\u8bdd\uff0c\u4f1a\u89e6\u53d1\u8be5\u56de\u8c03\u8fdb\u884c\u6570\u636e\u4f20\u8f93\u3002","title":"\u9a71\u52a8\u7ed3\u6784"},{"location":"embedded-dev/MCU/rt-thread/#ops","text":"\u8fd9\u4e9bops\u56de\u8c03\u90fd\u8ddf\u5177\u4f53\u7684\u5668\u4ef6\u548c\u786c\u4ef6\u8fde\u7ebf\u76f8\u5173\u4e86\uff0c init \u505a\u5177\u4f53\u786c\u4ef6\u7684\u521d\u59cb\u5316\uff0c start \u4f7f\u80fd\u5668\u4ef6\u8fdb\u884c\u6570\u636e\u4f20\u8f93\uff0c stop \u7ed3\u675f\u6570\u636e\u4f20\u8f93\uff0c transmit \u5f00\u59cb\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u5757\u4f20\u8f93\uff0c buffer_info \u83b7\u53d6\u7f13\u5b58\u533a\u4fe1\u606f\uff0c\u76f4\u63a5\u53c2\u8003\u5176\u4ed6bsp\u7684\u5b9e\u73b0\u5c31\u53ef\u4ee5\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u4e00\u822c\u4f7f\u7528DMA\u6765\u8fdb\u884c\u97f3\u9891\u6570\u636e\u7684\u4f20\u8f93\uff0c\u8fd9\u91cc\u9700\u8981\u8003\u8651\u4e0d\u540cmcu\u7684\u5dee\u5f02\uff0c\u5bf9\u4e8estm32f4\u6765\u8bf4\uff0c\u4ed6\u7684dma\u652f\u6301\u534a\u7a7a\u548c\u5168\u7a7a\u4e2d\u65ad\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06dma\u914d\u7f6e\u4e3a\u4e52\u4e53\u4f20\u8f93\u6a21\u5f0f\uff0c\u53ef\u4ee5\u7701\u53bbtransmit\u8fd9\u4e2a\u56de\u8c03\u3002 \u5bf9\u4e8eLPC54114-Lite\u8fd9\u4e2a\u677f\u5361\uff0c\u4ed6\u7684dma\u662f\u53ef\u4ee5\u914d\u7f6e\u6210\u4e52\u4e53\u6a21\u5f0f\u7684\uff0c\u4f46\u662fdma\u53ea\u6709\u5168\u7a7a\u8fd9\u4e2a\u7c7b\u578b\u7684\u4e2d\u65ad\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u6682\u4e14\u5b9e\u73b0\u4e00\u4e0btransmit\u8fd9\u4e2a\u56de\u8c03\uff0c\u7531\u8fd9\u4e2a\u56de\u8c03\u6765\u89e6\u53d1\u6570\u636e\u7684\u4f20\u8f93\u3002 \u57fa\u672c\u4e0a\u5230\u8fd9\u91cc\u97f3\u9891\u8bbe\u5907\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u7b80\u5355\u7684\u6d4b\u8bd5\u64ad\u653e\u56fa\u5b9a\u9891\u7387\u7684\u97f3\u9891\uff0c\u7136\u540e\u5b9e\u73b0 configure \u56de\u8c03\u4e4b\u540e\u5c31\u53ef\u4ee5\u8bbe\u7f6e\u97f3\u9891\u91c7\u6837\u7387\u8fd9\u4e9b\u53c2\u6570\u4e86\uff0c\u97f3\u9891\u8bbe\u5907\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86\u3002","title":"ops\u56de\u8c03\u5b9e\u73b0"},{"location":"embedded-dev/MCU/rtos/","text":"RTOS\u7b80\u5355\u5bf9\u6bd4 \u00b6 \u5927\u591a\u6570\u4fe1\u606f\u6765\u6e90\u4e8e\u7f51\u7edc\uff0c\u5177\u6709\u4e00\u5b9a\u7684\u53c2\u8003\u4ef7\u503c\uff0c\u53c2\u8003\u94fe\u63a5\u5982\u4e0b\uff1a https://www.zhihu.com/question/301250055 https://zhuanlan.zhihu.com/p/23618181 \u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf\uff08Real-time operating system, RTOS\uff09\uff0c\u53c8\u79f0\u5373\u65f6\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5b83\u4f1a\u6309\u7167\u6392\u5e8f\u8fd0\u884c\u3001\u7ba1\u7406\u7cfb\u7edf\u8d44\u6e90\uff0c\u5e76\u4e3a\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e00\u81f4\u7684\u57fa\u7840\u3002 \u76ee\u524d\u5174\u8d77\u7684\u7269\u8054\u7f51\u64cd\u4f5c\u7cfb\u7edf\u5176\u6838\u5fc3\u5c31\u662fRTOS\uff0c\u66f4\u591a\u7684\u662f\u56f4\u7ed5\u5176\u5f00\u53d1\u5404\u81ea\u7684\u751f\u6001\uff0c\u4ece\u800c\u4f7f\u5f00\u53d1\u66f4\u52a0\u65b9\u4fbf\uff0c\u52a0\u5feb\u4ea7\u54c1\u5316\u7684\u901f\u5ea6\u3002 \u76ee\u524d\u7f51\u4e0a\u5404\u7c7b\u5f00\u6e90\u7684RTOS/\u7269\u8054\u7f51\u64cd\u4f5c\u7cfb\u7edf\u5c42\u51fa\u4e0d\u7a77\uff0c\u56fd\u5185\u53d7\u4f17\u5e7f\u6cdb\u7684\u4ee5\u53ca\u6bd4\u8f83\u77e5\u540d\u7684\u4e3b\u8981\u6709\uff1aFreeRTOS\u3001ucosiii\u3001RT-Thread\u3001Contiki\u3001Zephyr\u3001Nuttx\u3001RIOT\u3001mbedOS\u3001RTX... FreeRTOS\uff1a\u5168\u4e16\u754c\u4f7f\u7528\u91cf\u6700\u5927\u7684\u4e86\uff0c\u8fd8\u6709\u4e00\u4e2aSafeRTOS\u7684\u7248\u672c\u3002\u8001\u724c\u7cfb\u7edf\uff0c\u7a33\u5b9a\u6027\u6709\u4fdd\u969c\u3002 ucos III\uff1a\u5f00\u6e90\u534f\u8bae\u53d8\u6765\u53d8\u53bb\u7684\u3002\u672c\u6765ucosii\u7684\u65f6\u5019\u7528\u6237\u57fa\u6570\u4e5f\u5f88\u5927\u7684\u3002\u4ee3\u7801\u5bb9\u9519\u505a\u4e86\u5f88\u591a\uff0c\u4fdd\u8bc1\u4e86\u7a33\u5b9a\u6027\u3002\u8001\u724c\u7cfb\u7edf\uff0c\u6709\u4fdd\u969c\u3002 RT-Thread\uff1a\u4e0a\u6d77\u8d5b\u777f\u5fb7\u5f00\u53d1\u7684\uff0c\u56fd\u5185\u793e\u533a\u5efa\u8bbe\u5f88\u597d\u3002\u63d0\u51fa\u4e86\u8f6f\u4ef6\u5305\u6982\u5ff5\u548c\u4e00\u4e9b\u517c\u5bb9Unix\u63a5\u53e3\u3002\u719f\u6089Linux\u7684\u6216\u8005\u5df2\u6709Linux\u4ee3\u7801\u7684\u9879\u76ee\u79fb\u690d\u8d77\u6765\u5f88\u65b9\u4fbf\u3002\u4f7f\u7528\u8d77\u6765\u8fd8\u662f\u5f88\u65b9\u4fbf\u7684\u3002 Contiki\uff1a\u8fd9\u4e2a\u4e25\u683c\u8bf4\u4e0d\u662f\u4e2aRTOS\uff0c\u5b9e\u9645\u4f7f\u7528PT\u534f\u7a0b\u8c03\u5ea6\u5199\u7684\uff0c\u4f5c\u8005\u4e5f\u5c31\u662fPT\u7684\u4f5c\u8005\uff0c\u8bb0\u5f97\u662f\u4e2a\u745e\u5178\u7684\u5927\u4f6c\u3002\u6240\u4ee5\u6ca1\u6709\u8fdb\u7a0b\u6808\uff0c\u76f8\u5f53\u4e8e\u8fd8\u662f\u5728\u4e00\u4e2awhile\u91cc\u8fd0\u884c\u7684switch\u5206\u652f\u3002\u4e5f\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u5f00\u9500\u5f88\u5c0f\uff0c8051\u5185\u4e2a\u90fd\u8dd1\u7684\u52a8\u3002Contiki\u4e5f\u662f\u4e2a\u5fae\u5185\u6838\uff08microkernel\uff09\uff0c\u6240\u6709\u7684\u7cfb\u7edf\u670d\u52a1\u90fd\u662f\u901a\u8fc7\u542f\u7ebf\u7a0b\u5b8c\u6210\uff0cProtothreads\u7ebf\u7a0b\u6574\u5408\u4e86\u7ebf\u7a0b\u95f4\u4e8b\u4ef6\u901a\u8baf\uff0c\u4f7f\u5f97\u7f16\u5199\u7cfb\u7edf\u670d\u52a1\u975e\u5e38\u5bb9\u6613\u3002\u9a71\u52a8\u7a0b\u5e8f\u65b9\u9762\uff0cContiki\u6ca1\u6709\u7edf\u4e00\u7684\u9a71\u52a8\u7a0b\u5e8f\u6846\u67b6\uff0c\u9a71\u52a8\u90fd\u662f\u5404\u5bb6MCU\u81ea\u5e26\u5f00\u53d1\u5305\u63d0\u4f9b\uff0c\u8fd9\u6837\u7684\u597d\u5904\u662f\u80fd\u591f\u4fdd\u8bc1\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u591f\u5c0f\u3002 Nuttx\uff1a\u548clinux\u5f88\u50cf\uff0c\u529f\u80fd\u4e5f\u975e\u5e38\u5168\u3002 RIOT\u662f\u9762\u5411\u5f00\u53d1\u8005\u7684\uff0c\u5f00\u6e90\u7684\uff0c\u9002\u5408\u7269\u8054\u7f51\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\u5b83\u7684\u80cc\u540e\u6ca1\u6709\u67d0\u4e2a\u516c\u53f8\u7684\u652f\u6301\uff0c\u800c\u5b8c\u5168\u662f\u7531\u793e\u533a\u9a71\u52a8\u3002 Zephyr:Linux\u57fa\u91d1\u4f1a\u65d7\u4e0b\u9879\u76ee\uff0c\u548cLinux\u5f88\u50cf\u3002\u652f\u6301\u7684\u5f00\u53d1\u677f\u5f88\u591a\uff0c\u7ec4\u4ef6\u4e5f\u5f88\u591a\uff0c\u793e\u533a\u4e5f\u5f88\u6d3b\u8dc3\uff0c\u7f3a\u70b9\u662f\u5165\u95e8\u96be\u5ea6\u8f83\u5927\uff0c\u7f16\u8f91\u73af\u5883\u6784\u5efa\u590d\u6742\u3002 RTX\uff1artx\u8fd9\u4e2a\u771f\u5fc3\u4e0d\u9519\u3002\u4ece51\u5c31\u5f00\u59cb\u7528\uff0c\u96c6\u6210\u5728keil\u91cc\u9762\uff0c\u5efa\u5de5\u7a0b\u5f88\u65b9\u4fbf\uff0c\u529f\u80fd\u4e5f\u5f88\u5f3a\u5927\u3002\u8fd8\u6709jlink\u5185\u4e2asegger\u5bb6\u7684\uff0c\u4e5f\u633a\u597d\uff0c\u633a\u559c\u6b22\u4ed6\u5bb6\u7684\u5404\u79cd\u7ec4\u4ef6\u7684 \u9879\u76ee\u9636\u6bb5:\u63a8\u8350freertos,ucosiii\u6216\u8005rt-thread\u7684ltsc\u5206\u652f\uff0c\u4f9d\u987a\u5e8f\u63a8\u8350\u3002\u7a33\u5b9a\u6027\u6700\u91cd\u8981\uff0c\u5982\u679c\u9879\u76ee\u9700\u8981\u7279\u6b8a\u8ba4\u8bc1\u5565\u7684\u9700\u8981\u4f60\u518d\u770b\u770b \u4f20\u611f\u5668\u9879\u76ee:contiki,nuttx\u90fd\u4e0d\u9519 \u7279\u6b8a\u9700\u6c42\u6bd4\u5982zigbee\u534f\u8bae\u6808\u84dd\u7259\u534f\u8bae\u6808\u6216\u8005\u4ec0\u4e48\u7684\uff0c\u4f60\u518d\u770b\u5177\u4f53\u573a\u666f\u5427\u7528keil\u7684\u53ef\u4ee5\u5c1d\u8bd5\u4e0brtx \u603b\u7684\u6765\u8bf4\uff0c\u5404\u7c7bRTOS\u7684\u6838\u5fc3\u90fd\u662f\u8c03\u5ea6\uff0c\u5269\u4e0b\u7684\u90fd\u662f\u56f4\u7ed5\u8fd9\u4e2a\u6838\u5fc3\u589e\u52a0\u5404\u7c7b\u8bbe\u5907\u9a71\u52a8\u6a21\u578b\u3001\u901a\u4fe1\u6a21\u578b\u3001\u7f51\u7edc\u901a\u4fe1\u63a5\u53e3\u3001POSIX\u517c\u5bb9\u63a5\u53e3\uff0c\u57fa\u672c\u90fd\u662f\u751f\u6001\u7684\u6bd4\u62fc\uff0c\u4f5c\u4e3a\u7231\u597d\u8005\u6216\u8005\u5f00\u53d1\u4eba\u5458\u8fd8\u662f\u9700\u8981\u6839\u636e\u5177\u4f53\u7684\u60c5\u51b5\u6765\u9009\u62e9\u9002\u5408\u81ea\u5df1\u4f7f\u7528\u7684\u7cfb\u7edf\u3002","title":"RTOS\u7b80\u5355\u5bf9\u6bd4"},{"location":"embedded-dev/MCU/rtos/#rtos","text":"\u5927\u591a\u6570\u4fe1\u606f\u6765\u6e90\u4e8e\u7f51\u7edc\uff0c\u5177\u6709\u4e00\u5b9a\u7684\u53c2\u8003\u4ef7\u503c\uff0c\u53c2\u8003\u94fe\u63a5\u5982\u4e0b\uff1a https://www.zhihu.com/question/301250055 https://zhuanlan.zhihu.com/p/23618181 \u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf\uff08Real-time operating system, RTOS\uff09\uff0c\u53c8\u79f0\u5373\u65f6\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5b83\u4f1a\u6309\u7167\u6392\u5e8f\u8fd0\u884c\u3001\u7ba1\u7406\u7cfb\u7edf\u8d44\u6e90\uff0c\u5e76\u4e3a\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e00\u81f4\u7684\u57fa\u7840\u3002 \u76ee\u524d\u5174\u8d77\u7684\u7269\u8054\u7f51\u64cd\u4f5c\u7cfb\u7edf\u5176\u6838\u5fc3\u5c31\u662fRTOS\uff0c\u66f4\u591a\u7684\u662f\u56f4\u7ed5\u5176\u5f00\u53d1\u5404\u81ea\u7684\u751f\u6001\uff0c\u4ece\u800c\u4f7f\u5f00\u53d1\u66f4\u52a0\u65b9\u4fbf\uff0c\u52a0\u5feb\u4ea7\u54c1\u5316\u7684\u901f\u5ea6\u3002 \u76ee\u524d\u7f51\u4e0a\u5404\u7c7b\u5f00\u6e90\u7684RTOS/\u7269\u8054\u7f51\u64cd\u4f5c\u7cfb\u7edf\u5c42\u51fa\u4e0d\u7a77\uff0c\u56fd\u5185\u53d7\u4f17\u5e7f\u6cdb\u7684\u4ee5\u53ca\u6bd4\u8f83\u77e5\u540d\u7684\u4e3b\u8981\u6709\uff1aFreeRTOS\u3001ucosiii\u3001RT-Thread\u3001Contiki\u3001Zephyr\u3001Nuttx\u3001RIOT\u3001mbedOS\u3001RTX... FreeRTOS\uff1a\u5168\u4e16\u754c\u4f7f\u7528\u91cf\u6700\u5927\u7684\u4e86\uff0c\u8fd8\u6709\u4e00\u4e2aSafeRTOS\u7684\u7248\u672c\u3002\u8001\u724c\u7cfb\u7edf\uff0c\u7a33\u5b9a\u6027\u6709\u4fdd\u969c\u3002 ucos III\uff1a\u5f00\u6e90\u534f\u8bae\u53d8\u6765\u53d8\u53bb\u7684\u3002\u672c\u6765ucosii\u7684\u65f6\u5019\u7528\u6237\u57fa\u6570\u4e5f\u5f88\u5927\u7684\u3002\u4ee3\u7801\u5bb9\u9519\u505a\u4e86\u5f88\u591a\uff0c\u4fdd\u8bc1\u4e86\u7a33\u5b9a\u6027\u3002\u8001\u724c\u7cfb\u7edf\uff0c\u6709\u4fdd\u969c\u3002 RT-Thread\uff1a\u4e0a\u6d77\u8d5b\u777f\u5fb7\u5f00\u53d1\u7684\uff0c\u56fd\u5185\u793e\u533a\u5efa\u8bbe\u5f88\u597d\u3002\u63d0\u51fa\u4e86\u8f6f\u4ef6\u5305\u6982\u5ff5\u548c\u4e00\u4e9b\u517c\u5bb9Unix\u63a5\u53e3\u3002\u719f\u6089Linux\u7684\u6216\u8005\u5df2\u6709Linux\u4ee3\u7801\u7684\u9879\u76ee\u79fb\u690d\u8d77\u6765\u5f88\u65b9\u4fbf\u3002\u4f7f\u7528\u8d77\u6765\u8fd8\u662f\u5f88\u65b9\u4fbf\u7684\u3002 Contiki\uff1a\u8fd9\u4e2a\u4e25\u683c\u8bf4\u4e0d\u662f\u4e2aRTOS\uff0c\u5b9e\u9645\u4f7f\u7528PT\u534f\u7a0b\u8c03\u5ea6\u5199\u7684\uff0c\u4f5c\u8005\u4e5f\u5c31\u662fPT\u7684\u4f5c\u8005\uff0c\u8bb0\u5f97\u662f\u4e2a\u745e\u5178\u7684\u5927\u4f6c\u3002\u6240\u4ee5\u6ca1\u6709\u8fdb\u7a0b\u6808\uff0c\u76f8\u5f53\u4e8e\u8fd8\u662f\u5728\u4e00\u4e2awhile\u91cc\u8fd0\u884c\u7684switch\u5206\u652f\u3002\u4e5f\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u5f00\u9500\u5f88\u5c0f\uff0c8051\u5185\u4e2a\u90fd\u8dd1\u7684\u52a8\u3002Contiki\u4e5f\u662f\u4e2a\u5fae\u5185\u6838\uff08microkernel\uff09\uff0c\u6240\u6709\u7684\u7cfb\u7edf\u670d\u52a1\u90fd\u662f\u901a\u8fc7\u542f\u7ebf\u7a0b\u5b8c\u6210\uff0cProtothreads\u7ebf\u7a0b\u6574\u5408\u4e86\u7ebf\u7a0b\u95f4\u4e8b\u4ef6\u901a\u8baf\uff0c\u4f7f\u5f97\u7f16\u5199\u7cfb\u7edf\u670d\u52a1\u975e\u5e38\u5bb9\u6613\u3002\u9a71\u52a8\u7a0b\u5e8f\u65b9\u9762\uff0cContiki\u6ca1\u6709\u7edf\u4e00\u7684\u9a71\u52a8\u7a0b\u5e8f\u6846\u67b6\uff0c\u9a71\u52a8\u90fd\u662f\u5404\u5bb6MCU\u81ea\u5e26\u5f00\u53d1\u5305\u63d0\u4f9b\uff0c\u8fd9\u6837\u7684\u597d\u5904\u662f\u80fd\u591f\u4fdd\u8bc1\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u591f\u5c0f\u3002 Nuttx\uff1a\u548clinux\u5f88\u50cf\uff0c\u529f\u80fd\u4e5f\u975e\u5e38\u5168\u3002 RIOT\u662f\u9762\u5411\u5f00\u53d1\u8005\u7684\uff0c\u5f00\u6e90\u7684\uff0c\u9002\u5408\u7269\u8054\u7f51\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\u5b83\u7684\u80cc\u540e\u6ca1\u6709\u67d0\u4e2a\u516c\u53f8\u7684\u652f\u6301\uff0c\u800c\u5b8c\u5168\u662f\u7531\u793e\u533a\u9a71\u52a8\u3002 Zephyr:Linux\u57fa\u91d1\u4f1a\u65d7\u4e0b\u9879\u76ee\uff0c\u548cLinux\u5f88\u50cf\u3002\u652f\u6301\u7684\u5f00\u53d1\u677f\u5f88\u591a\uff0c\u7ec4\u4ef6\u4e5f\u5f88\u591a\uff0c\u793e\u533a\u4e5f\u5f88\u6d3b\u8dc3\uff0c\u7f3a\u70b9\u662f\u5165\u95e8\u96be\u5ea6\u8f83\u5927\uff0c\u7f16\u8f91\u73af\u5883\u6784\u5efa\u590d\u6742\u3002 RTX\uff1artx\u8fd9\u4e2a\u771f\u5fc3\u4e0d\u9519\u3002\u4ece51\u5c31\u5f00\u59cb\u7528\uff0c\u96c6\u6210\u5728keil\u91cc\u9762\uff0c\u5efa\u5de5\u7a0b\u5f88\u65b9\u4fbf\uff0c\u529f\u80fd\u4e5f\u5f88\u5f3a\u5927\u3002\u8fd8\u6709jlink\u5185\u4e2asegger\u5bb6\u7684\uff0c\u4e5f\u633a\u597d\uff0c\u633a\u559c\u6b22\u4ed6\u5bb6\u7684\u5404\u79cd\u7ec4\u4ef6\u7684 \u9879\u76ee\u9636\u6bb5:\u63a8\u8350freertos,ucosiii\u6216\u8005rt-thread\u7684ltsc\u5206\u652f\uff0c\u4f9d\u987a\u5e8f\u63a8\u8350\u3002\u7a33\u5b9a\u6027\u6700\u91cd\u8981\uff0c\u5982\u679c\u9879\u76ee\u9700\u8981\u7279\u6b8a\u8ba4\u8bc1\u5565\u7684\u9700\u8981\u4f60\u518d\u770b\u770b \u4f20\u611f\u5668\u9879\u76ee:contiki,nuttx\u90fd\u4e0d\u9519 \u7279\u6b8a\u9700\u6c42\u6bd4\u5982zigbee\u534f\u8bae\u6808\u84dd\u7259\u534f\u8bae\u6808\u6216\u8005\u4ec0\u4e48\u7684\uff0c\u4f60\u518d\u770b\u5177\u4f53\u573a\u666f\u5427\u7528keil\u7684\u53ef\u4ee5\u5c1d\u8bd5\u4e0brtx \u603b\u7684\u6765\u8bf4\uff0c\u5404\u7c7bRTOS\u7684\u6838\u5fc3\u90fd\u662f\u8c03\u5ea6\uff0c\u5269\u4e0b\u7684\u90fd\u662f\u56f4\u7ed5\u8fd9\u4e2a\u6838\u5fc3\u589e\u52a0\u5404\u7c7b\u8bbe\u5907\u9a71\u52a8\u6a21\u578b\u3001\u901a\u4fe1\u6a21\u578b\u3001\u7f51\u7edc\u901a\u4fe1\u63a5\u53e3\u3001POSIX\u517c\u5bb9\u63a5\u53e3\uff0c\u57fa\u672c\u90fd\u662f\u751f\u6001\u7684\u6bd4\u62fc\uff0c\u4f5c\u4e3a\u7231\u597d\u8005\u6216\u8005\u5f00\u53d1\u4eba\u5458\u8fd8\u662f\u9700\u8981\u6839\u636e\u5177\u4f53\u7684\u60c5\u51b5\u6765\u9009\u62e9\u9002\u5408\u81ea\u5df1\u4f7f\u7528\u7684\u7cfb\u7edf\u3002","title":"RTOS\u7b80\u5355\u5bf9\u6bd4"},{"location":"embedded-dev/amlogic/s905x/","text":"S905X \u00b6 \u7b80\u4ecb \u00b6 \u5728\u67d0\u4e8c\u624b\u5e02\u573a\u5165\u624b\u4e86\u4e00\u4e2a\u7535\u89c6\u76d2\u5b50\uff0c\u76d2\u5b50\u578b\u53f7\u4e3a Trongle X3 \uff0c\u4e3b\u63a7\u4e3a S905X \u3002 \u641c\u7d22\u53d1\u73b0\uff0c\u8fd9\u4e2a\u578b\u53f7\u7684\u76d2\u5b50\u4e0e MINI M8S II \u8fd9\u4e2a\u76d2\u5b50\u5916\u5f62/PCB\u7b49\u5b8c\u5168\u4e00\u81f4\uff0c\u5e76\u4e14\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 p212 \u8bbe\u5907\u6811\u542f\u52a8\u5185\u6838\uff0c\u53ea\u6709\u5185\u5b58\u5bb9\u91cf\u4e0eEMMC\u5bb9\u91cf\u7565\u6709\u4e0d\u540c\uff0c\u5176\u5916\u5f62/PCB\u7b49\u56fe\u7247\u5982\u4e0b\u3002 \u7535\u89c6\u76d2\u5b50\u5185\u90e8\u56fe\u7247\u6765\u81ea \u8fd9\u91cc \u3002 \u6570\u636e\u624b\u518c \u00b6 S905X\u6570\u636e\u624b\u518c S905X GPIO\u7528\u6237\u6307\u5357 \u542f\u52a8\u6d41\u7a0b \u00b6 S905X\u7684\u542f\u52a8\u6d41\u7a0b\u89c1\u6570\u636e\u624b\u518c\u4e2d\u7684 18.2 \u5c0f\u8282\uff0c\u5173\u4e8e\u542f\u52a8\u6d41\u7a0b\u4e2d\u63d0\u5230\u7684 recovery \u4fe1\u53f7\uff0c\u53ef\u4ee5\u901a\u8fc7 Amlogic HDMI Boot Dongle \u8bbe\u5907\u6765\u8fdb\u884c\u63a7\u5236\uff0c\u8be6\u7ec6\u7684\u8bf4\u660e\u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc \uff0c \u672c\u5c0f\u8282\u540e\u7eed\u5185\u5bb9\u5927\u90fd\u6765\u81ea\u6b64\u5904 \u3002 Amlogic BOOTROM\u5728\u542f\u52a8\u8fc7\u7a0b\u4e2d\u4f1a\u901a\u8fc7HDMI\u63a5\u53e3\u4e2d\u7684I2C\u603b\u7ebf\u4ece\u5730\u5740 0x52 \uff0c\u504f\u79fb 0xf8(248) \u5904\u8bfb\u53d68\u5b57\u8282\u5185\u5bb9\uff0c\u5982\u679c\u8fd98\u5b57\u8282\u5185\u5bb9\u662f boot@USB \u90a3\u4e48\u4f1a\u5f3a\u5236\u4eceUSB\u8fdb\u884c\u542f\u52a8\u3002\u76f8\u5e94\u7684\uff0c\u5982\u679c\u5185\u5bb9\u662f boot@SDC \u548c boot@SPI \u90a3\u4e48\u4f1a\u5f3a\u5236\u4eceSD\u5361\u548cSPI\u8fdb\u884c\u542f\u52a8\u3002 Amlogic HDMI Boot Dongle \u8bbe\u5907\u7684\u539f\u7406\u56fe\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u4e3b\u8981\u5143\u5668\u4ef6\u4e3a\u4e00\u4e2aEEPROM\u3002 \u4ee5Linux\u5e73\u53f0\u3001i2c-dev\u9a71\u52a8\u4e3a\u4f8b\u6307\u5b9a\u4eceSD\u5361\u542f\u52a8\uff0c\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\u5199\u5165eeprom\uff1a $ cd /sys/bus/i2c/devices/i2c-0 $ echo 24c02 0x52 > new_device $ cd *-0052 $ echo -n \"boot@SDC\" | dd of = eeprom bs = 1 seek = 248 $ dd if = eeprom bs = 1 skip = 248 | hexdump \u6ce8\u610f \uff1a\u4eceSD\u5361\u542f\u52a8\u4f3c\u4e4e\u9700\u8981\u4f7f\u7528SDHC\u89c4\u683c\u7684SD\u5361\uff0c\u5426\u5219\u4f1a\u51fa\u73b0 sd/emmc read data error: ret=16 \u7684\u9519\u8bef\u4fe1\u606f\uff0c\u6d4b\u8bd5\u53d1\u73b0\u786e\u5b9e\u5982\u6b64\uff0c\u53c2\u8003 \u8fd9\u91cc \u3002 \u7cfb\u7edf\u70e7\u5f55 \u00b6 \u7535\u89c6\u76d2\u5b50\u9ed8\u8ba4\u8fd0\u884c\u7684\u7cfb\u7edf\u662fAndroid\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7f51\u53cb\u63d0\u4f9b\u7684\u9884\u7f16\u8bd1\u955c\u50cf\u6765\u8fd0\u884cDebian\u7b49\u53d1\u884c\u7248\u3002 \u7ecf\u8fc7\u6d4b\u8bd5\uff0c ophub \u63d0\u4f9b\u7684Armbian\u53ef\u4ee5\u6b63\u5e38\u542f\u52a8\u548c\u4f7f\u7528\uff0c\u8be6\u7ec6\u7684\u4e0b\u8f7d\u5b89\u88c5\u65b9\u5f0f\u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc \u3002 \u6b64\u578b\u53f7\u7684\u7535\u89c6\u76d2\u5b50\u5bf9\u5e94\u7684u-boot\u4e0edtb\u5206\u522b\u4e3a u-boot-s905x-s912.bin \u548c meson-gxl-s905x-p212.dtb \u3002 u-boot\u7f16\u8bd1 \u00b6 \u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u4f7f\u7528\u4e0a\u6e38u-boot\u7684 p212_defconfig \u914d\u7f6e\u6587\u4ef6\u7f16\u8bd1\u51fa\u7684u-boot\u4e8c\u8fdb\u5236\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u76d2\u5b50\u81ea\u5e26\u7684u-boot\u8fd0\u884c\u8d77\u6765\uff0c\u4f46\u662f\u5982\u679c\u8981\u5236\u4f5c\u53ef\u542f\u52a8\u7684u-boot\u955c\u50cf\u7684\u8bdd\u8fd8\u9700\u8981\u4eceEMMC\u4e2d\u5bfc\u51fa\u81ea\u5e26\u7684u-boot\uff0c\u968f\u540e\u63d0\u53d6\u51faBL2x\u3001BL3x\u7b49\u5e76\u8fdb\u884c\u8fdb\u4e00\u6b65\u5904\u7406\uff0c\u7b80\u5355\u6d41\u7a0b\u5982\u4e0b: $ dd if = /dev/block/bootloader of = bootloader.dump $ dd if = bootloader.dump of = dump.bin bs = 512 skip = 1 $ cd gxlimg && mkdir images $ ./gxlimg -e ../dump.bin images $ ./gxlimg -t bl3x -c u-boot-dtb.bin images/u-boot.bin.enc $ ./gxlimg -t fip --bl2 images/bl2.sign --bl30 images/bl30.enc --bl31 images/bl31.enc --bl33 images/u-boot.bin.enc images/gxl-boot.bin $ # dd to sd card $ dd if = images/gxl-boot.bin of = /dev/sdX bs = 512 seek = 1 \u4e0a\u8ff0\u6d41\u7a0b\u7684\u57fa\u672c\u539f\u7406\u662f\u4f7f\u7528\u539f\u6709\u955c\u50cf\u4e2d\u7684BL2x\u3001BL3x\u7b49\u90e8\u5206\u914d\u5408\u81ea\u884c\u7f16\u8bd1\u51fa\u7684u-boot\uff0c\u5c06\u5176\u7ec4\u5408\u6210\u4e00\u4e2a\u65b0\u7684\u53ef\u542f\u52a8\u7684bootloader\uff0c\u8be6\u7ec6\u539f\u7406\u53ca\u4ecb\u7ecd\u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc \u548c \u8fd9\u91cc \u53c2\u8003\u94fe\u63a5 \u00b6 Mini M8S II TV Box (Amlogic S905X) Review \u2013 Part 1: Unboxing and Teardown Amlogic HDMI Boot Dongle amlogic-s9xxx-armbian u-boot-misc glximg","title":"S905X"},{"location":"embedded-dev/amlogic/s905x/#s905x","text":"","title":"S905X"},{"location":"embedded-dev/amlogic/s905x/#_1","text":"\u5728\u67d0\u4e8c\u624b\u5e02\u573a\u5165\u624b\u4e86\u4e00\u4e2a\u7535\u89c6\u76d2\u5b50\uff0c\u76d2\u5b50\u578b\u53f7\u4e3a Trongle X3 \uff0c\u4e3b\u63a7\u4e3a S905X \u3002 \u641c\u7d22\u53d1\u73b0\uff0c\u8fd9\u4e2a\u578b\u53f7\u7684\u76d2\u5b50\u4e0e MINI M8S II \u8fd9\u4e2a\u76d2\u5b50\u5916\u5f62/PCB\u7b49\u5b8c\u5168\u4e00\u81f4\uff0c\u5e76\u4e14\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 p212 \u8bbe\u5907\u6811\u542f\u52a8\u5185\u6838\uff0c\u53ea\u6709\u5185\u5b58\u5bb9\u91cf\u4e0eEMMC\u5bb9\u91cf\u7565\u6709\u4e0d\u540c\uff0c\u5176\u5916\u5f62/PCB\u7b49\u56fe\u7247\u5982\u4e0b\u3002 \u7535\u89c6\u76d2\u5b50\u5185\u90e8\u56fe\u7247\u6765\u81ea \u8fd9\u91cc \u3002","title":"\u7b80\u4ecb"},{"location":"embedded-dev/amlogic/s905x/#_2","text":"S905X\u6570\u636e\u624b\u518c S905X GPIO\u7528\u6237\u6307\u5357","title":"\u6570\u636e\u624b\u518c"},{"location":"embedded-dev/amlogic/s905x/#_3","text":"S905X\u7684\u542f\u52a8\u6d41\u7a0b\u89c1\u6570\u636e\u624b\u518c\u4e2d\u7684 18.2 \u5c0f\u8282\uff0c\u5173\u4e8e\u542f\u52a8\u6d41\u7a0b\u4e2d\u63d0\u5230\u7684 recovery \u4fe1\u53f7\uff0c\u53ef\u4ee5\u901a\u8fc7 Amlogic HDMI Boot Dongle \u8bbe\u5907\u6765\u8fdb\u884c\u63a7\u5236\uff0c\u8be6\u7ec6\u7684\u8bf4\u660e\u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc \uff0c \u672c\u5c0f\u8282\u540e\u7eed\u5185\u5bb9\u5927\u90fd\u6765\u81ea\u6b64\u5904 \u3002 Amlogic BOOTROM\u5728\u542f\u52a8\u8fc7\u7a0b\u4e2d\u4f1a\u901a\u8fc7HDMI\u63a5\u53e3\u4e2d\u7684I2C\u603b\u7ebf\u4ece\u5730\u5740 0x52 \uff0c\u504f\u79fb 0xf8(248) \u5904\u8bfb\u53d68\u5b57\u8282\u5185\u5bb9\uff0c\u5982\u679c\u8fd98\u5b57\u8282\u5185\u5bb9\u662f boot@USB \u90a3\u4e48\u4f1a\u5f3a\u5236\u4eceUSB\u8fdb\u884c\u542f\u52a8\u3002\u76f8\u5e94\u7684\uff0c\u5982\u679c\u5185\u5bb9\u662f boot@SDC \u548c boot@SPI \u90a3\u4e48\u4f1a\u5f3a\u5236\u4eceSD\u5361\u548cSPI\u8fdb\u884c\u542f\u52a8\u3002 Amlogic HDMI Boot Dongle \u8bbe\u5907\u7684\u539f\u7406\u56fe\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u4e3b\u8981\u5143\u5668\u4ef6\u4e3a\u4e00\u4e2aEEPROM\u3002 \u4ee5Linux\u5e73\u53f0\u3001i2c-dev\u9a71\u52a8\u4e3a\u4f8b\u6307\u5b9a\u4eceSD\u5361\u542f\u52a8\uff0c\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\u5199\u5165eeprom\uff1a $ cd /sys/bus/i2c/devices/i2c-0 $ echo 24c02 0x52 > new_device $ cd *-0052 $ echo -n \"boot@SDC\" | dd of = eeprom bs = 1 seek = 248 $ dd if = eeprom bs = 1 skip = 248 | hexdump \u6ce8\u610f \uff1a\u4eceSD\u5361\u542f\u52a8\u4f3c\u4e4e\u9700\u8981\u4f7f\u7528SDHC\u89c4\u683c\u7684SD\u5361\uff0c\u5426\u5219\u4f1a\u51fa\u73b0 sd/emmc read data error: ret=16 \u7684\u9519\u8bef\u4fe1\u606f\uff0c\u6d4b\u8bd5\u53d1\u73b0\u786e\u5b9e\u5982\u6b64\uff0c\u53c2\u8003 \u8fd9\u91cc \u3002","title":"\u542f\u52a8\u6d41\u7a0b"},{"location":"embedded-dev/amlogic/s905x/#_4","text":"\u7535\u89c6\u76d2\u5b50\u9ed8\u8ba4\u8fd0\u884c\u7684\u7cfb\u7edf\u662fAndroid\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7f51\u53cb\u63d0\u4f9b\u7684\u9884\u7f16\u8bd1\u955c\u50cf\u6765\u8fd0\u884cDebian\u7b49\u53d1\u884c\u7248\u3002 \u7ecf\u8fc7\u6d4b\u8bd5\uff0c ophub \u63d0\u4f9b\u7684Armbian\u53ef\u4ee5\u6b63\u5e38\u542f\u52a8\u548c\u4f7f\u7528\uff0c\u8be6\u7ec6\u7684\u4e0b\u8f7d\u5b89\u88c5\u65b9\u5f0f\u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc \u3002 \u6b64\u578b\u53f7\u7684\u7535\u89c6\u76d2\u5b50\u5bf9\u5e94\u7684u-boot\u4e0edtb\u5206\u522b\u4e3a u-boot-s905x-s912.bin \u548c meson-gxl-s905x-p212.dtb \u3002","title":"\u7cfb\u7edf\u70e7\u5f55"},{"location":"embedded-dev/amlogic/s905x/#u-boot","text":"\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u4f7f\u7528\u4e0a\u6e38u-boot\u7684 p212_defconfig \u914d\u7f6e\u6587\u4ef6\u7f16\u8bd1\u51fa\u7684u-boot\u4e8c\u8fdb\u5236\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u76d2\u5b50\u81ea\u5e26\u7684u-boot\u8fd0\u884c\u8d77\u6765\uff0c\u4f46\u662f\u5982\u679c\u8981\u5236\u4f5c\u53ef\u542f\u52a8\u7684u-boot\u955c\u50cf\u7684\u8bdd\u8fd8\u9700\u8981\u4eceEMMC\u4e2d\u5bfc\u51fa\u81ea\u5e26\u7684u-boot\uff0c\u968f\u540e\u63d0\u53d6\u51faBL2x\u3001BL3x\u7b49\u5e76\u8fdb\u884c\u8fdb\u4e00\u6b65\u5904\u7406\uff0c\u7b80\u5355\u6d41\u7a0b\u5982\u4e0b: $ dd if = /dev/block/bootloader of = bootloader.dump $ dd if = bootloader.dump of = dump.bin bs = 512 skip = 1 $ cd gxlimg && mkdir images $ ./gxlimg -e ../dump.bin images $ ./gxlimg -t bl3x -c u-boot-dtb.bin images/u-boot.bin.enc $ ./gxlimg -t fip --bl2 images/bl2.sign --bl30 images/bl30.enc --bl31 images/bl31.enc --bl33 images/u-boot.bin.enc images/gxl-boot.bin $ # dd to sd card $ dd if = images/gxl-boot.bin of = /dev/sdX bs = 512 seek = 1 \u4e0a\u8ff0\u6d41\u7a0b\u7684\u57fa\u672c\u539f\u7406\u662f\u4f7f\u7528\u539f\u6709\u955c\u50cf\u4e2d\u7684BL2x\u3001BL3x\u7b49\u90e8\u5206\u914d\u5408\u81ea\u884c\u7f16\u8bd1\u51fa\u7684u-boot\uff0c\u5c06\u5176\u7ec4\u5408\u6210\u4e00\u4e2a\u65b0\u7684\u53ef\u542f\u52a8\u7684bootloader\uff0c\u8be6\u7ec6\u539f\u7406\u53ca\u4ecb\u7ecd\u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc \u548c \u8fd9\u91cc","title":"u-boot\u7f16\u8bd1"},{"location":"embedded-dev/amlogic/s905x/#_5","text":"Mini M8S II TV Box (Amlogic S905X) Review \u2013 Part 1: Unboxing and Teardown Amlogic HDMI Boot Dongle amlogic-s9xxx-armbian u-boot-misc glximg","title":"\u53c2\u8003\u94fe\u63a5"},{"location":"embedded-dev/bootloader/u-boot/u-boot/","text":"U-Boot \u00b6 1. \u521d\u59cb\u5316\u6d41\u7a0b \u00b6 \u56fe\u6e90\u89c1\u6c34\u5370 2. \u677f\u7ea7\u914d\u7f6e \u00b6 \u4e0d\u540c\u7248\u672c\u9636\u6bb5\u7684u-boot\u5bf9\u5355\u677f\u7684\u914d\u7f6e\u65b9\u5f0f\u5e76\u4e0d\u4e00\u81f4\u3002\u8f83\u65e9\u7248\u672c\u7684u-boot\u662f\u901a\u8fc7\u6839\u76ee\u5f55\u4e0b\u7684Makefile\u6765\u76f4\u63a5\u5bf9\u5355\u677f\u8fdb\u884c\u5b9a\u4e49\u7684\uff1b\u4ece2010.09\u7248\u672c\u5f00\u59cb\u677f\u7ea7\u914d\u7f6e\u8fc1\u79fb\u5230\u4e86boards.cfg\u6587\u4ef6\u4e2d;\u800c2014.10\u7248\u672c\u4e4b\u540e\uff0c\u677f\u7ea7\u914d\u7f6e\u6587\u4ef6\u7edf\u4e00\u8fc1\u79fb\u5230\u4e86configs\u76ee\u5f55\u4e0b\uff0c\u677f\u7ea7\u914d\u7f6e\u5934\u6587\u4ef6\u4fdd\u5b58\u5728/include/configs\u8def\u5f84\u4e0b\u3002 u-boot\u7684\u7a7a\u95f4\u5212\u5206\u5728crt0.S\u4e2d\u7684board_init_f\u5b8c\u6210\uff0c\u5728relocate\u4e4b\u524d\u5bf9\u7a7a\u95f4\u8fdb\u884c\u5212\u5206\uff0c\u8ba1\u7b97\u51farelocate\u7684\u4f4d\u7f6e\u504f\u79fb\u4ee5\u53caglobal_data\u7b49\u7684\u504f\u79fb\uff0c\u7136\u540e\u5bf9u-boot\u4ee3\u7801\u8fdb\u884c\u4e86\u91cd\u5b9a\u5411\u3002 \u6dfb\u52a0\u65b0\u7684\u9ed8\u8ba4\u73af\u5883\u53d8\u91cf\u5728include/env_default.h\u4e2d\u3002 \u6dfb\u52a0\u6539\u52a8\u7684\u539f\u5219\u662f\u5c3d\u53ef\u80fd\u7684\u5c11\u4fee\u6539\u516c\u5171\u6587\u4ef6\uff0c\u76f8\u5173\u6539\u52a8\u5c3d\u53ef\u80fd\u7684\u653e\u5230\u677f\u7ea7\u6587\u4ef6\u4e2d\u3002 \u4f7f\u7528SPL\u65f6\u5e0c\u671b\u53ef\u4ee5\u81ea\u52a8\u751f\u6210u-boot-with-spl.bin\u6587\u4ef6\uff0c\u65b9\u4fbf\u6211\u4eec\u70e7\u5f55\uff0cu-boot\u7684Makefile\u5df2\u7ecf\u505a\u597d\u4e86\u8fd9\u90e8\u5206\u5de5\u4f5c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u677f\u7ea7\u914d\u7f6e\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u5982\u4e0b\u4e24\u4e2a\u5b8f\u5373\u53ef #define CONFIG_SPL_TARGET \"u-boot-with-spl.bin\" #define CONFIG_SPL_PAD_TO 0x1000 \u5176\u4e2d\uff0c CONFIG_SPL_TARGET \u8fd9\u4e2a\u5b8f\u5b9a\u4e49\u4e86\u5408\u5e76\u540e\u7684\u6587\u4ef6\u540d\u79f0\uff0c\u5982\u679c\u4e0d\u4f7f\u7528u-boot-with-spl.bin\u8fd9\u4e2a\u540d\u79f0\u7684\u8bdd\u9700\u8981\u81ea\u884c\u5728Makefile\u4e2d\u6dfb\u52a0\u76f8\u5e94\u7684\u89c4\u5219\u6765\u751f\u6210\u6700\u7ec8\u7684\u6587\u4ef6\u3002 CONFIG_SPL_PAD_TO \u8fd9\u4e2a\u5b8f\u5b9a\u4e49\u4e86\u6211\u4eecSPL\u6240\u5360\u7684\u5927\u5c0f\uff0c\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u586b\u5199\u5c31\u53ef\u4ee5\u3002 \u5728mini2440\u4e0a\u7f16\u8bd1u-boot\u65f6\uff0c\u4f7f\u7528codesourcery\u7684arm-2014.05-29-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2\u5de5\u5177\u94fe\uff0c\u53ef\u4ee5\u7f16\u8bd1\u6210\u529f\u4f46\u662f\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\uff0c\u7528led\u706f\u5b9a\u4f4d\u95ee\u9898\u53d1\u73b0\u95ee\u9898\u51fa\u5728get_PCLK()\u51fd\u6570\uff0c\u6000\u7591\u95ee\u9898\u51fa\u5728\u6d6e\u70b9\u8fd0\u7b97\u90e8\u5206\uff0c\u4e0a\u7f51\u67e5\u8bc1\uff0c\u786e\u5b9e\u5982\u6b64\uff0c\u800cu-boot\u4e5f\u63d0\u4f9b\u4e86\u7528\u6237\u79c1\u6709\u5e93\uff0c\u7531 CONFIG_USE_PRIVATE_LIBGCC \u63a7\u5236\uff0c\u7136\u540e\u5728mini2440_defconfig\u4e2d\u6dfb\u52a0\u8fd9\u4e00\u9879\uff0cu-boot\u5c31\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\u4e86:)","title":"U-Boot"},{"location":"embedded-dev/bootloader/u-boot/u-boot/#u-boot","text":"","title":"U-Boot"},{"location":"embedded-dev/bootloader/u-boot/u-boot/#1","text":"\u56fe\u6e90\u89c1\u6c34\u5370","title":"1. \u521d\u59cb\u5316\u6d41\u7a0b"},{"location":"embedded-dev/bootloader/u-boot/u-boot/#2","text":"\u4e0d\u540c\u7248\u672c\u9636\u6bb5\u7684u-boot\u5bf9\u5355\u677f\u7684\u914d\u7f6e\u65b9\u5f0f\u5e76\u4e0d\u4e00\u81f4\u3002\u8f83\u65e9\u7248\u672c\u7684u-boot\u662f\u901a\u8fc7\u6839\u76ee\u5f55\u4e0b\u7684Makefile\u6765\u76f4\u63a5\u5bf9\u5355\u677f\u8fdb\u884c\u5b9a\u4e49\u7684\uff1b\u4ece2010.09\u7248\u672c\u5f00\u59cb\u677f\u7ea7\u914d\u7f6e\u8fc1\u79fb\u5230\u4e86boards.cfg\u6587\u4ef6\u4e2d;\u800c2014.10\u7248\u672c\u4e4b\u540e\uff0c\u677f\u7ea7\u914d\u7f6e\u6587\u4ef6\u7edf\u4e00\u8fc1\u79fb\u5230\u4e86configs\u76ee\u5f55\u4e0b\uff0c\u677f\u7ea7\u914d\u7f6e\u5934\u6587\u4ef6\u4fdd\u5b58\u5728/include/configs\u8def\u5f84\u4e0b\u3002 u-boot\u7684\u7a7a\u95f4\u5212\u5206\u5728crt0.S\u4e2d\u7684board_init_f\u5b8c\u6210\uff0c\u5728relocate\u4e4b\u524d\u5bf9\u7a7a\u95f4\u8fdb\u884c\u5212\u5206\uff0c\u8ba1\u7b97\u51farelocate\u7684\u4f4d\u7f6e\u504f\u79fb\u4ee5\u53caglobal_data\u7b49\u7684\u504f\u79fb\uff0c\u7136\u540e\u5bf9u-boot\u4ee3\u7801\u8fdb\u884c\u4e86\u91cd\u5b9a\u5411\u3002 \u6dfb\u52a0\u65b0\u7684\u9ed8\u8ba4\u73af\u5883\u53d8\u91cf\u5728include/env_default.h\u4e2d\u3002 \u6dfb\u52a0\u6539\u52a8\u7684\u539f\u5219\u662f\u5c3d\u53ef\u80fd\u7684\u5c11\u4fee\u6539\u516c\u5171\u6587\u4ef6\uff0c\u76f8\u5173\u6539\u52a8\u5c3d\u53ef\u80fd\u7684\u653e\u5230\u677f\u7ea7\u6587\u4ef6\u4e2d\u3002 \u4f7f\u7528SPL\u65f6\u5e0c\u671b\u53ef\u4ee5\u81ea\u52a8\u751f\u6210u-boot-with-spl.bin\u6587\u4ef6\uff0c\u65b9\u4fbf\u6211\u4eec\u70e7\u5f55\uff0cu-boot\u7684Makefile\u5df2\u7ecf\u505a\u597d\u4e86\u8fd9\u90e8\u5206\u5de5\u4f5c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u677f\u7ea7\u914d\u7f6e\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u5982\u4e0b\u4e24\u4e2a\u5b8f\u5373\u53ef #define CONFIG_SPL_TARGET \"u-boot-with-spl.bin\" #define CONFIG_SPL_PAD_TO 0x1000 \u5176\u4e2d\uff0c CONFIG_SPL_TARGET \u8fd9\u4e2a\u5b8f\u5b9a\u4e49\u4e86\u5408\u5e76\u540e\u7684\u6587\u4ef6\u540d\u79f0\uff0c\u5982\u679c\u4e0d\u4f7f\u7528u-boot-with-spl.bin\u8fd9\u4e2a\u540d\u79f0\u7684\u8bdd\u9700\u8981\u81ea\u884c\u5728Makefile\u4e2d\u6dfb\u52a0\u76f8\u5e94\u7684\u89c4\u5219\u6765\u751f\u6210\u6700\u7ec8\u7684\u6587\u4ef6\u3002 CONFIG_SPL_PAD_TO \u8fd9\u4e2a\u5b8f\u5b9a\u4e49\u4e86\u6211\u4eecSPL\u6240\u5360\u7684\u5927\u5c0f\uff0c\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u586b\u5199\u5c31\u53ef\u4ee5\u3002 \u5728mini2440\u4e0a\u7f16\u8bd1u-boot\u65f6\uff0c\u4f7f\u7528codesourcery\u7684arm-2014.05-29-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2\u5de5\u5177\u94fe\uff0c\u53ef\u4ee5\u7f16\u8bd1\u6210\u529f\u4f46\u662f\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\uff0c\u7528led\u706f\u5b9a\u4f4d\u95ee\u9898\u53d1\u73b0\u95ee\u9898\u51fa\u5728get_PCLK()\u51fd\u6570\uff0c\u6000\u7591\u95ee\u9898\u51fa\u5728\u6d6e\u70b9\u8fd0\u7b97\u90e8\u5206\uff0c\u4e0a\u7f51\u67e5\u8bc1\uff0c\u786e\u5b9e\u5982\u6b64\uff0c\u800cu-boot\u4e5f\u63d0\u4f9b\u4e86\u7528\u6237\u79c1\u6709\u5e93\uff0c\u7531 CONFIG_USE_PRIVATE_LIBGCC \u63a7\u5236\uff0c\u7136\u540e\u5728mini2440_defconfig\u4e2d\u6dfb\u52a0\u8fd9\u4e00\u9879\uff0cu-boot\u5c31\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\u4e86:)","title":"2. \u677f\u7ea7\u914d\u7f6e"},{"location":"embedded-dev/epaper/","text":"\u7535\u5b50\u58a8\u6c34\u5c4f \u00b6 2in9\u8bb0\u5f55 \u00b6 \u4ece\u6c49\u67142.9\u5bf8\u7535\u5b50\u4ef7\u7b7e\u4e2d\u62c6\u51fa\u7684\u58a8\u6c34\u5c4f\u53ef\u4ee5\u4f7f\u7528\u5fae\u96ea\u7535\u5b50\u7684V1\u7248\u672c\u7a0b\u5e8f\u8fdb\u884c\u9a71\u52a8\uff0c\u6709\u51e0\u70b9\u9700\u8981\u8bb0\u5f55\u4e00\u4e0b \u58a8\u6c34\u5c4f\u8f83\u957f\u7684\u4e00\u4fa7\u4e3a\u9a71\u52a8\u82af\u7247\u7684\u9ad8\u4fa7\uff0c\u8f83\u77ed\u7684\u4e00\u4fa7\u4e3a\u9a71\u52a8\u82af\u7247\u7684\u5bbd\u4fa7\uff0c\u793a\u610f\u56fe\u5982\u4e0b 0 128 ---------------- 01234567 ... 128 0 | | ******** ... * | | \u5728\u5bbd\u4fa7\u6bcf8\u4e2a\u50cf\u7d20\u70b9\u4e3a\u4e00\u7ec4\uff0c\u5b57\u8282\u5012\u5e8f\uff0c\u5373pixel 0\u4e3aMSB\uff0c | | pixel 7\u4e3aLSB\uff0c\u53d6\u6a21\u65f6\u9700\u8981\u6ce8\u610f | | | | | | | | | | | | | | | | | | | | | | | | 296 | | ---------------- \u7535\u5b50\u4ef7\u7b7e\u5185\u90e8\u6709\u4e00\u4e2aMOS-FET\u7528\u4e8e\u63a7\u5236\u58a8\u6c34\u5c4f\u7684\u4f9b\u7535\uff0c\u8fde\u63a5\u5728P2.6\u3002 \u6700\u7ec8\u7684\u663e\u793a\u6548\u679c\u5982\u4e0b \u4f7f\u7528\u7535\u5b50\u4ef7\u7b7e\u81ea\u5e26\u7684MSP430\u5355\u7247\u673a\u9a71\u52a8\u7684\u793a\u4f8b\u7a0b\u5e8f\u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc \u3002 \u7535\u5b50\u58a8\u6c34\u5c4f\u4e2dlut\u7684\u65f6\u5e8f\u89e3\u8bfb\uff0c\u4ee5phase0A\u4e3a\u4f8b: \u5f53\u50cf\u7d20\u70b9\u4ece\u767d\u8f6c\u9ed1\u65f6(HL), V_{pixel} \u7535\u538b\u4e3a VSH \u5f53\u8c61\u7d20\u70b9\u4ece\u9ed1\u8f6c\u767d\u65f6(LH), V_{pixel} \u7535\u538b\u4e3a VSL \u5176\u4ed6\u60c5\u51b5\u4e0b\uff0cV_{pixel} \u7535\u538b\u4e3a VSS","title":"\u58a8\u6c34\u5c4f"},{"location":"embedded-dev/epaper/#_1","text":"","title":"\u7535\u5b50\u58a8\u6c34\u5c4f"},{"location":"embedded-dev/epaper/#2in9","text":"\u4ece\u6c49\u67142.9\u5bf8\u7535\u5b50\u4ef7\u7b7e\u4e2d\u62c6\u51fa\u7684\u58a8\u6c34\u5c4f\u53ef\u4ee5\u4f7f\u7528\u5fae\u96ea\u7535\u5b50\u7684V1\u7248\u672c\u7a0b\u5e8f\u8fdb\u884c\u9a71\u52a8\uff0c\u6709\u51e0\u70b9\u9700\u8981\u8bb0\u5f55\u4e00\u4e0b \u58a8\u6c34\u5c4f\u8f83\u957f\u7684\u4e00\u4fa7\u4e3a\u9a71\u52a8\u82af\u7247\u7684\u9ad8\u4fa7\uff0c\u8f83\u77ed\u7684\u4e00\u4fa7\u4e3a\u9a71\u52a8\u82af\u7247\u7684\u5bbd\u4fa7\uff0c\u793a\u610f\u56fe\u5982\u4e0b 0 128 ---------------- 01234567 ... 128 0 | | ******** ... * | | \u5728\u5bbd\u4fa7\u6bcf8\u4e2a\u50cf\u7d20\u70b9\u4e3a\u4e00\u7ec4\uff0c\u5b57\u8282\u5012\u5e8f\uff0c\u5373pixel 0\u4e3aMSB\uff0c | | pixel 7\u4e3aLSB\uff0c\u53d6\u6a21\u65f6\u9700\u8981\u6ce8\u610f | | | | | | | | | | | | | | | | | | | | | | | | 296 | | ---------------- \u7535\u5b50\u4ef7\u7b7e\u5185\u90e8\u6709\u4e00\u4e2aMOS-FET\u7528\u4e8e\u63a7\u5236\u58a8\u6c34\u5c4f\u7684\u4f9b\u7535\uff0c\u8fde\u63a5\u5728P2.6\u3002 \u6700\u7ec8\u7684\u663e\u793a\u6548\u679c\u5982\u4e0b \u4f7f\u7528\u7535\u5b50\u4ef7\u7b7e\u81ea\u5e26\u7684MSP430\u5355\u7247\u673a\u9a71\u52a8\u7684\u793a\u4f8b\u7a0b\u5e8f\u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc \u3002 \u7535\u5b50\u58a8\u6c34\u5c4f\u4e2dlut\u7684\u65f6\u5e8f\u89e3\u8bfb\uff0c\u4ee5phase0A\u4e3a\u4f8b: \u5f53\u50cf\u7d20\u70b9\u4ece\u767d\u8f6c\u9ed1\u65f6(HL), V_{pixel} \u7535\u538b\u4e3a VSH \u5f53\u8c61\u7d20\u70b9\u4ece\u9ed1\u8f6c\u767d\u65f6(LH), V_{pixel} \u7535\u538b\u4e3a VSL \u5176\u4ed6\u60c5\u51b5\u4e0b\uff0cV_{pixel} \u7535\u538b\u4e3a VSS","title":"2in9\u8bb0\u5f55"},{"location":"embedded-dev/fet/","text":"\u573a\u6548\u5e94\u7ba1 \u00b6 \u53c2\u8003\u8d44\u6599 \u00b6 MOS\u7ba1\u7684\u5de5\u4f5c\u539f\u7406 \u4e00\u6587\u5f7b\u5e95\u5f04\u6e05MOS\u7ba1 \uff08NMOS\u4e3a\u4f8b\uff09 \u5de5\u4f5c\u539f\u7406 \u00b6 \u573a\u6548\u5e94\u7ba1\u4f9d\u9760\u7535\u573a\u6765\u63a7\u5236\u5bfc\u7535\u6c9f\u9053\uff0c\u4ece\u800c\u8fbe\u5230\u63a7\u5236\u7535\u6d41\u7684\u76ee\u7684\u3002 \u4ee5\u4e0a\u56feNMOS\u4e3a\u4f8b\uff0c\u5728\u95e8\u6781(G)\u4e0e\u886c\u5e95(B)\u672a\u65bd\u52a0\u7535\u573a\u7684\u60c5\u51b5\u4e0b\uff0c\u6e90\u6781(S)\u4e0e\u886c\u5e95(B)\u3001\u6f0f\u6781(D)\u4e0e\u886c\u5e95(B)\u95f4\u5b58\u5728\u8017\u5c3d\u5c42\uff0c\u5c06\u4f1a\u963b\u6b62\u7535\u5b50\u6d41\u52a8\u3002 \u5f53\u5728\u95e8\u6781(G)\u4e0e\u886c\u5e95(B)\u95f4\u65bd\u52a0\u6b63\u5411\u7535\u538b\u65f6\uff0c\u57fa\u5e95\u4e2d\u7684\u5c11\u6570\u5b50\u5373\u7535\u5b50\u4f1a\u88ab\u5438\u5f15\u5230\u95e8\u6781(G)\u4fa7\uff0c\u591a\u6570\u5b50\u7a7a\u7a74\u88ab\u5438\u5f15\u5230\u886c\u5e95(B)\u4e00\u4fa7\uff0c\u6b64\u65f6\u4e24\u6781\u4e2d\u95f4\u4f1a\u5f62\u6210\u65b0\u7684\u8017\u5c3d\u66fe\uff0c\u800c\u6e90\u7ea7(S)\u4e0e\u6f0f\u6781(D)\u95f4\u5b58\u5728\u7684\u6e90\u6781(S)\u4e0e\u886c\u5e95(B)\u3001\u6f0f\u6781(D)\u4e0e\u886c\u5e95(B)\u95f4\u7684\u8017\u5c3d\u5c42\u5c06\u88ab\u5438\u5f15\u5230\u95e8\u6781\u7684\u7535\u5b50\u6253\u7834\uff0c\u6b64\u65f6\u7535\u5b50\u4fbf\u53ef\u4ee5\u5728\u6e90\u7ea7\u4e0e\u6f0f\u6781\u95f4\u81ea\u7531\u6d41\u52a8\u4e86\uff0c\u6b64\u65f6MOS\u7ba1\u4fbf\u5bfc\u901a\u4e86\u3002 \u6253\u7834\u539f\u6709\u8017\u5c3d\u5c42\u7684\u90e8\u5206\u88ab\u79f0\u4e3a\u6c9f\u9053\uff0c\u6c9f\u9053\u7531\u886c\u5e95\u4e2d\u7535\u5b50\u88ab\u5438\u5f15\u800c\u6765\u5f62\u6210\u7684\u5c31\u53ebN\u6c9f\u9053\uff0c\u53cd\u4e4b\u5c31\u53ebP\u6c9f\u9053\u3002 \u7535\u8def\u7b26\u53f7 \u00b6 MOS\u7ba1\u6807\u51c6\u7b26\u53f7\u4e2d\uff0c\u886c\u5e95\u7684\u7bad\u5934\u8868\u793a\u886c\u5e95\u4e2d\u7535\u5b50\u7684\u79fb\u52a8\u65b9\u5411\u3002\u4ece\u4e0a\u8ff0\u7b26\u53f7\u4e2d\u53ef\u4ee5\u770b\u51fa\u65e5\u5e38\u4f7f\u7528\u7684\u666e\u901a\u7c7b\u578b\u7684\u573a\u6548\u5e94\u7ba1\u886c\u5e95(B)\u5e94\u8be5\u662f\u4e0e\u6e90\u6781(S)\u76f8\u8fde\u7684\uff0c\u8fd8\u662f\u4ee5NMOS\u4e3a\u4f8b\uff0c\u4ece\u5176\u5de5\u4f5c\u539f\u7406\u6211\u4eec\u53ef\u4ee5\u5f97\u77e5\u8981\u60f3\u4f7f\u5176\u5bfc\u901a\uff0c\u9700\u8981\u5728\u95e8\u7ea7(G)\u4e0e\u886c\u5e95(B)\u95f4\u65bd\u52a0\u6b63\u5411\u7535\u573a\uff0c\u5bf9\u5e94\u5230\u6570\u636e\u624b\u518c\u4e2d\u4e3aVgs\u7684\u7535\u538b\u503c\uff0c\u4e3a\u4e00\u4e2a\u5927\u4e8e0\u7684\u503c\u3002 \u56e0\u6b64\u5728\u8bbe\u8ba1\u7535\u8def\u65f6\u6211\u4eec\u5c06\u6e90\u7ea7(S)\u63a5\u5730\uff0c\u901a\u8fc7\u63a7\u5236\u95e8\u7ea7(G)\u7684\u9ad8\u4f4e\u7535\u5e73\u53d8\u5316\u4fbf\u53ef\u4ee5\u63a7\u5236NMOS\u7684\u5bfc\u901a\u4e0e\u5173\u65ad\u4e86\u3002 \u5e38\u7528\u7535\u8def \u00b6 USB\u4f9b\u7535\u4e0e\u7535\u6c60\u4f9b\u7535\u5207\u6362\u7535\u8def(PMOS) \u7535\u6c60\u7535\u538b\u68c0\u6d4b\u901a\u65ad\u63a7\u5236\u7535\u8def(PMOS)","title":"\u573a\u6548\u5e94\u7ba1"},{"location":"embedded-dev/fet/#_1","text":"","title":"\u573a\u6548\u5e94\u7ba1"},{"location":"embedded-dev/fet/#_2","text":"MOS\u7ba1\u7684\u5de5\u4f5c\u539f\u7406 \u4e00\u6587\u5f7b\u5e95\u5f04\u6e05MOS\u7ba1 \uff08NMOS\u4e3a\u4f8b\uff09","title":"\u53c2\u8003\u8d44\u6599"},{"location":"embedded-dev/fet/#_3","text":"\u573a\u6548\u5e94\u7ba1\u4f9d\u9760\u7535\u573a\u6765\u63a7\u5236\u5bfc\u7535\u6c9f\u9053\uff0c\u4ece\u800c\u8fbe\u5230\u63a7\u5236\u7535\u6d41\u7684\u76ee\u7684\u3002 \u4ee5\u4e0a\u56feNMOS\u4e3a\u4f8b\uff0c\u5728\u95e8\u6781(G)\u4e0e\u886c\u5e95(B)\u672a\u65bd\u52a0\u7535\u573a\u7684\u60c5\u51b5\u4e0b\uff0c\u6e90\u6781(S)\u4e0e\u886c\u5e95(B)\u3001\u6f0f\u6781(D)\u4e0e\u886c\u5e95(B)\u95f4\u5b58\u5728\u8017\u5c3d\u5c42\uff0c\u5c06\u4f1a\u963b\u6b62\u7535\u5b50\u6d41\u52a8\u3002 \u5f53\u5728\u95e8\u6781(G)\u4e0e\u886c\u5e95(B)\u95f4\u65bd\u52a0\u6b63\u5411\u7535\u538b\u65f6\uff0c\u57fa\u5e95\u4e2d\u7684\u5c11\u6570\u5b50\u5373\u7535\u5b50\u4f1a\u88ab\u5438\u5f15\u5230\u95e8\u6781(G)\u4fa7\uff0c\u591a\u6570\u5b50\u7a7a\u7a74\u88ab\u5438\u5f15\u5230\u886c\u5e95(B)\u4e00\u4fa7\uff0c\u6b64\u65f6\u4e24\u6781\u4e2d\u95f4\u4f1a\u5f62\u6210\u65b0\u7684\u8017\u5c3d\u66fe\uff0c\u800c\u6e90\u7ea7(S)\u4e0e\u6f0f\u6781(D)\u95f4\u5b58\u5728\u7684\u6e90\u6781(S)\u4e0e\u886c\u5e95(B)\u3001\u6f0f\u6781(D)\u4e0e\u886c\u5e95(B)\u95f4\u7684\u8017\u5c3d\u5c42\u5c06\u88ab\u5438\u5f15\u5230\u95e8\u6781\u7684\u7535\u5b50\u6253\u7834\uff0c\u6b64\u65f6\u7535\u5b50\u4fbf\u53ef\u4ee5\u5728\u6e90\u7ea7\u4e0e\u6f0f\u6781\u95f4\u81ea\u7531\u6d41\u52a8\u4e86\uff0c\u6b64\u65f6MOS\u7ba1\u4fbf\u5bfc\u901a\u4e86\u3002 \u6253\u7834\u539f\u6709\u8017\u5c3d\u5c42\u7684\u90e8\u5206\u88ab\u79f0\u4e3a\u6c9f\u9053\uff0c\u6c9f\u9053\u7531\u886c\u5e95\u4e2d\u7535\u5b50\u88ab\u5438\u5f15\u800c\u6765\u5f62\u6210\u7684\u5c31\u53ebN\u6c9f\u9053\uff0c\u53cd\u4e4b\u5c31\u53ebP\u6c9f\u9053\u3002","title":"\u5de5\u4f5c\u539f\u7406"},{"location":"embedded-dev/fet/#_4","text":"MOS\u7ba1\u6807\u51c6\u7b26\u53f7\u4e2d\uff0c\u886c\u5e95\u7684\u7bad\u5934\u8868\u793a\u886c\u5e95\u4e2d\u7535\u5b50\u7684\u79fb\u52a8\u65b9\u5411\u3002\u4ece\u4e0a\u8ff0\u7b26\u53f7\u4e2d\u53ef\u4ee5\u770b\u51fa\u65e5\u5e38\u4f7f\u7528\u7684\u666e\u901a\u7c7b\u578b\u7684\u573a\u6548\u5e94\u7ba1\u886c\u5e95(B)\u5e94\u8be5\u662f\u4e0e\u6e90\u6781(S)\u76f8\u8fde\u7684\uff0c\u8fd8\u662f\u4ee5NMOS\u4e3a\u4f8b\uff0c\u4ece\u5176\u5de5\u4f5c\u539f\u7406\u6211\u4eec\u53ef\u4ee5\u5f97\u77e5\u8981\u60f3\u4f7f\u5176\u5bfc\u901a\uff0c\u9700\u8981\u5728\u95e8\u7ea7(G)\u4e0e\u886c\u5e95(B)\u95f4\u65bd\u52a0\u6b63\u5411\u7535\u573a\uff0c\u5bf9\u5e94\u5230\u6570\u636e\u624b\u518c\u4e2d\u4e3aVgs\u7684\u7535\u538b\u503c\uff0c\u4e3a\u4e00\u4e2a\u5927\u4e8e0\u7684\u503c\u3002 \u56e0\u6b64\u5728\u8bbe\u8ba1\u7535\u8def\u65f6\u6211\u4eec\u5c06\u6e90\u7ea7(S)\u63a5\u5730\uff0c\u901a\u8fc7\u63a7\u5236\u95e8\u7ea7(G)\u7684\u9ad8\u4f4e\u7535\u5e73\u53d8\u5316\u4fbf\u53ef\u4ee5\u63a7\u5236NMOS\u7684\u5bfc\u901a\u4e0e\u5173\u65ad\u4e86\u3002","title":"\u7535\u8def\u7b26\u53f7"},{"location":"embedded-dev/fet/#_5","text":"USB\u4f9b\u7535\u4e0e\u7535\u6c60\u4f9b\u7535\u5207\u6362\u7535\u8def(PMOS) \u7535\u6c60\u7535\u538b\u68c0\u6d4b\u901a\u65ad\u63a7\u5236\u7535\u8def(PMOS)","title":"\u5e38\u7528\u7535\u8def"},{"location":"embedded-dev/linux/porting-to-new-soc/","text":"Linux SOC\u7ea7\u5185\u6838\u79fb\u690d\u5b9e\u8df5 \u00b6 Warning \u672c\u6587\u672a\u5b8c\u6210\uff0c\u5df2\u7ec8\u6b62\uff0c\u5185\u5bb9\u4ec5\u4f9b\u53c2\u8003 Note \u4e00\u76f4\u4ee5\u6765\u90fd\u60f3\u5b66\u4e60\u5982\u4f55\u5c06Linux\u79fb\u690d\u5230\u4e00\u4e2a\u67b6\u6784\u5df2\u7ecf\u88ab\u652f\u6301\u7684\u65b0SOC\u4e0a\uff0c\u73b0\u5728\u7ec8\u4e8e\u6709\u65f6\u95f4\u6765\u8fdb\u884c\u4e00\u4e9b\u5b9e\u8df5\u7ec3\u4e60\u4e86\uff0c\u8fd9\u4e2a\u7b14\u8bb0\u8bb0\u5f55\u4e86\u6574\u4e2a\u5b9e\u8df5\u8fc7\u7a0b\u4ee5\u53ca\u5728\u79fb\u690d\u8fc7\u7a0b\u4e2d\u8e29\u5230\u7684\u4e00\u4e9b\u5751\u3002\u6211\u53ea\u6709mini2440\u548clicheepi zero\u4e24\u4e2a\u5e73\u53f0\u7684\u5f00\u53d1\u677f\uff0c\u60f3\u6bd4\u8f83\u800c\u8a00\uff0cs3c2440\u7684\u5185\u90e8\u7ed3\u6784\u6bd4\u8f83\u7b80\u5355\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c06s3c2440\u5047\u8bbe\u6210\u4e00\u4e2a\u65b0\u7684SOC\uff0c\u6682\u4e14\u547d\u540d\u4e3afoo\u5427\uff0c\u79fb\u690d\u8fc7\u7a0b\u91c7\u7528\u4e86\u8bbe\u5907\u6811\u7684\u673a\u5236\uff0c\u4e0b\u9762\u5c31\u662f\u6b63\u6587\u4e86\u3002 1. \u79fb\u690d\u524d\u9700\u8981\u4e86\u89e3\u7684\u4e00\u4e9b\u4fe1\u606f \u00b6 Linux\u7684\u79fb\u690d\u6709\u4e09\u79cd\u7ea7\u522b\uff1a \u79fb\u690d\u5230\u4e00\u4e2a\u65b0\u7684\u67b6\u6784\u4e0a \u79fb\u690d\u5230\u4e00\u4e2a\u67b6\u6784\u5df2\u7ecf\u88ab\u652f\u6301\u7684SOC\u4e0a \u79fb\u690d\u5230\u4e00\u4e2a\u65b0\u7684\u677f\u5361\u4e0a \u67b6\u6784\u7ea7\u522b\u7684\u79fb\u690d\u50cf\u6211\u4eec\u8fd9\u6837\u7684\u666e\u901a\u5f00\u53d1\u8005\u5f88\u96be\u4f1a\u63a5\u89e6\u5230\uff0c\u677f\u5361\u7ea7\u522b\u7684\u79fb\u690d\u7f51\u4e0a\u5df2\u7ecf\u6709\u76f8\u5f53\u591a\u7684\u6587\u6863\u4e86\uff0c\u800cSOC\u7ea7\u522b\u79fb\u690d\u7684\u5de5\u4f5c\u5f80\u5f80\u7531\u82af\u7247\u539f\u5382\u6765\u8fdb\u884c\uff0c\u8fd9\u6b21\u7684\u79fb\u690d\u8fc7\u7a0b\u5c31\u5927\u91cf\u53c2\u8003\u4e86\u5185\u6838\u4e2d\u4e0d\u540c\u5382\u5546\u7684\u4ee3\u7801\u3002 \u90a3\u4e48\uff0c\u8981\u8ba9linux\u8fd0\u884c\u5728\u4e00\u4e2a\u65b0\u7684SOC\u4e0a\u9700\u8981\u505a\u54ea\u4e9b\u5de5\u4f5c\u5462\uff0c\u6211\u5728\u7f51\u4e0a\u627e\u5230\u4e86\u4e24\u7bc7\u6587\u6863\uff1a arm-soc-checklist.pdf porting-linux-to-a-new-soc.pdf \u4ece\u6587\u6863\u4e2d\u6211\u4eec\u53ef\u4ee5\u4e86\u89e3\u5230\uff0c\u7531\u4e8eSOC\u91c7\u7528\u7684\u67b6\u6784\u5df2\u7ecf\u88ablinux\u652f\u6301\uff0c\u8fd9\u610f\u5473\u7740\u5185\u5b58\u7ba1\u7406\u90e8\u5206\u5df2\u7ecf\u662f\u53ef\u7528\u7684\uff0c\u8981\u8ba9linux\u8fd0\u884c\u8d77\u6765\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b9e\u73b0 \u4e2d\u65ad\u63a7\u5236\u5668\u9a71\u52a8 \u3001 \u5b9a\u65f6\u5668\u9a71\u52a8 \u3001 \u4e32\u53e3\u9a71\u52a8 \u8fd9\u4e09\u90e8\u5206\u3002\u5f53\u7136\u5b9e\u73b0\u8fd9\u4e9b\u9a71\u52a8\u53ea\u662f\u6700\u57fa\u7840\u7684\u90e8\u5206\uff0c\u8981\u8ba9\u5404\u4e2a\u5916\u8bbe\u6b63\u5e38\u8fd0\u884c\u8fd8\u9700\u8981\u5927\u91cf\u7684\u9a71\u52a8\u5f00\u53d1\u5de5\u4f5c\u3002 2. \u642d\u5efa\u7f16\u8bd1\u6846\u67b6 \u00b6 \u7f16\u8bd1\u6846\u67b6\u90e8\u5206\u7684\u642d\u5efa\u53c2\u8003\u4e86mach-mxs\u5e73\u53f0\u7684\u4ee3\u7801 \u5728arch/arm/\u4e0b\u65b0\u5efamach-foo\u76ee\u5f55\uff0c\u5728\u8be5\u76ee\u5f55\u4e0b\u65b0\u5efaKconfig\u3001Makfile\u3001mach-foo.c\u6587\u4ef6\uff0c\u4fee\u6539\u540e\u7684\u76ee\u5f55\u6811\u5982\u4e0b\uff1a arch/arm/mach-foo \u251c\u2500\u2500 Kconfig \u251c\u2500\u2500 mach-foo.c \u2514\u2500\u2500 Makefile \u4fee\u6539mach-foo\u4e2d\u7684\u4e09\u4e2a\u6587\u4ef6\uff0c\u5206\u522b\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a /* mach-foo.c */ #include <linux/io.h> #include <linux/compiler.h> #include <asm/mach/arch.h> static void __init foo_machine_init ( void ) { } static const __initconst char * const foo_dt_compat [] = { \"none,foo\" , NULL , }; DT_MACHINE_START ( foo , \"mach-foo(DT)\" ) . init_machine = foo_machine_init , . dt_compat = foo_dt_compat , MACHINE_END #Makefile obj- $( CONFIG_ARCH_FOO ) + = mach-foo.o #Kconfig config ARCH_FOO bool \"foo(actually s3c2440) SOC support\" depends on ARCH_MULTI_V4T select CPU_ARM920T select GPIOLIB select PINCTRL select SOC_BUS help Support for my test project. \u8fd9\u91cc\u7684\u4fee\u6539\u53c2\u8003\u4e86mach-mxs\u4e2d\u7684\u4ee3\u7801\uff0c CPU_ARM920T \u8fd9\u4e2a\u5b8f\u7528\u6765\u5b9a\u4e49CPU\u7684\u7c7b\u578b\uff0c\u5185\u6838\u4e00\u5f00\u59cb\u68c0\u6d4bCPU\u662f\u5426\u5339\u914d\u4e5f\u662f\u901a\u8fc7\u8fd9\u4e2a\u5b8f\u6765\u9009\u62e9CPU\u578b\u53f7\u7684\uff0c\u5177\u4f53\u4fe1\u606f\u53ef\u4ee5\u4ece \u8fd9\u91cc \u67e5\u770b\u3002Kconfig\u4e2d\u5176\u4f59\u7684\u9009\u9879\u90fd\u662f\u76f4\u63a5\u4ecemach-foo\u76ee\u5f55\u4e0b\u6284\u6765\u7684\uff0c\u6682\u65f6\u53ef\u4ee5\u4e0d\u7528\u7406\u4f1a\uff0c\u4e0d\u8fc7\u8fd9\u4e2a SOC_BUS \u540e\u9762\u53ef\u80fd\u4f1a\u7528\u5230\uff0c\u4e5f\u662f\u4e00\u4e2a\u6bd4\u8f83\u6709\u8da3\u7684\u7279\u6027\uff0c\u53ef\u4ee5\u4ece \u8fd9\u91cc \u67e5\u770b\u7ec6\u8282\u3002 \u4fee\u6539\u4e0a\u7ea7\u76ee\u5f55(arch/arm)\u4e2d\u7684Kconfig\u3001Makefile\uff0c\u4e3b\u8981\u4fee\u6539\u5982\u4e0b\uff1a #arch/arm/Kconfig source \"arch/arm/mach-foo/Kconfig\" #arch/arm/Makefile machine- $( CONFIG_ARCH_FOO ) + = foo \u89c2\u5bdf\u8fd9\u4e24\u4e2a\u6587\u4ef6\u91cc\u9762\u7684\u539f\u59cb\u5185\u5bb9\u53ef\u4ee5\u53d1\u73b0\u662f\u6309\u7167\u82f1\u6587\u5b57\u6bcd\u987a\u5e8f\u6765\u6392\u5e8f\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u6dfb\u52a0\u8fd9\u4e24\u5904\u7684\u65f6\u5019\u4e5f\u8981\u9075\u5faa\u8fd9\u4e2a\u89c4\u5219\uff0c\u8fd9\u91cc\u7684 CONFIG_ARCH_FOO \u662f\u65b0\u6dfb\u52a0\u7684SOC\u7684\u5b8f\uff0c\u5bf9\u5e94\u7b2c2\u6b65\u4e2dKconfig\u4e2d\u7684\u5185\u5bb9\u3002 \u5728arch/arm/boot/dts\u4e2d\u65b0\u5efa\u4e24\u4e2a\u6587\u4ef6foo.dtsi\u548cfoo-evk.dts\uff0c\u5e76\u5728\u91cc\u9762\u586b\u5145\u9002\u5f53\u7684\u5185\u5bb9\uff0c\u5176\u4e2d\u7684cpus\u8282\u70b9\u548cmemory\u8282\u70b9\u8981\u6839\u636e\u5177\u4f53\u60c5\u51b5\u6765\u586b\u5199 /* foo.dtsi */ #include \"skeleton.dtsi\" #include <dt-bindings/gpio/gpio.h> #include <dt-bindings/interrupt-controller/irq.h> / { model = \"foo SOC\" ; compatible = \"none,foo\" ; cpus { #address-cells = <0>; #size-cells = <0>; cpu { compatible = \"arm,arm920t\" ; }; }; }; /* foo-evk.dts */ / dts - v1 / ; #include \"foo.dtsi\" / { model = \"foo board\" ; compatible = \"none,foo\" ; memory { reg = < 0x30000000 0x04000000 > ; }; }; \u4fee\u6539arch/arm/boot/dts/Makefile,\u589e\u52a0\u8bbe\u5907\u6811\u7684\u7f16\u8bd1\u9009\u9879 #arch/arm/boot/dts/Makefile dtb- $( CONFIG_ARCH_FOO ) + = \\ foo-evk.dtb \u62f7\u8d1dmxs_defconfig\u5230foo_defconfig\u4f5c\u4e3a\u6211\u4eec\u7684\u9ed8\u8ba4\u914d\u7f6e\u6a21\u677f\uff0c\u7136\u540e\u6267\u884cmake menuconfig\u9009\u62e9\u6211\u4eec\u4e0a\u9762\u6dfb\u52a0\u7684\u914d\u7f6e\uff0c\u5e76\u9002\u5f53\u7684\u5220\u51cf\u4e00\u4e9b\u76ee\u524d\u7528\u4e0d\u5230\u7684\u9a71\u52a8\uff0c\u51cf\u5c11\u7f16\u8bd1\u65f6\u95f4\u3002 \u6700\u540e\u6267\u884c\u7f16\u8bd1\uff0c\u5982\u679czImage\u548cdtb\u90fd\u80fd\u6b63\u786e\u751f\u6210\u7684\u8bdd\u5c31\u53ef\u4ee5\u628a\u5f53\u524d\u7684.config\u4fdd\u5b58\u6210foo_defconfig\u4e86\uff0c\u5177\u4f53\u7684\u4fdd\u5b58\u6b65\u9aa4\u53ef\u4ee5\u4ece \u8fd9\u91cc \u67e5\u770b\u3002 \u4e0a\u8ff0\u4fee\u6539\u53ef\u4ee5\u53c2\u8003 \u8fd9\u4e2a\u8865\u4e01 \u3002 3. \u5b9e\u73b0earlycon\u9a71\u52a8 \u00b6 \u6b64\u90e8\u5206\u7684\u4fee\u6539\u53c2\u8003\u4e86 X-012-KERNEL-serial early console\u7684\u79fb\u690d \u3001 Linux earlycon made life easy \u3001kernel-parameters.txt\u4ee5\u53ca\u5185\u6838\u4e2d\u5176\u4ed6SOC\u7684\u5b9e\u73b0\u3002 \u5728\u6b63\u5f0f\u7684\u4e32\u53e3\u9a71\u52a8\u53ef\u7528\u4e4b\u524d\u547d\u4ee4\u884c\u53c2\u6570\u6307\u5b9a\u7684\u7ec8\u7aef\u662f\u65e0\u6cd5\u8f93\u51fa\u4efb\u4f55\u4fe1\u606f\u7684\uff0c\u4e3a\u6b64Linux\u63d0\u4f9b\u4e86\u4e24\u79cd\u673a\u5236\u6765\u8fdb\u884c\u65e9\u671f\u7684log\u8f93\u51fa\uff0c\u5206\u522b\u662fearly_printk\u548cearlycon\uff0c\u4ece\u7f51\u4e0a\u7684\u79cd\u79cd\u8bf4\u6cd5\u6765\u770b\uff0cearlycon\u662f\u4e00\u79cd\u66f4\u597d\u3001\u66f4\u4f18\u96c5\u7684\u65b9\u5f0f\uff0c\u6240\u4ee5\u8fd9\u91cc\u91c7\u7528earlycon\u4f5c\u4e3a\u6211\u4eec\u65e9\u671flog\u6253\u5370\u7684\u65b9\u5f0f\u3002 \u5728u-boot\u4e2d\u4e32\u53e3\u5df2\u7ecf\u521d\u59cb\u5316\u8fc7\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e32\u53e3\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u53c2\u8003 X-012-KERNEL-serial early console\u7684\u79fb\u690d \uff0c\u5728drivers/tty/serial/\u4e0b\u65b0\u5efafoo-serial.c\uff0c\u5e76\u586b\u5145\u4e0b\u9762\u7684\u5185\u5bb9\uff0c\u8fd9\u91cc\u4e0d\u540c\u7684\u5730\u65b9\u662f\u501f\u52a9earlycon\u7684\u6846\u67b6\u6765\u6620\u5c04\u7684\u5185\u5b58\uff0c\u6ca1\u6709\u624b\u52a8\u8fdb\u884c\u5185\u5b58\u6620\u5c04\u3002 /* drivers/tty/serial/foo-serial.c */ #include <linux/kernel.h> #include <linux/console.h> #include <linux/init.h> #include <linux/serial_core.h> #include <asm/io.h> #include <asm/early_ioremap.h> #define UART_UTRSTAT (0x10) #define UART_UTXH (0x20) static void foo_serial_putc ( struct uart_port * port , int ch ) { while ( ! ( readl ( port -> membase + UART_UTRSTAT ) & 0x2 )); writeb ( ch , port -> membase + UART_UTXH ); } static void earlycon_foo_write ( struct console * con , const char * s , unsigned n ) { struct earlycon_device * dev = con -> data ; uart_console_write ( & dev -> port , s , n , foo_serial_putc ); } int __init earlycon_foo_setup ( struct earlycon_device * dev , const char * opt ) { if ( ! dev -> port . membase ) return - ENODEV ; dev -> con -> write = earlycon_foo_write ; return 0 ; } EARLYCON_DECLARE ( foo_serial , earlycon_foo_setup ); \u8fd9\u91cc\u4f7f\u7528\u8bbe\u5907\u6811\u6765\u4f20\u9012earlycon\u9700\u8981\u7684\u53c2\u6570\uff0c\u6240\u4ee5\u5728foo-evk.dts\u4e2d\u6dfb\u52a0\u4e0b\u9762\u7684\u5185\u5bb9\uff0c\u6ce8\u610f\u8fd9\u91cc\u6dfb\u52a0\u4e86\u7528\u4e8e\u6620\u5c04\u7684\u5730\u5740\uff0cearlycon\u9ed8\u8ba4\u4f1a\u6620\u5c0464\u5b57\u8282\u5927\u5c0f\u7684\u7a7a\u95f4 chosen { bootargs = \"earlycon=foo_serial,0x50000000 console=ttyS0\" ; }; \u8fd9\u91cc\u4e4b\u6240\u4ee5\u6dfb\u52a0\u4e86\u4e00\u4e2a\u989d\u5916\u7684console\u53c2\u6570\u662f\u56e0\u4e3a\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u53c2\u6570\u7684\u8bdd\u5185\u6838\u4f1a\u5f88\u5feb\u7684\u5207\u6362\u5230\u9ed8\u8ba4console(tty0)\u4e0a\uff0c\u4e4b\u540e\u6240\u6709\u7684\u542f\u52a8\u65e5\u5fd7\u4fbf\u770b\u4e0d\u5230\u4e86\uff0c\u4f46\u6211\u4eec\u5e76\u4e0d\u60f3\u8fd9\u6837\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u6307\u5b9a\u4e00\u4e2a\u975e\u9ed8\u8ba4\u7684console\u8bbe\u5907\u3002 \u53c2\u8003\u5176\u4f59\u5382\u5546\u9a71\u52a8\u5bf9Makefile\u548cKconfig\u8fdb\u884c\u4fee\u6539\uff0c\u5e76\u901a\u8fc7menuconfig\u914d\u7f6e\u652f\u6301printk\u7684\u8f93\u51fa,\u9700\u8981\u4f7f\u80fd\u4e0b\u9762\u8fd9\u4e2a\u9009\u9879 General setup ---> [ * ] Configure standard kernel features ( expert users ) ---> \u4e00\u5207\u987a\u5229\u7684\u8bdd\u8fd9\u4e2a\u65f6\u5019\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e32\u53e3\u770b\u5230kernel\u7684\u542f\u52a8\u8fc7\u7a0b\u4e86\uff0c\u6b64\u90e8\u5206\u4fee\u6539\u53ef\u4ee5\u53c2\u8003 \u8fd9\u4e2a\u8865\u4e01 \u3002 4. \u5b9e\u73b0irqchip\u9a71\u52a8 \u00b6 \u5f88\u591a\u7684\u9a71\u52a8\u90fd\u4f9d\u8d56\u4e8e\u4e2d\u65ad\uff0c\u6bd4\u5982\u5b9a\u65f6\u5668\uff0c\u800c\u5b9a\u65f6\u5668\u9a71\u52a8\u662f\u5185\u6838\u5fc5\u987b\u7684\uff0c\u6240\u4ee5\u4e2d\u65ad\u7684\u9a71\u52a8\u662f\u5fc5\u987b\u7684\uff0c\u8fd9\u91ccirqchip\u9a71\u52a8\u7684\u5b9e\u73b0\u53c2\u8003\u4e86irq-lpc32xx.c\u3001irq-mxs.c\u3001\u4e09\u661f\u7684\u9a71\u52a8\u4ee3\u7801\u4ee5\u53ca\u8702\u7a9d\u79d1\u6280\u8bba\u575b\u7684\u6587\u7ae0\u3002 \u53d7\u76ca\u4e8e\u5185\u6838\u6846\u67b6\u7684\u5de7\u5999\uff0c\u5927\u90e8\u5206\u65f6\u5019\u6211\u4eec\u4e0d\u9700\u8981\u5bf9\u5177\u4f53\u7ec6\u8282\u8fdb\u884c\u4e86\u89e3\u4e5f\u53ef\u4ee5\u5f00\u53d1\u51fa\u6b63\u5e38\u5de5\u4f5c\u7684\u9a71\u52a8\u4ee3\u7801\u3002\u5185\u6838\u9a71\u52a8\u5f00\u53d1\u5f88\u591a\u65f6\u5019\u5c31\u662f\u5c06\u4e00\u4e2a\u8bbe\u5907\u8fdb\u884c\u62bd\u8c61\uff0c\u7136\u540e\u586b\u5145\u5230\u5185\u6838\u63d0\u4f9b\u7684\u6846\u67b6\u4e2d\u53bb\u3002 \u4e2d\u65ad\u5b50\u7cfb\u7edf-\u8702\u7a9d\u79d1\u6280 \u7cfb\u5217\u6587\u7ae0\u5bf9linux\u4e2d\u65ad\u5b50\u7cfb\u7edf\u8fdb\u884c\u4e86\u5f88\u8be6\u7ec6\u7684\u4ecb\u7ecd\uff0c\u4ece\u8fd9\u4e9b\u6587\u7ae0\u4e2d\u6211\u4eec\u53ef\u4ee5\u4e86\u89e3\u5230\u5f88\u591a\u7ec6\u8282\uff0c\u4f46\u662f\u672c\u6b21\u79fb\u690d\u4e3b\u8981\u662f\u53c2\u8003\u4e86\u5185\u6838\u4e2d\u4e00\u4e9b\u5382\u5546\u7684\u4ee3\u7801\u3002 s3c2440\u7684\u4e2d\u65ad\u63a7\u5236\u5668\u5c06\u4e2d\u65ad\u6e90\u5206\u4e3a\u4e86main\u548csub\u4e24\u79cd\uff0c\u8981\u60f3\u81ea\u5df1\u5199\u4e00\u4efd\u9a71\u52a8\uff0c\u5148\u8bfb\u4e00\u4e0b\u4e09\u661f\u63d0\u4f9b\u7684\u9a71\u52a8\u518d\u4e0a\u624b\u4e5f\u4e0d\u8fdf\u3002\u5382\u5546\u9a71\u52a8\u603b\u662f\u4f1a\u4e00\u4efd\u9a71\u52a8\u517c\u5bb9\u591a\u6b3eSOC\uff0c\u6709\u65f6\u4f1a\u4e3a\u6211\u4eec\u9605\u8bfb\u4ee3\u7801\u5e26\u6765\u4e00\u4e9b\u969c\u788d\u3002\u8fd9\u91cc\u5bf9\u6bd4\u9605\u8bfb\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u51e0\u4efd\u4ee3\u7801\uff0c\u53c8\u8003\u8651\u5230s3c3440\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u8bbe\u8ba1\uff0c\u6700\u540e\u51b3\u5b9a\u53c2\u7167irq-lpc32xx.c\u4e2d\u7684\u5b9e\u73b0\u65b9\u5f0f\u6765\u7f16\u5199foo\u7684irqchip\u9a71\u52a8\u3002 \u7531\u4e8e\u79fb\u690d\u8fc7\u7a0b\u6bd4\u8f83\u590d\u6742\uff0c\u4e14\u5e76\u4e0d\u901a\u7528\uff0c\u4f46\u662f\u6574\u4f53\u601d\u60f3\u662f\u4e00\u81f4\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ea\u662f\u7b80\u8981\u4ecb\u7ecd\u4e00\u4e0b\u79fb\u690d\u7684\u6d41\u7a0b\u3002 \u9996\u5148\u5c06\u62bd\u8c61\u597d\u7684\u4e2d\u65ad\u63a7\u5236\u5668\u5728\u8bbe\u5907\u6811\u4e2d\u8fdb\u884c\u63cf\u8ff0\uff0c\u4e0b\u9762\u662f\u6211\u81ea\u5df1\u5bf92440\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u63cf\u8ff0 mic : mic @ 4 a000000 { compatible = \"foo,foo-mic\" ; reg = < 0x4a000000 0x20 > ; interrupt - controller ; #interrupt-cells = <2>; }; sic : sic @ 4 a000000 { compatible = \"foo,foo-sic\" ; reg = < 0x4a000000 0x20 > ; interrupt - controller ; #interrupt-cells = <2>; interrupt - parent = <& mic > ; interrupts = < 6 IRQ_TYPE_LEVEL_LOW > , < 9 IRQ_TYPE_LEVEL_LOW > , < 15 IRQ_TYPE_LEVEL_LOW > , < 16 IRQ_TYPE_LEVEL_LOW > , < 23 IRQ_TYPE_LEVEL_LOW > , < 28 IRQ_TYPE_LEVEL_LOW > , < 31 IRQ_TYPE_LEVEL_LOW > ; }; \u8bbe\u5907\u6811\u62bd\u8c61\u597d\u4e4b\u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u7f16\u5199\u9a71\u52a8\u6587\u4ef6\u4e86\uff0c\u5728drivers/irqchip\u4e2d\u65b0\u5efairq-foo.c\u6587\u4ef6\uff0c\u5e76\u4fee\u6539Makefile\u3002\u7136\u540e\u5728\u6587\u4ef6\u4e2d\u4f7f\u7528 IRQCHIP_DECLARE \u5b8f\u5b9a\u4e49\u4e00\u4e2a\u521d\u59cb\u5316\u51fd\u6570\uff0c\u5728\u8fd9\u4e2a\u521d\u59cb\u5316\u51fd\u6570\u91cc\u4e3b\u8981\u5b8c\u6210\u7684\u5de5\u4f5c\u6709 \u5bc4\u5b58\u5668\u5730\u5740\u7684\u6620\u5c04 irq_domain\u7684\u6dfb\u52a0\u53ca\u8be5domain\u5bf9\u5e94\u7684ops(\u4e3b\u8981\u662fmap\u548cxlate)\u7684\u5b9e\u73b0 \u8bbe\u7f6eirq_chip\u7684mask/unmask/ack\u7b49\u56de\u8c03\uff0c\u8fd9\u4e2a\u662f\u548c\u5177\u4f53\u4e2d\u65ad\u63a7\u5236\u5668\u76f8\u5173\u7684 \u8bbe\u7f6eirq\u7684handle \u8bbe\u7f6echained\u7c7b\u578b\u7684handle\u548cdata(\u8fd9\u4e00\u6b65\u4e0d\u540c\u7684\u4e2d\u65ad\u63a7\u5236\u5668\u53ef\u80fd\u4e0d\u4e00\u6837\uff0c\u6709\u7684\u4e0d\u9700\u8981) \u5b9e\u73b0\u9a71\u52a8\u7684\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u8fd8\u4f1a\u9700\u8981\u7ef4\u62a4\u4e00\u4e9b\u9a71\u52a8\u79c1\u6709\u7684\u6570\u636e\u7ed3\u6784\u4ee5\u4fbf\u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c\uff0c\u5728\u8fd9\u91cc\u5c31\u7ef4\u62a4\u4e86\u4e00\u4efdmic\u5bf9\u5e94\u7684sic\u7684sub_bits\u6570\u636e\uff0c\u4ee5\u4fbf\u5728mask/unmask\u7684\u65f6\u5019\u505a\u4e00\u4e9b\u5224\u65ad\uff0c\u8fd9\u90e8\u5206\u53c2\u8003\u4e86\u4e09\u661f\u9a71\u52a8\u4e2d\u7684\u505a\u6cd5\u3002 irqchip\u7684\u9a71\u52a8\u79fb\u690d\u5230\u8fd9\u91cc\u5c31\u7ed3\u675f\u4e86\uff0c\u7ecf\u8fc7\u6d4b\u8bd5mic\u662f\u53ef\u4ee5\u6b63\u5e38\u7684\u5de5\u4f5c\u7684\uff0c\u800csic\u8fd8\u6ca1\u6709\u6d4b\u8bd5\uff0c\u540e\u7eed\u7f16\u5199\u4e32\u53e3\u9a71\u52a8\u7684\u65f6\u5019\u4fbf\u4f1a\u7528\u5230sic\u4e86\uff0c\u5230\u65f6\u5019\u518d\u770bsic\u80fd\u5426\u6b63\u5e38\u5de5\u4f5c\u3002\u6574\u4e2a\u79fb\u690d\u8fc7\u7a0b\u4e2d\u53c2\u8003\u4e86\u4e09\u661f\u63d0\u4f9b\u7684\u9a71\u52a8\u4ee5\u53ca\u4e00\u4e9b\u5176\u4ed6\u5382\u5546\u7684\u9a71\u52a8\uff0c\u591a\u8bfb\u4e00\u8bfb\u8fd9\u4e9b\u4ee3\u7801\u4fbf\u53ef\u4ee5\u719f\u6089\u9a71\u52a8\u7f16\u5199\u7684\u6d41\u7a0b\u4e86\uff0c\u4e0a\u8ff0\u6539\u52a8\u5185\u5bb9\u90fd\u5728 \u8fd9\u4e2a\u8865\u4e01 \u4e2d\u3002 5. \u5b9e\u73b0clk\u9a71\u52a8 \u00b6 \u8fd9\u90e8\u5206\u9a71\u52a8\u7684\u7f16\u5199\u53c2\u8003\u4e86\u4e09\u661f\u63d0\u4f9b\u7684\u9a71\u52a8\u548c\u5168\u5fd7\u7684simple-gates\u9a71\u52a8\u3002 clk\u9a71\u52a8\u5c5e\u4e8e\u7535\u6e90\u7ba1\u7406\u5b50\u7cfb\u7edf\u7684\u4e00\u90e8\u5206,\u4e3b\u8981\u529f\u80fd\u662f\u5b9e\u73b0soc\u5185\u90e8\u5404\u6a21\u5757\u548c\u5916\u8bbe\u7684\u65f6\u949f\u7ba1\u7406,\u7f16\u5199\u8fd9\u4e00\u90e8\u5206\u9a71\u52a8\u7684\u65f6\u5019\u9700\u8981\u5bf9CCF(Common Clock Framework)\u6709\u4e9b\u7b80\u5355\u7684\u4e86\u89e3,\u8fd9\u90e8\u5206\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003 \u7535\u6e90\u7ba1\u7406\u5b50\u7cfb\u7edf-\u8702\u7a9d\u79d1\u6280 \u3002 \u7531\u4e8e\u5bf9clock\u5404\u4e2a\u90e8\u5206\u8fdb\u884c\u5206\u7c7b\u6bd4\u8f83\u590d\u6742\uff0c\u51b5\u4e14\u8fd9\u91cc\u4e5f\u4e0d\u9700\u8981\u7279\u522b\u590d\u6742\u7684\u65f6\u949f\u7ba1\u7406\u529f\u80fd\uff0c\u800c\u4e14\u5728u-boot\u4e2d\u5df2\u7ecf\u5c06fclk\u3001hclk\u548cpclk\u521d\u59cb\u5316\u597d\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u76f4\u63a5\u7b80\u5355\u7c97\u66b4\u5c06fclk\u3001hclk\u548cpclk\u6ce8\u518c\u6210fixed rate clock\uff0c\u5185\u6838fixed rate\u76f8\u5173\u7684\u90e8\u5206\u4f1a\u81ea\u52a8\u4e3a\u6211\u4eec\u6ce8\u518c\u5bf9\u5e94\u7684clock\uff0c\u8bbe\u5907\u6811\u5982\u4e0b\u6240\u793a clocks { compatible = \"simple-bus\" ; #address-cells = <1>; #size-cells = <1>; xti : xti { compatible = \"fixed-clock\" ; clock - frequency = < 12000000 > ; clock - output - names = \"xti\" ; #clock-cells = <0>; }; fclk : fclk { compatible = \"fixed-clock\" ; clock - frequency = < 400000000 > ; clock - output - names = \"fclk\" ; #clock-cells = <0>; }; hclk : hclk { compatible = \"fixed-clock\" ; clock - frequency = < 100000000 > ; clock - output - names = \"hclk\" ; #clock-cells = <0>; }; pclk : pclk { compatible = \"fixed-clock\" ; clock - frequency = < 50000000 > ; clock - output - names = \"pclk\" ; #clock-cells = <0>; }; }; \u7136\u540e\u53c2\u8003\u5168\u5fd7\u7684simple-gates\u9a71\u52a8\u7f16\u5199\u6211\u4eec\u7684gates\u8bbe\u5907\u6811\u53ca\u9a71\u52a8\uff0c\u8bbe\u5907\u6811\u5982\u4e0b\u6240\u793a clk : clock - controller @ 0x4c000000 { compatible = \"foo,foo-clock\" ; reg = < 0x4c000000 0x40 > ; #clock-cells = <1>; clock - indices = < 4 > , < 5 > , < 6 > , < 7 > , < 8 > , < 9 > , < 10 > , < 11 > , < 12 > , < 13 > , < 14 > , < 15 > , < 16 > , < 17 > , < 18 > , < 19 > , < 20 > ; clock - parent - names = \"hclk\" , \"hclk\" , \"hclk\" , \"pclk\" , \"pclk\" , \"pclk\" , \"pclk\" , \"pclk\" , \"pclk\" , \"pclk\" , \"pclk\" , \"pclk\" , \"pclk\" , \"pclk\" , \"pclk\" , \"hclk\" , \"pclk\" ; clock - gates - names = \"nand\" , \"lcdc\" , \"usb-host\" , \"usb-device\" , \"timer\" , \"sdi\" , \"uart0\" , \"uart1\" , \"uart2\" , \"gpio\" , \"rtc\" , \"adc\" , \"iic\" , \"iis\" , \"spi\" , \"camera\" , \"ac97\" ; }; \u5177\u4f53\u7684\u4ee3\u7801\u53ef\u4ee5\u67e5\u770b \u8fd9\u4e2a\u8865\u4e01 \u3002 \u8fd9\u91cc\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff0c\u5982\u679c\u67d0\u4e2a\u5916\u8bbe\u7684\u65f6\u949f\u5728\u6ce8\u518cgate\u4e4b\u524d\u662f\u5f00\u7740\u7684\uff0c\u90a3\u4e48\u4e00\u5b9a\u8981\u5728\u6ce8\u518c\u5b8cgate\u4e4b\u540e\u901a\u8fc7\u5185\u6838\u63a5\u53e3\u4f7f\u80fd\u4e00\u4e0b\u8be5\u65f6\u949f\uff0c\u4ee3\u7801\u91cc\u7684foo_critical_clocks\u5c31\u662f\u8d77\u8fd9\u4e2a\u4f5c\u7528\u7684\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u5728initcall\u9636\u6bb5\u8c03\u7528clk_disable_unused\u65f6\u5bfc\u81f4\u963b\u585e\uff0c\u6211\u731c\u6d4b\u8fd9\u91cc\u963b\u585e\u53ef\u80fd\u662f\u56e0\u4e3a\u72b6\u6001\u4e0d\u4e00\u81f4\u5bfc\u81f4\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7initcall_debug\u6765\u8c03\u8bd5initcall\u7684\u6267\u884c\uff0c\u53ef\u4ee5\u4ece \u8fd9\u91cc \u4e86\u89e3\u7ec6\u8282\u3002 6. \u5b9e\u73b0timekeeping\u9a71\u52a8 \u00b6 \u6700\u5f00\u59cb\u770b\u4e09\u661f\u63d0\u4f9b\u7684pwm timer\u9a71\u52a8\u65f6\u6709\u70b9\u61f5\uff0c\u4e09\u661f\u7684\u9a71\u52a8\u5e94\u8be5\u662f\u4f7f\u7528\u540c\u4e00\u4e2a\u5b9a\u65f6\u5668\u65e2\u4f5c\u4e3aclocksource\u53c8\u4f5c\u4e3aclcokevent\uff0c\u4ece\u4ed6\u4eec\u7684\u529f\u80fd\u5206\u7c7b\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4fe9\u6309\u9053\u7406\u5e94\u8be5\u4f7f\u7528\u4e0d\u540c\u5b9a\u65f6\u5668\uff0c \u8fd9\u7bc7\u535a\u5ba2 \u5bf9time\u90e8\u5206\u505a\u4e86\u6bd4\u8f83\u8be6\u7ec6\u7684\u4ecb\u7ecd\uff0c\u91cc\u9762\u4e5f\u63d0\u5230\u4e86\u8fd9\u4e24\u4e2a\u529f\u80fd\u5e94\u8be5\u662f\u7531\u4e24\u4e2a\u786c\u4ef6\u90e8\u5206\u6765\u5b9e\u73b0\u7684\u3002\u6240\u4ee5\u8fd9\u91cc\u7684\u79fb\u690d\u51b3\u5b9a\u91c7\u7528\u4e24\u4e2a\u5b9a\u65f6\u5668\u6765\u5b9e\u73b0\uff0c\u4e00\u4e2a\u63d0\u4f9b\u4e2d\u65ad\uff0c\u800c\u53e6\u4e00\u4e2a\u4e0d\u63d0\u4f9b\u4e2d\u65ad\uff0c\u901a\u8fc7\u8bbe\u5907\u6811\u4e2d\u7684\u4e00\u4e9b\u5b57\u6bb5\u6765\u8fdb\u884c\u533a\u5206\uff0c\u4e0d\u8fc7\u8fd9\u6837\u505a\u4f3c\u4e4e\u4e0d\u662f\u5f88\u4f18\u96c5\uff0c\u4e0d\u8fc7\u8fd8\u662f\u5148\u5b9e\u73b0\u529f\u80fd\u518d\u8bf4\u5427\u3002 \u6700\u5f00\u59cb\u5b9e\u73b0\u9a71\u52a8\u7684\u65f6\u5019\u6211\u60f3\u63d0\u9ad8\u4e00\u4e9b\u7cbe\u5ea6\uff0c\u4e8e\u662f\u5c06\u5b9a\u65f6\u5668\u7684\u65f6\u949f\u5206\u9891\u5230\u4e865M\uff0c\u4f46\u5b9e\u9645\u8fd0\u884c\u7684\u65f6\u5019\u53d1\u73b0\u542f\u52a8\u65f6\u5019\u7684\u65f6\u95f4\u6233\u51fa\u73b0\u4e86\u5f88\u4e25\u91cd\u7684\u56de\u7ed5\u73b0\u8c61\uff0c\u8fd9\u90e8\u5206\u65f6\u95f4\u6233\u7684\u6253\u5370\u5e94\u8be5\u662f\u7531sched_clock\u90e8\u5206\u901a\u8fc7\u6211\u4eec\u7528sched_clock_register\u6ce8\u518c\u7684\u8bfb\u51fd\u6570\u6765\u5b9e\u73b0\u7684\uff0c\u4f46\u662fs3c2440\u7684\u5b9a\u65f6\u5668\u53ea\u670916\u4f4d\uff0c\u53ef\u80fd\u662f\u63d0\u9ad8\u5b9a\u65f6\u5668\u9891\u7387\u540e\u6ea2\u51fa\u592a\u5feb\u5bfc\u81f4\u5185\u6838\u8fd8\u6ca1\u6765\u5f97\u53ca\u67e5\u8be2\u5bfc\u81f4\u7684\uff0c\u6240\u4ee5\u6700\u540e\u8fd8\u662f\u5c06\u5b9a\u65f6\u5668\u65f6\u949f\u9891\u7387\u8c03\u8282\u5230\u4e861M\u3002 \u8fd9\u90e8\u5206\u7684\u4fee\u6539\u53ef\u4ee5\u67e5\u770b \u8fd9\u4e2a\u8865\u4e01 \u3002 7. \u5b9e\u73b0uart\u9a71\u52a8 \u00b6 TODO","title":"SOC\u79fb\u690d\u5b9e\u8df5"},{"location":"embedded-dev/linux/porting-to-new-soc/#linux-soc","text":"Warning \u672c\u6587\u672a\u5b8c\u6210\uff0c\u5df2\u7ec8\u6b62\uff0c\u5185\u5bb9\u4ec5\u4f9b\u53c2\u8003 Note \u4e00\u76f4\u4ee5\u6765\u90fd\u60f3\u5b66\u4e60\u5982\u4f55\u5c06Linux\u79fb\u690d\u5230\u4e00\u4e2a\u67b6\u6784\u5df2\u7ecf\u88ab\u652f\u6301\u7684\u65b0SOC\u4e0a\uff0c\u73b0\u5728\u7ec8\u4e8e\u6709\u65f6\u95f4\u6765\u8fdb\u884c\u4e00\u4e9b\u5b9e\u8df5\u7ec3\u4e60\u4e86\uff0c\u8fd9\u4e2a\u7b14\u8bb0\u8bb0\u5f55\u4e86\u6574\u4e2a\u5b9e\u8df5\u8fc7\u7a0b\u4ee5\u53ca\u5728\u79fb\u690d\u8fc7\u7a0b\u4e2d\u8e29\u5230\u7684\u4e00\u4e9b\u5751\u3002\u6211\u53ea\u6709mini2440\u548clicheepi zero\u4e24\u4e2a\u5e73\u53f0\u7684\u5f00\u53d1\u677f\uff0c\u60f3\u6bd4\u8f83\u800c\u8a00\uff0cs3c2440\u7684\u5185\u90e8\u7ed3\u6784\u6bd4\u8f83\u7b80\u5355\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c06s3c2440\u5047\u8bbe\u6210\u4e00\u4e2a\u65b0\u7684SOC\uff0c\u6682\u4e14\u547d\u540d\u4e3afoo\u5427\uff0c\u79fb\u690d\u8fc7\u7a0b\u91c7\u7528\u4e86\u8bbe\u5907\u6811\u7684\u673a\u5236\uff0c\u4e0b\u9762\u5c31\u662f\u6b63\u6587\u4e86\u3002","title":"Linux SOC\u7ea7\u5185\u6838\u79fb\u690d\u5b9e\u8df5"},{"location":"embedded-dev/linux/porting-to-new-soc/#1","text":"Linux\u7684\u79fb\u690d\u6709\u4e09\u79cd\u7ea7\u522b\uff1a \u79fb\u690d\u5230\u4e00\u4e2a\u65b0\u7684\u67b6\u6784\u4e0a \u79fb\u690d\u5230\u4e00\u4e2a\u67b6\u6784\u5df2\u7ecf\u88ab\u652f\u6301\u7684SOC\u4e0a \u79fb\u690d\u5230\u4e00\u4e2a\u65b0\u7684\u677f\u5361\u4e0a \u67b6\u6784\u7ea7\u522b\u7684\u79fb\u690d\u50cf\u6211\u4eec\u8fd9\u6837\u7684\u666e\u901a\u5f00\u53d1\u8005\u5f88\u96be\u4f1a\u63a5\u89e6\u5230\uff0c\u677f\u5361\u7ea7\u522b\u7684\u79fb\u690d\u7f51\u4e0a\u5df2\u7ecf\u6709\u76f8\u5f53\u591a\u7684\u6587\u6863\u4e86\uff0c\u800cSOC\u7ea7\u522b\u79fb\u690d\u7684\u5de5\u4f5c\u5f80\u5f80\u7531\u82af\u7247\u539f\u5382\u6765\u8fdb\u884c\uff0c\u8fd9\u6b21\u7684\u79fb\u690d\u8fc7\u7a0b\u5c31\u5927\u91cf\u53c2\u8003\u4e86\u5185\u6838\u4e2d\u4e0d\u540c\u5382\u5546\u7684\u4ee3\u7801\u3002 \u90a3\u4e48\uff0c\u8981\u8ba9linux\u8fd0\u884c\u5728\u4e00\u4e2a\u65b0\u7684SOC\u4e0a\u9700\u8981\u505a\u54ea\u4e9b\u5de5\u4f5c\u5462\uff0c\u6211\u5728\u7f51\u4e0a\u627e\u5230\u4e86\u4e24\u7bc7\u6587\u6863\uff1a arm-soc-checklist.pdf porting-linux-to-a-new-soc.pdf \u4ece\u6587\u6863\u4e2d\u6211\u4eec\u53ef\u4ee5\u4e86\u89e3\u5230\uff0c\u7531\u4e8eSOC\u91c7\u7528\u7684\u67b6\u6784\u5df2\u7ecf\u88ablinux\u652f\u6301\uff0c\u8fd9\u610f\u5473\u7740\u5185\u5b58\u7ba1\u7406\u90e8\u5206\u5df2\u7ecf\u662f\u53ef\u7528\u7684\uff0c\u8981\u8ba9linux\u8fd0\u884c\u8d77\u6765\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b9e\u73b0 \u4e2d\u65ad\u63a7\u5236\u5668\u9a71\u52a8 \u3001 \u5b9a\u65f6\u5668\u9a71\u52a8 \u3001 \u4e32\u53e3\u9a71\u52a8 \u8fd9\u4e09\u90e8\u5206\u3002\u5f53\u7136\u5b9e\u73b0\u8fd9\u4e9b\u9a71\u52a8\u53ea\u662f\u6700\u57fa\u7840\u7684\u90e8\u5206\uff0c\u8981\u8ba9\u5404\u4e2a\u5916\u8bbe\u6b63\u5e38\u8fd0\u884c\u8fd8\u9700\u8981\u5927\u91cf\u7684\u9a71\u52a8\u5f00\u53d1\u5de5\u4f5c\u3002","title":"1. \u79fb\u690d\u524d\u9700\u8981\u4e86\u89e3\u7684\u4e00\u4e9b\u4fe1\u606f"},{"location":"embedded-dev/linux/porting-to-new-soc/#2","text":"\u7f16\u8bd1\u6846\u67b6\u90e8\u5206\u7684\u642d\u5efa\u53c2\u8003\u4e86mach-mxs\u5e73\u53f0\u7684\u4ee3\u7801 \u5728arch/arm/\u4e0b\u65b0\u5efamach-foo\u76ee\u5f55\uff0c\u5728\u8be5\u76ee\u5f55\u4e0b\u65b0\u5efaKconfig\u3001Makfile\u3001mach-foo.c\u6587\u4ef6\uff0c\u4fee\u6539\u540e\u7684\u76ee\u5f55\u6811\u5982\u4e0b\uff1a arch/arm/mach-foo \u251c\u2500\u2500 Kconfig \u251c\u2500\u2500 mach-foo.c \u2514\u2500\u2500 Makefile \u4fee\u6539mach-foo\u4e2d\u7684\u4e09\u4e2a\u6587\u4ef6\uff0c\u5206\u522b\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a /* mach-foo.c */ #include <linux/io.h> #include <linux/compiler.h> #include <asm/mach/arch.h> static void __init foo_machine_init ( void ) { } static const __initconst char * const foo_dt_compat [] = { \"none,foo\" , NULL , }; DT_MACHINE_START ( foo , \"mach-foo(DT)\" ) . init_machine = foo_machine_init , . dt_compat = foo_dt_compat , MACHINE_END #Makefile obj- $( CONFIG_ARCH_FOO ) + = mach-foo.o #Kconfig config ARCH_FOO bool \"foo(actually s3c2440) SOC support\" depends on ARCH_MULTI_V4T select CPU_ARM920T select GPIOLIB select PINCTRL select SOC_BUS help Support for my test project. \u8fd9\u91cc\u7684\u4fee\u6539\u53c2\u8003\u4e86mach-mxs\u4e2d\u7684\u4ee3\u7801\uff0c CPU_ARM920T \u8fd9\u4e2a\u5b8f\u7528\u6765\u5b9a\u4e49CPU\u7684\u7c7b\u578b\uff0c\u5185\u6838\u4e00\u5f00\u59cb\u68c0\u6d4bCPU\u662f\u5426\u5339\u914d\u4e5f\u662f\u901a\u8fc7\u8fd9\u4e2a\u5b8f\u6765\u9009\u62e9CPU\u578b\u53f7\u7684\uff0c\u5177\u4f53\u4fe1\u606f\u53ef\u4ee5\u4ece \u8fd9\u91cc \u67e5\u770b\u3002Kconfig\u4e2d\u5176\u4f59\u7684\u9009\u9879\u90fd\u662f\u76f4\u63a5\u4ecemach-foo\u76ee\u5f55\u4e0b\u6284\u6765\u7684\uff0c\u6682\u65f6\u53ef\u4ee5\u4e0d\u7528\u7406\u4f1a\uff0c\u4e0d\u8fc7\u8fd9\u4e2a SOC_BUS \u540e\u9762\u53ef\u80fd\u4f1a\u7528\u5230\uff0c\u4e5f\u662f\u4e00\u4e2a\u6bd4\u8f83\u6709\u8da3\u7684\u7279\u6027\uff0c\u53ef\u4ee5\u4ece \u8fd9\u91cc \u67e5\u770b\u7ec6\u8282\u3002 \u4fee\u6539\u4e0a\u7ea7\u76ee\u5f55(arch/arm)\u4e2d\u7684Kconfig\u3001Makefile\uff0c\u4e3b\u8981\u4fee\u6539\u5982\u4e0b\uff1a #arch/arm/Kconfig source \"arch/arm/mach-foo/Kconfig\" #arch/arm/Makefile machine- $( CONFIG_ARCH_FOO ) + = foo \u89c2\u5bdf\u8fd9\u4e24\u4e2a\u6587\u4ef6\u91cc\u9762\u7684\u539f\u59cb\u5185\u5bb9\u53ef\u4ee5\u53d1\u73b0\u662f\u6309\u7167\u82f1\u6587\u5b57\u6bcd\u987a\u5e8f\u6765\u6392\u5e8f\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u6dfb\u52a0\u8fd9\u4e24\u5904\u7684\u65f6\u5019\u4e5f\u8981\u9075\u5faa\u8fd9\u4e2a\u89c4\u5219\uff0c\u8fd9\u91cc\u7684 CONFIG_ARCH_FOO \u662f\u65b0\u6dfb\u52a0\u7684SOC\u7684\u5b8f\uff0c\u5bf9\u5e94\u7b2c2\u6b65\u4e2dKconfig\u4e2d\u7684\u5185\u5bb9\u3002 \u5728arch/arm/boot/dts\u4e2d\u65b0\u5efa\u4e24\u4e2a\u6587\u4ef6foo.dtsi\u548cfoo-evk.dts\uff0c\u5e76\u5728\u91cc\u9762\u586b\u5145\u9002\u5f53\u7684\u5185\u5bb9\uff0c\u5176\u4e2d\u7684cpus\u8282\u70b9\u548cmemory\u8282\u70b9\u8981\u6839\u636e\u5177\u4f53\u60c5\u51b5\u6765\u586b\u5199 /* foo.dtsi */ #include \"skeleton.dtsi\" #include <dt-bindings/gpio/gpio.h> #include <dt-bindings/interrupt-controller/irq.h> / { model = \"foo SOC\" ; compatible = \"none,foo\" ; cpus { #address-cells = <0>; #size-cells = <0>; cpu { compatible = \"arm,arm920t\" ; }; }; }; /* foo-evk.dts */ / dts - v1 / ; #include \"foo.dtsi\" / { model = \"foo board\" ; compatible = \"none,foo\" ; memory { reg = < 0x30000000 0x04000000 > ; }; }; \u4fee\u6539arch/arm/boot/dts/Makefile,\u589e\u52a0\u8bbe\u5907\u6811\u7684\u7f16\u8bd1\u9009\u9879 #arch/arm/boot/dts/Makefile dtb- $( CONFIG_ARCH_FOO ) + = \\ foo-evk.dtb \u62f7\u8d1dmxs_defconfig\u5230foo_defconfig\u4f5c\u4e3a\u6211\u4eec\u7684\u9ed8\u8ba4\u914d\u7f6e\u6a21\u677f\uff0c\u7136\u540e\u6267\u884cmake menuconfig\u9009\u62e9\u6211\u4eec\u4e0a\u9762\u6dfb\u52a0\u7684\u914d\u7f6e\uff0c\u5e76\u9002\u5f53\u7684\u5220\u51cf\u4e00\u4e9b\u76ee\u524d\u7528\u4e0d\u5230\u7684\u9a71\u52a8\uff0c\u51cf\u5c11\u7f16\u8bd1\u65f6\u95f4\u3002 \u6700\u540e\u6267\u884c\u7f16\u8bd1\uff0c\u5982\u679czImage\u548cdtb\u90fd\u80fd\u6b63\u786e\u751f\u6210\u7684\u8bdd\u5c31\u53ef\u4ee5\u628a\u5f53\u524d\u7684.config\u4fdd\u5b58\u6210foo_defconfig\u4e86\uff0c\u5177\u4f53\u7684\u4fdd\u5b58\u6b65\u9aa4\u53ef\u4ee5\u4ece \u8fd9\u91cc \u67e5\u770b\u3002 \u4e0a\u8ff0\u4fee\u6539\u53ef\u4ee5\u53c2\u8003 \u8fd9\u4e2a\u8865\u4e01 \u3002","title":"2. \u642d\u5efa\u7f16\u8bd1\u6846\u67b6"},{"location":"embedded-dev/linux/porting-to-new-soc/#3-earlycon","text":"\u6b64\u90e8\u5206\u7684\u4fee\u6539\u53c2\u8003\u4e86 X-012-KERNEL-serial early console\u7684\u79fb\u690d \u3001 Linux earlycon made life easy \u3001kernel-parameters.txt\u4ee5\u53ca\u5185\u6838\u4e2d\u5176\u4ed6SOC\u7684\u5b9e\u73b0\u3002 \u5728\u6b63\u5f0f\u7684\u4e32\u53e3\u9a71\u52a8\u53ef\u7528\u4e4b\u524d\u547d\u4ee4\u884c\u53c2\u6570\u6307\u5b9a\u7684\u7ec8\u7aef\u662f\u65e0\u6cd5\u8f93\u51fa\u4efb\u4f55\u4fe1\u606f\u7684\uff0c\u4e3a\u6b64Linux\u63d0\u4f9b\u4e86\u4e24\u79cd\u673a\u5236\u6765\u8fdb\u884c\u65e9\u671f\u7684log\u8f93\u51fa\uff0c\u5206\u522b\u662fearly_printk\u548cearlycon\uff0c\u4ece\u7f51\u4e0a\u7684\u79cd\u79cd\u8bf4\u6cd5\u6765\u770b\uff0cearlycon\u662f\u4e00\u79cd\u66f4\u597d\u3001\u66f4\u4f18\u96c5\u7684\u65b9\u5f0f\uff0c\u6240\u4ee5\u8fd9\u91cc\u91c7\u7528earlycon\u4f5c\u4e3a\u6211\u4eec\u65e9\u671flog\u6253\u5370\u7684\u65b9\u5f0f\u3002 \u5728u-boot\u4e2d\u4e32\u53e3\u5df2\u7ecf\u521d\u59cb\u5316\u8fc7\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e32\u53e3\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u53c2\u8003 X-012-KERNEL-serial early console\u7684\u79fb\u690d \uff0c\u5728drivers/tty/serial/\u4e0b\u65b0\u5efafoo-serial.c\uff0c\u5e76\u586b\u5145\u4e0b\u9762\u7684\u5185\u5bb9\uff0c\u8fd9\u91cc\u4e0d\u540c\u7684\u5730\u65b9\u662f\u501f\u52a9earlycon\u7684\u6846\u67b6\u6765\u6620\u5c04\u7684\u5185\u5b58\uff0c\u6ca1\u6709\u624b\u52a8\u8fdb\u884c\u5185\u5b58\u6620\u5c04\u3002 /* drivers/tty/serial/foo-serial.c */ #include <linux/kernel.h> #include <linux/console.h> #include <linux/init.h> #include <linux/serial_core.h> #include <asm/io.h> #include <asm/early_ioremap.h> #define UART_UTRSTAT (0x10) #define UART_UTXH (0x20) static void foo_serial_putc ( struct uart_port * port , int ch ) { while ( ! ( readl ( port -> membase + UART_UTRSTAT ) & 0x2 )); writeb ( ch , port -> membase + UART_UTXH ); } static void earlycon_foo_write ( struct console * con , const char * s , unsigned n ) { struct earlycon_device * dev = con -> data ; uart_console_write ( & dev -> port , s , n , foo_serial_putc ); } int __init earlycon_foo_setup ( struct earlycon_device * dev , const char * opt ) { if ( ! dev -> port . membase ) return - ENODEV ; dev -> con -> write = earlycon_foo_write ; return 0 ; } EARLYCON_DECLARE ( foo_serial , earlycon_foo_setup ); \u8fd9\u91cc\u4f7f\u7528\u8bbe\u5907\u6811\u6765\u4f20\u9012earlycon\u9700\u8981\u7684\u53c2\u6570\uff0c\u6240\u4ee5\u5728foo-evk.dts\u4e2d\u6dfb\u52a0\u4e0b\u9762\u7684\u5185\u5bb9\uff0c\u6ce8\u610f\u8fd9\u91cc\u6dfb\u52a0\u4e86\u7528\u4e8e\u6620\u5c04\u7684\u5730\u5740\uff0cearlycon\u9ed8\u8ba4\u4f1a\u6620\u5c0464\u5b57\u8282\u5927\u5c0f\u7684\u7a7a\u95f4 chosen { bootargs = \"earlycon=foo_serial,0x50000000 console=ttyS0\" ; }; \u8fd9\u91cc\u4e4b\u6240\u4ee5\u6dfb\u52a0\u4e86\u4e00\u4e2a\u989d\u5916\u7684console\u53c2\u6570\u662f\u56e0\u4e3a\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u53c2\u6570\u7684\u8bdd\u5185\u6838\u4f1a\u5f88\u5feb\u7684\u5207\u6362\u5230\u9ed8\u8ba4console(tty0)\u4e0a\uff0c\u4e4b\u540e\u6240\u6709\u7684\u542f\u52a8\u65e5\u5fd7\u4fbf\u770b\u4e0d\u5230\u4e86\uff0c\u4f46\u6211\u4eec\u5e76\u4e0d\u60f3\u8fd9\u6837\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u6307\u5b9a\u4e00\u4e2a\u975e\u9ed8\u8ba4\u7684console\u8bbe\u5907\u3002 \u53c2\u8003\u5176\u4f59\u5382\u5546\u9a71\u52a8\u5bf9Makefile\u548cKconfig\u8fdb\u884c\u4fee\u6539\uff0c\u5e76\u901a\u8fc7menuconfig\u914d\u7f6e\u652f\u6301printk\u7684\u8f93\u51fa,\u9700\u8981\u4f7f\u80fd\u4e0b\u9762\u8fd9\u4e2a\u9009\u9879 General setup ---> [ * ] Configure standard kernel features ( expert users ) ---> \u4e00\u5207\u987a\u5229\u7684\u8bdd\u8fd9\u4e2a\u65f6\u5019\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e32\u53e3\u770b\u5230kernel\u7684\u542f\u52a8\u8fc7\u7a0b\u4e86\uff0c\u6b64\u90e8\u5206\u4fee\u6539\u53ef\u4ee5\u53c2\u8003 \u8fd9\u4e2a\u8865\u4e01 \u3002","title":"3. \u5b9e\u73b0earlycon\u9a71\u52a8"},{"location":"embedded-dev/linux/porting-to-new-soc/#4-irqchip","text":"\u5f88\u591a\u7684\u9a71\u52a8\u90fd\u4f9d\u8d56\u4e8e\u4e2d\u65ad\uff0c\u6bd4\u5982\u5b9a\u65f6\u5668\uff0c\u800c\u5b9a\u65f6\u5668\u9a71\u52a8\u662f\u5185\u6838\u5fc5\u987b\u7684\uff0c\u6240\u4ee5\u4e2d\u65ad\u7684\u9a71\u52a8\u662f\u5fc5\u987b\u7684\uff0c\u8fd9\u91ccirqchip\u9a71\u52a8\u7684\u5b9e\u73b0\u53c2\u8003\u4e86irq-lpc32xx.c\u3001irq-mxs.c\u3001\u4e09\u661f\u7684\u9a71\u52a8\u4ee3\u7801\u4ee5\u53ca\u8702\u7a9d\u79d1\u6280\u8bba\u575b\u7684\u6587\u7ae0\u3002 \u53d7\u76ca\u4e8e\u5185\u6838\u6846\u67b6\u7684\u5de7\u5999\uff0c\u5927\u90e8\u5206\u65f6\u5019\u6211\u4eec\u4e0d\u9700\u8981\u5bf9\u5177\u4f53\u7ec6\u8282\u8fdb\u884c\u4e86\u89e3\u4e5f\u53ef\u4ee5\u5f00\u53d1\u51fa\u6b63\u5e38\u5de5\u4f5c\u7684\u9a71\u52a8\u4ee3\u7801\u3002\u5185\u6838\u9a71\u52a8\u5f00\u53d1\u5f88\u591a\u65f6\u5019\u5c31\u662f\u5c06\u4e00\u4e2a\u8bbe\u5907\u8fdb\u884c\u62bd\u8c61\uff0c\u7136\u540e\u586b\u5145\u5230\u5185\u6838\u63d0\u4f9b\u7684\u6846\u67b6\u4e2d\u53bb\u3002 \u4e2d\u65ad\u5b50\u7cfb\u7edf-\u8702\u7a9d\u79d1\u6280 \u7cfb\u5217\u6587\u7ae0\u5bf9linux\u4e2d\u65ad\u5b50\u7cfb\u7edf\u8fdb\u884c\u4e86\u5f88\u8be6\u7ec6\u7684\u4ecb\u7ecd\uff0c\u4ece\u8fd9\u4e9b\u6587\u7ae0\u4e2d\u6211\u4eec\u53ef\u4ee5\u4e86\u89e3\u5230\u5f88\u591a\u7ec6\u8282\uff0c\u4f46\u662f\u672c\u6b21\u79fb\u690d\u4e3b\u8981\u662f\u53c2\u8003\u4e86\u5185\u6838\u4e2d\u4e00\u4e9b\u5382\u5546\u7684\u4ee3\u7801\u3002 s3c2440\u7684\u4e2d\u65ad\u63a7\u5236\u5668\u5c06\u4e2d\u65ad\u6e90\u5206\u4e3a\u4e86main\u548csub\u4e24\u79cd\uff0c\u8981\u60f3\u81ea\u5df1\u5199\u4e00\u4efd\u9a71\u52a8\uff0c\u5148\u8bfb\u4e00\u4e0b\u4e09\u661f\u63d0\u4f9b\u7684\u9a71\u52a8\u518d\u4e0a\u624b\u4e5f\u4e0d\u8fdf\u3002\u5382\u5546\u9a71\u52a8\u603b\u662f\u4f1a\u4e00\u4efd\u9a71\u52a8\u517c\u5bb9\u591a\u6b3eSOC\uff0c\u6709\u65f6\u4f1a\u4e3a\u6211\u4eec\u9605\u8bfb\u4ee3\u7801\u5e26\u6765\u4e00\u4e9b\u969c\u788d\u3002\u8fd9\u91cc\u5bf9\u6bd4\u9605\u8bfb\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u51e0\u4efd\u4ee3\u7801\uff0c\u53c8\u8003\u8651\u5230s3c3440\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u8bbe\u8ba1\uff0c\u6700\u540e\u51b3\u5b9a\u53c2\u7167irq-lpc32xx.c\u4e2d\u7684\u5b9e\u73b0\u65b9\u5f0f\u6765\u7f16\u5199foo\u7684irqchip\u9a71\u52a8\u3002 \u7531\u4e8e\u79fb\u690d\u8fc7\u7a0b\u6bd4\u8f83\u590d\u6742\uff0c\u4e14\u5e76\u4e0d\u901a\u7528\uff0c\u4f46\u662f\u6574\u4f53\u601d\u60f3\u662f\u4e00\u81f4\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ea\u662f\u7b80\u8981\u4ecb\u7ecd\u4e00\u4e0b\u79fb\u690d\u7684\u6d41\u7a0b\u3002 \u9996\u5148\u5c06\u62bd\u8c61\u597d\u7684\u4e2d\u65ad\u63a7\u5236\u5668\u5728\u8bbe\u5907\u6811\u4e2d\u8fdb\u884c\u63cf\u8ff0\uff0c\u4e0b\u9762\u662f\u6211\u81ea\u5df1\u5bf92440\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u63cf\u8ff0 mic : mic @ 4 a000000 { compatible = \"foo,foo-mic\" ; reg = < 0x4a000000 0x20 > ; interrupt - controller ; #interrupt-cells = <2>; }; sic : sic @ 4 a000000 { compatible = \"foo,foo-sic\" ; reg = < 0x4a000000 0x20 > ; interrupt - controller ; #interrupt-cells = <2>; interrupt - parent = <& mic > ; interrupts = < 6 IRQ_TYPE_LEVEL_LOW > , < 9 IRQ_TYPE_LEVEL_LOW > , < 15 IRQ_TYPE_LEVEL_LOW > , < 16 IRQ_TYPE_LEVEL_LOW > , < 23 IRQ_TYPE_LEVEL_LOW > , < 28 IRQ_TYPE_LEVEL_LOW > , < 31 IRQ_TYPE_LEVEL_LOW > ; }; \u8bbe\u5907\u6811\u62bd\u8c61\u597d\u4e4b\u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u7f16\u5199\u9a71\u52a8\u6587\u4ef6\u4e86\uff0c\u5728drivers/irqchip\u4e2d\u65b0\u5efairq-foo.c\u6587\u4ef6\uff0c\u5e76\u4fee\u6539Makefile\u3002\u7136\u540e\u5728\u6587\u4ef6\u4e2d\u4f7f\u7528 IRQCHIP_DECLARE \u5b8f\u5b9a\u4e49\u4e00\u4e2a\u521d\u59cb\u5316\u51fd\u6570\uff0c\u5728\u8fd9\u4e2a\u521d\u59cb\u5316\u51fd\u6570\u91cc\u4e3b\u8981\u5b8c\u6210\u7684\u5de5\u4f5c\u6709 \u5bc4\u5b58\u5668\u5730\u5740\u7684\u6620\u5c04 irq_domain\u7684\u6dfb\u52a0\u53ca\u8be5domain\u5bf9\u5e94\u7684ops(\u4e3b\u8981\u662fmap\u548cxlate)\u7684\u5b9e\u73b0 \u8bbe\u7f6eirq_chip\u7684mask/unmask/ack\u7b49\u56de\u8c03\uff0c\u8fd9\u4e2a\u662f\u548c\u5177\u4f53\u4e2d\u65ad\u63a7\u5236\u5668\u76f8\u5173\u7684 \u8bbe\u7f6eirq\u7684handle \u8bbe\u7f6echained\u7c7b\u578b\u7684handle\u548cdata(\u8fd9\u4e00\u6b65\u4e0d\u540c\u7684\u4e2d\u65ad\u63a7\u5236\u5668\u53ef\u80fd\u4e0d\u4e00\u6837\uff0c\u6709\u7684\u4e0d\u9700\u8981) \u5b9e\u73b0\u9a71\u52a8\u7684\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u8fd8\u4f1a\u9700\u8981\u7ef4\u62a4\u4e00\u4e9b\u9a71\u52a8\u79c1\u6709\u7684\u6570\u636e\u7ed3\u6784\u4ee5\u4fbf\u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c\uff0c\u5728\u8fd9\u91cc\u5c31\u7ef4\u62a4\u4e86\u4e00\u4efdmic\u5bf9\u5e94\u7684sic\u7684sub_bits\u6570\u636e\uff0c\u4ee5\u4fbf\u5728mask/unmask\u7684\u65f6\u5019\u505a\u4e00\u4e9b\u5224\u65ad\uff0c\u8fd9\u90e8\u5206\u53c2\u8003\u4e86\u4e09\u661f\u9a71\u52a8\u4e2d\u7684\u505a\u6cd5\u3002 irqchip\u7684\u9a71\u52a8\u79fb\u690d\u5230\u8fd9\u91cc\u5c31\u7ed3\u675f\u4e86\uff0c\u7ecf\u8fc7\u6d4b\u8bd5mic\u662f\u53ef\u4ee5\u6b63\u5e38\u7684\u5de5\u4f5c\u7684\uff0c\u800csic\u8fd8\u6ca1\u6709\u6d4b\u8bd5\uff0c\u540e\u7eed\u7f16\u5199\u4e32\u53e3\u9a71\u52a8\u7684\u65f6\u5019\u4fbf\u4f1a\u7528\u5230sic\u4e86\uff0c\u5230\u65f6\u5019\u518d\u770bsic\u80fd\u5426\u6b63\u5e38\u5de5\u4f5c\u3002\u6574\u4e2a\u79fb\u690d\u8fc7\u7a0b\u4e2d\u53c2\u8003\u4e86\u4e09\u661f\u63d0\u4f9b\u7684\u9a71\u52a8\u4ee5\u53ca\u4e00\u4e9b\u5176\u4ed6\u5382\u5546\u7684\u9a71\u52a8\uff0c\u591a\u8bfb\u4e00\u8bfb\u8fd9\u4e9b\u4ee3\u7801\u4fbf\u53ef\u4ee5\u719f\u6089\u9a71\u52a8\u7f16\u5199\u7684\u6d41\u7a0b\u4e86\uff0c\u4e0a\u8ff0\u6539\u52a8\u5185\u5bb9\u90fd\u5728 \u8fd9\u4e2a\u8865\u4e01 \u4e2d\u3002","title":"4. \u5b9e\u73b0irqchip\u9a71\u52a8"},{"location":"embedded-dev/linux/porting-to-new-soc/#5-clk","text":"\u8fd9\u90e8\u5206\u9a71\u52a8\u7684\u7f16\u5199\u53c2\u8003\u4e86\u4e09\u661f\u63d0\u4f9b\u7684\u9a71\u52a8\u548c\u5168\u5fd7\u7684simple-gates\u9a71\u52a8\u3002 clk\u9a71\u52a8\u5c5e\u4e8e\u7535\u6e90\u7ba1\u7406\u5b50\u7cfb\u7edf\u7684\u4e00\u90e8\u5206,\u4e3b\u8981\u529f\u80fd\u662f\u5b9e\u73b0soc\u5185\u90e8\u5404\u6a21\u5757\u548c\u5916\u8bbe\u7684\u65f6\u949f\u7ba1\u7406,\u7f16\u5199\u8fd9\u4e00\u90e8\u5206\u9a71\u52a8\u7684\u65f6\u5019\u9700\u8981\u5bf9CCF(Common Clock Framework)\u6709\u4e9b\u7b80\u5355\u7684\u4e86\u89e3,\u8fd9\u90e8\u5206\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003 \u7535\u6e90\u7ba1\u7406\u5b50\u7cfb\u7edf-\u8702\u7a9d\u79d1\u6280 \u3002 \u7531\u4e8e\u5bf9clock\u5404\u4e2a\u90e8\u5206\u8fdb\u884c\u5206\u7c7b\u6bd4\u8f83\u590d\u6742\uff0c\u51b5\u4e14\u8fd9\u91cc\u4e5f\u4e0d\u9700\u8981\u7279\u522b\u590d\u6742\u7684\u65f6\u949f\u7ba1\u7406\u529f\u80fd\uff0c\u800c\u4e14\u5728u-boot\u4e2d\u5df2\u7ecf\u5c06fclk\u3001hclk\u548cpclk\u521d\u59cb\u5316\u597d\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u76f4\u63a5\u7b80\u5355\u7c97\u66b4\u5c06fclk\u3001hclk\u548cpclk\u6ce8\u518c\u6210fixed rate clock\uff0c\u5185\u6838fixed rate\u76f8\u5173\u7684\u90e8\u5206\u4f1a\u81ea\u52a8\u4e3a\u6211\u4eec\u6ce8\u518c\u5bf9\u5e94\u7684clock\uff0c\u8bbe\u5907\u6811\u5982\u4e0b\u6240\u793a clocks { compatible = \"simple-bus\" ; #address-cells = <1>; #size-cells = <1>; xti : xti { compatible = \"fixed-clock\" ; clock - frequency = < 12000000 > ; clock - output - names = \"xti\" ; #clock-cells = <0>; }; fclk : fclk { compatible = \"fixed-clock\" ; clock - frequency = < 400000000 > ; clock - output - names = \"fclk\" ; #clock-cells = <0>; }; hclk : hclk { compatible = \"fixed-clock\" ; clock - frequency = < 100000000 > ; clock - output - names = \"hclk\" ; #clock-cells = <0>; }; pclk : pclk { compatible = \"fixed-clock\" ; clock - frequency = < 50000000 > ; clock - output - names = \"pclk\" ; #clock-cells = <0>; }; }; \u7136\u540e\u53c2\u8003\u5168\u5fd7\u7684simple-gates\u9a71\u52a8\u7f16\u5199\u6211\u4eec\u7684gates\u8bbe\u5907\u6811\u53ca\u9a71\u52a8\uff0c\u8bbe\u5907\u6811\u5982\u4e0b\u6240\u793a clk : clock - controller @ 0x4c000000 { compatible = \"foo,foo-clock\" ; reg = < 0x4c000000 0x40 > ; #clock-cells = <1>; clock - indices = < 4 > , < 5 > , < 6 > , < 7 > , < 8 > , < 9 > , < 10 > , < 11 > , < 12 > , < 13 > , < 14 > , < 15 > , < 16 > , < 17 > , < 18 > , < 19 > , < 20 > ; clock - parent - names = \"hclk\" , \"hclk\" , \"hclk\" , \"pclk\" , \"pclk\" , \"pclk\" , \"pclk\" , \"pclk\" , \"pclk\" , \"pclk\" , \"pclk\" , \"pclk\" , \"pclk\" , \"pclk\" , \"pclk\" , \"hclk\" , \"pclk\" ; clock - gates - names = \"nand\" , \"lcdc\" , \"usb-host\" , \"usb-device\" , \"timer\" , \"sdi\" , \"uart0\" , \"uart1\" , \"uart2\" , \"gpio\" , \"rtc\" , \"adc\" , \"iic\" , \"iis\" , \"spi\" , \"camera\" , \"ac97\" ; }; \u5177\u4f53\u7684\u4ee3\u7801\u53ef\u4ee5\u67e5\u770b \u8fd9\u4e2a\u8865\u4e01 \u3002 \u8fd9\u91cc\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff0c\u5982\u679c\u67d0\u4e2a\u5916\u8bbe\u7684\u65f6\u949f\u5728\u6ce8\u518cgate\u4e4b\u524d\u662f\u5f00\u7740\u7684\uff0c\u90a3\u4e48\u4e00\u5b9a\u8981\u5728\u6ce8\u518c\u5b8cgate\u4e4b\u540e\u901a\u8fc7\u5185\u6838\u63a5\u53e3\u4f7f\u80fd\u4e00\u4e0b\u8be5\u65f6\u949f\uff0c\u4ee3\u7801\u91cc\u7684foo_critical_clocks\u5c31\u662f\u8d77\u8fd9\u4e2a\u4f5c\u7528\u7684\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u5728initcall\u9636\u6bb5\u8c03\u7528clk_disable_unused\u65f6\u5bfc\u81f4\u963b\u585e\uff0c\u6211\u731c\u6d4b\u8fd9\u91cc\u963b\u585e\u53ef\u80fd\u662f\u56e0\u4e3a\u72b6\u6001\u4e0d\u4e00\u81f4\u5bfc\u81f4\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7initcall_debug\u6765\u8c03\u8bd5initcall\u7684\u6267\u884c\uff0c\u53ef\u4ee5\u4ece \u8fd9\u91cc \u4e86\u89e3\u7ec6\u8282\u3002","title":"5. \u5b9e\u73b0clk\u9a71\u52a8"},{"location":"embedded-dev/linux/porting-to-new-soc/#6-timekeeping","text":"\u6700\u5f00\u59cb\u770b\u4e09\u661f\u63d0\u4f9b\u7684pwm timer\u9a71\u52a8\u65f6\u6709\u70b9\u61f5\uff0c\u4e09\u661f\u7684\u9a71\u52a8\u5e94\u8be5\u662f\u4f7f\u7528\u540c\u4e00\u4e2a\u5b9a\u65f6\u5668\u65e2\u4f5c\u4e3aclocksource\u53c8\u4f5c\u4e3aclcokevent\uff0c\u4ece\u4ed6\u4eec\u7684\u529f\u80fd\u5206\u7c7b\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4fe9\u6309\u9053\u7406\u5e94\u8be5\u4f7f\u7528\u4e0d\u540c\u5b9a\u65f6\u5668\uff0c \u8fd9\u7bc7\u535a\u5ba2 \u5bf9time\u90e8\u5206\u505a\u4e86\u6bd4\u8f83\u8be6\u7ec6\u7684\u4ecb\u7ecd\uff0c\u91cc\u9762\u4e5f\u63d0\u5230\u4e86\u8fd9\u4e24\u4e2a\u529f\u80fd\u5e94\u8be5\u662f\u7531\u4e24\u4e2a\u786c\u4ef6\u90e8\u5206\u6765\u5b9e\u73b0\u7684\u3002\u6240\u4ee5\u8fd9\u91cc\u7684\u79fb\u690d\u51b3\u5b9a\u91c7\u7528\u4e24\u4e2a\u5b9a\u65f6\u5668\u6765\u5b9e\u73b0\uff0c\u4e00\u4e2a\u63d0\u4f9b\u4e2d\u65ad\uff0c\u800c\u53e6\u4e00\u4e2a\u4e0d\u63d0\u4f9b\u4e2d\u65ad\uff0c\u901a\u8fc7\u8bbe\u5907\u6811\u4e2d\u7684\u4e00\u4e9b\u5b57\u6bb5\u6765\u8fdb\u884c\u533a\u5206\uff0c\u4e0d\u8fc7\u8fd9\u6837\u505a\u4f3c\u4e4e\u4e0d\u662f\u5f88\u4f18\u96c5\uff0c\u4e0d\u8fc7\u8fd8\u662f\u5148\u5b9e\u73b0\u529f\u80fd\u518d\u8bf4\u5427\u3002 \u6700\u5f00\u59cb\u5b9e\u73b0\u9a71\u52a8\u7684\u65f6\u5019\u6211\u60f3\u63d0\u9ad8\u4e00\u4e9b\u7cbe\u5ea6\uff0c\u4e8e\u662f\u5c06\u5b9a\u65f6\u5668\u7684\u65f6\u949f\u5206\u9891\u5230\u4e865M\uff0c\u4f46\u5b9e\u9645\u8fd0\u884c\u7684\u65f6\u5019\u53d1\u73b0\u542f\u52a8\u65f6\u5019\u7684\u65f6\u95f4\u6233\u51fa\u73b0\u4e86\u5f88\u4e25\u91cd\u7684\u56de\u7ed5\u73b0\u8c61\uff0c\u8fd9\u90e8\u5206\u65f6\u95f4\u6233\u7684\u6253\u5370\u5e94\u8be5\u662f\u7531sched_clock\u90e8\u5206\u901a\u8fc7\u6211\u4eec\u7528sched_clock_register\u6ce8\u518c\u7684\u8bfb\u51fd\u6570\u6765\u5b9e\u73b0\u7684\uff0c\u4f46\u662fs3c2440\u7684\u5b9a\u65f6\u5668\u53ea\u670916\u4f4d\uff0c\u53ef\u80fd\u662f\u63d0\u9ad8\u5b9a\u65f6\u5668\u9891\u7387\u540e\u6ea2\u51fa\u592a\u5feb\u5bfc\u81f4\u5185\u6838\u8fd8\u6ca1\u6765\u5f97\u53ca\u67e5\u8be2\u5bfc\u81f4\u7684\uff0c\u6240\u4ee5\u6700\u540e\u8fd8\u662f\u5c06\u5b9a\u65f6\u5668\u65f6\u949f\u9891\u7387\u8c03\u8282\u5230\u4e861M\u3002 \u8fd9\u90e8\u5206\u7684\u4fee\u6539\u53ef\u4ee5\u67e5\u770b \u8fd9\u4e2a\u8865\u4e01 \u3002","title":"6. \u5b9e\u73b0timekeeping\u9a71\u52a8"},{"location":"embedded-dev/linux/porting-to-new-soc/#7-uart","text":"TODO","title":"7. \u5b9e\u73b0uart\u9a71\u52a8"},{"location":"embedded-dev/linux/porting-to-new-soc/arch-arm/","text":"ARM \u00b6 \u4e3b\u8981\u8bb0\u5f55\u4e00\u4e9b\u5185\u6838\u4e2darm\u67b6\u6784\u76f8\u5173\u7684\u5185\u5bb9 1. \u5904\u7406\u5668\u7c7b\u578b\u68c0\u67e5 \u00b6 __lookup_processor_type \u68c0\u67e5\u5904\u7406\u5668\u662f\u5426\u652f\u6301\uff0c\u5176\u4e2d\u7528\u5230\u4e86 __lookup_processor_type_data \u8fd9\u4e2a\u6570\u636e\uff0c\u6ce8\u91ca\u8bf4\u660e\u4e86\u5b83\u7684\u6570\u636e\u7c7b\u578b\u5b9a\u4e49\u5728 arch/arm/include/asm/procinfo.h \u4e2d\uff0c\u8fdb\u5165\u8fd9\u4e2a\u6587\u4ef6\u4e2d\uff0c\u4ece\u6ce8\u91ca\u6765\u770b\uff0c\u8fd9\u90e8\u5206\u6570\u636e\u662f\u5728 arch/arm/mm/proc-*.S \u4e2d\u5b9a\u4e49\u7684\uff0c\u800c\u8fd9\u4e9b\u6587\u4ef6\u7684\u7f16\u8bd1\u4e0e\u5426\u5219\u4f9d\u8d56\u4e8e\u6211\u4eec\u9009\u62e9\u7684CPU\u7c7b\u578b\uff0cMakefile\u5982\u4e0b obj-$(CONFIG_CPU_ARM7TDMI) += proc-arm7tdmi.o obj-$(CONFIG_CPU_ARM720T) += proc-arm720.o obj-$(CONFIG_CPU_ARM740T) += proc-arm740.o obj-$(CONFIG_CPU_ARM9TDMI) += proc-arm9tdmi.o obj-$(CONFIG_CPU_ARM920T) += proc-arm920.o obj-$(CONFIG_CPU_ARM922T) += proc-arm922.o obj-$(CONFIG_CPU_ARM925T) += proc-arm925.o obj-$(CONFIG_CPU_ARM926T) += proc-arm926.o obj-$(CONFIG_CPU_ARM940T) += proc-arm940.o obj-$(CONFIG_CPU_ARM946E) += proc-arm946.o obj-$(CONFIG_CPU_FA526) += proc-fa526.o obj-$(CONFIG_CPU_ARM1020) += proc-arm1020.o obj-$(CONFIG_CPU_ARM1020E) += proc-arm1020e.o obj-$(CONFIG_CPU_ARM1022) += proc-arm1022.o obj-$(CONFIG_CPU_ARM1026) += proc-arm1026.o obj-$(CONFIG_CPU_SA110) += proc-sa110.o obj-$(CONFIG_CPU_SA1100) += proc-sa1100.o obj-$(CONFIG_CPU_XSCALE) += proc-xscale.o obj-$(CONFIG_CPU_XSC3) += proc-xsc3.o obj-$(CONFIG_CPU_MOHAWK) += proc-mohawk.o obj-$(CONFIG_CPU_FEROCEON) += proc-feroceon.o obj-$(CONFIG_CPU_V6) += proc-v6.o obj-$(CONFIG_CPU_V6K) += proc-v6.o obj-$(CONFIG_CPU_V7) += proc-v7.o proc-v7-bugs.o obj-$(CONFIG_CPU_V7M) += proc-v7m.o 2. TEXT_OFFSET \u00b6 TEXT_OFFSET \u5b9a\u4e49\u4e86\u5185\u6838\u955c\u50cf\u76f8\u5bf9\u4e8e\u57fa\u5730\u5740\u7684\u504f\u79fb\uff0c\u8fd9\u91cc\u7684\u57fa\u5730\u5740\uff0c\u65e2\u5305\u62ec \u7269\u7406\u5730\u5740(PHYS_OFFSET) \uff0c\u4e5f\u5305\u62ec \u865a\u62df\u5730\u5740(PAGE_OFFSET) \uff0c TEXT_OFFSET \u5b9a\u4e49\u5728 arch/arm/Makefile \u4e2d TEXT_OFFSET := $( textofs-y ) ... textofs-y := 0x00008000 \u7edd\u5927\u591a\u6570\u7684SOC\u90fd\u4f7f\u7528\u8fd9\u4e2a\u9ed8\u8ba4\u914d\u7f6e\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u52a0\u8f7d\u5185\u6838\u955c\u50cf\u5230\u5185\u5b58\u65f6\u7684\u504f\u79fb\u4e3a8000\u7684\u539f\u56e0\u3002","title":"ARM"},{"location":"embedded-dev/linux/porting-to-new-soc/arch-arm/#arm","text":"\u4e3b\u8981\u8bb0\u5f55\u4e00\u4e9b\u5185\u6838\u4e2darm\u67b6\u6784\u76f8\u5173\u7684\u5185\u5bb9","title":"ARM"},{"location":"embedded-dev/linux/porting-to-new-soc/arch-arm/#1","text":"__lookup_processor_type \u68c0\u67e5\u5904\u7406\u5668\u662f\u5426\u652f\u6301\uff0c\u5176\u4e2d\u7528\u5230\u4e86 __lookup_processor_type_data \u8fd9\u4e2a\u6570\u636e\uff0c\u6ce8\u91ca\u8bf4\u660e\u4e86\u5b83\u7684\u6570\u636e\u7c7b\u578b\u5b9a\u4e49\u5728 arch/arm/include/asm/procinfo.h \u4e2d\uff0c\u8fdb\u5165\u8fd9\u4e2a\u6587\u4ef6\u4e2d\uff0c\u4ece\u6ce8\u91ca\u6765\u770b\uff0c\u8fd9\u90e8\u5206\u6570\u636e\u662f\u5728 arch/arm/mm/proc-*.S \u4e2d\u5b9a\u4e49\u7684\uff0c\u800c\u8fd9\u4e9b\u6587\u4ef6\u7684\u7f16\u8bd1\u4e0e\u5426\u5219\u4f9d\u8d56\u4e8e\u6211\u4eec\u9009\u62e9\u7684CPU\u7c7b\u578b\uff0cMakefile\u5982\u4e0b obj-$(CONFIG_CPU_ARM7TDMI) += proc-arm7tdmi.o obj-$(CONFIG_CPU_ARM720T) += proc-arm720.o obj-$(CONFIG_CPU_ARM740T) += proc-arm740.o obj-$(CONFIG_CPU_ARM9TDMI) += proc-arm9tdmi.o obj-$(CONFIG_CPU_ARM920T) += proc-arm920.o obj-$(CONFIG_CPU_ARM922T) += proc-arm922.o obj-$(CONFIG_CPU_ARM925T) += proc-arm925.o obj-$(CONFIG_CPU_ARM926T) += proc-arm926.o obj-$(CONFIG_CPU_ARM940T) += proc-arm940.o obj-$(CONFIG_CPU_ARM946E) += proc-arm946.o obj-$(CONFIG_CPU_FA526) += proc-fa526.o obj-$(CONFIG_CPU_ARM1020) += proc-arm1020.o obj-$(CONFIG_CPU_ARM1020E) += proc-arm1020e.o obj-$(CONFIG_CPU_ARM1022) += proc-arm1022.o obj-$(CONFIG_CPU_ARM1026) += proc-arm1026.o obj-$(CONFIG_CPU_SA110) += proc-sa110.o obj-$(CONFIG_CPU_SA1100) += proc-sa1100.o obj-$(CONFIG_CPU_XSCALE) += proc-xscale.o obj-$(CONFIG_CPU_XSC3) += proc-xsc3.o obj-$(CONFIG_CPU_MOHAWK) += proc-mohawk.o obj-$(CONFIG_CPU_FEROCEON) += proc-feroceon.o obj-$(CONFIG_CPU_V6) += proc-v6.o obj-$(CONFIG_CPU_V6K) += proc-v6.o obj-$(CONFIG_CPU_V7) += proc-v7.o proc-v7-bugs.o obj-$(CONFIG_CPU_V7M) += proc-v7m.o","title":"1. \u5904\u7406\u5668\u7c7b\u578b\u68c0\u67e5"},{"location":"embedded-dev/linux/porting-to-new-soc/arch-arm/#2-text_offset","text":"TEXT_OFFSET \u5b9a\u4e49\u4e86\u5185\u6838\u955c\u50cf\u76f8\u5bf9\u4e8e\u57fa\u5730\u5740\u7684\u504f\u79fb\uff0c\u8fd9\u91cc\u7684\u57fa\u5730\u5740\uff0c\u65e2\u5305\u62ec \u7269\u7406\u5730\u5740(PHYS_OFFSET) \uff0c\u4e5f\u5305\u62ec \u865a\u62df\u5730\u5740(PAGE_OFFSET) \uff0c TEXT_OFFSET \u5b9a\u4e49\u5728 arch/arm/Makefile \u4e2d TEXT_OFFSET := $( textofs-y ) ... textofs-y := 0x00008000 \u7edd\u5927\u591a\u6570\u7684SOC\u90fd\u4f7f\u7528\u8fd9\u4e2a\u9ed8\u8ba4\u914d\u7f6e\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u52a0\u8f7d\u5185\u6838\u955c\u50cf\u5230\u5185\u5b58\u65f6\u7684\u504f\u79fb\u4e3a8000\u7684\u539f\u56e0\u3002","title":"2. TEXT_OFFSET"},{"location":"embedded-dev/linux/porting-to-new-soc/bus/","text":"\u603b\u7ebf \u00b6 1. SOC_BUS \u00b6 \u9605\u8bfb\u4ee3\u7801\u7684\u65f6\u5019\u53d1\u73b0\u4e86 CONFIG_SOC_BUS \u8fd9\u4e2a\u914d\u7f6e\u9879\uff0c\u5f00\u542f\u540e\u4f1a\u6dfb\u52a0 drivers/base/soc.c \u6587\u4ef6\uff0c\u8fd9\u90e8\u5206\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u4f1a\u6ce8\u518c\u4e00\u4e2a\u540d\u4e3a soc \u7684\u603b\u7ebf\uff0c\u5e76\u5411\u5916\u5bfc\u51fa\u4e86 soc_device_register \u51fd\u6570\u3002\u5728soc\u7ea7\u522b\u7684\u79fb\u690d\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u51fd\u6570\u5411soc\u603b\u7ebf\u4e0a\u6ce8\u518c\u4e00\u4e2asoc\u8bbe\u5907\uff0c\u6ce8\u518c\u65f6\u4f20\u5165\u4e00\u4e2a struct soc_device_attribute \u7c7b\u578b\u7684\u7ed3\u6784\u4f53\u53d8\u91cf\u6307\u9488\uff0c\u8fd9\u4e2a\u7ed3\u6784\u4f53\u7684\u58f0\u660e\u5982\u4e0b struct soc_device_attribute { const char * machine ; const char * family ; const char * revision ; const char * soc_id ; }; \u6700\u7ec8\u4f1a\u5728sysfs\u4e2d\u751f\u6210SOC\u76f8\u5173\u7684\u4fe1\u606f\u7684\u6587\u4ef6\u3002","title":"\u603b\u7ebf"},{"location":"embedded-dev/linux/porting-to-new-soc/bus/#_1","text":"","title":"\u603b\u7ebf"},{"location":"embedded-dev/linux/porting-to-new-soc/bus/#1-soc_bus","text":"\u9605\u8bfb\u4ee3\u7801\u7684\u65f6\u5019\u53d1\u73b0\u4e86 CONFIG_SOC_BUS \u8fd9\u4e2a\u914d\u7f6e\u9879\uff0c\u5f00\u542f\u540e\u4f1a\u6dfb\u52a0 drivers/base/soc.c \u6587\u4ef6\uff0c\u8fd9\u90e8\u5206\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u4f1a\u6ce8\u518c\u4e00\u4e2a\u540d\u4e3a soc \u7684\u603b\u7ebf\uff0c\u5e76\u5411\u5916\u5bfc\u51fa\u4e86 soc_device_register \u51fd\u6570\u3002\u5728soc\u7ea7\u522b\u7684\u79fb\u690d\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u51fd\u6570\u5411soc\u603b\u7ebf\u4e0a\u6ce8\u518c\u4e00\u4e2asoc\u8bbe\u5907\uff0c\u6ce8\u518c\u65f6\u4f20\u5165\u4e00\u4e2a struct soc_device_attribute \u7c7b\u578b\u7684\u7ed3\u6784\u4f53\u53d8\u91cf\u6307\u9488\uff0c\u8fd9\u4e2a\u7ed3\u6784\u4f53\u7684\u58f0\u660e\u5982\u4e0b struct soc_device_attribute { const char * machine ; const char * family ; const char * revision ; const char * soc_id ; }; \u6700\u7ec8\u4f1a\u5728sysfs\u4e2d\u751f\u6210SOC\u76f8\u5173\u7684\u4fe1\u606f\u7684\u6587\u4ef6\u3002","title":"1. SOC_BUS"},{"location":"embedded-dev/linux/porting-to-new-soc/config/","text":"\u914d\u7f6e \u00b6 1. \u4fdd\u5b58\u914d\u7f6e \u00b6 \u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u677f\u7ea7\u914d\u7f6e\u65f6\uff0c\u53ef\u4ee5\u9009\u7528\u5df2\u6709\u7684\u6bd4\u8f83\u76f8\u8fd1\u7684\u5176\u4ed6\u677f\u5361\u7684\u914d\u7f6e\uff0c\u901a\u8fc7menuconfig\u8fdb\u884c\u914d\u7f6e\uff0c\u4fee\u6539\u4ee3\u7801\uff0c\u7136\u540e\u901a\u8fc7 make savedefconfig \u6765\u751f\u6210\u914d\u7f6e\u6587\u4ef6\uff0c\u7136\u540e\u76f4\u63a5\u5c06defconfig\u590d\u5236\u4fdd\u5b58\u5373\u53ef\u4f5c\u4e3a\u6211\u4eec\u65b0\u6dfb\u52a0\u7684\u677f\u5361\u7684\u914d\u7f6e\u6587\u4ef6\u3002 2. tags \u00b6 \u4f7f\u7528vim\u67e5\u770b\u6e90\u7801\u65f6ctags\u7684\u8df3\u8f6c\u529f\u80fd\u8fd8\u662f\u975e\u5e38\u5b9e\u7528\u7684\uff0c\u5185\u6838\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9009\u9879\u6765\u751f\u6210\u53ea\u5305\u542b\u6307\u5b9a\u67b6\u6784\u7684ctags\u7d22\u5f15\u6587\u4ef6 make ARCH = arm tags","title":"\u914d\u7f6e"},{"location":"embedded-dev/linux/porting-to-new-soc/config/#_1","text":"","title":"\u914d\u7f6e"},{"location":"embedded-dev/linux/porting-to-new-soc/config/#1","text":"\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u677f\u7ea7\u914d\u7f6e\u65f6\uff0c\u53ef\u4ee5\u9009\u7528\u5df2\u6709\u7684\u6bd4\u8f83\u76f8\u8fd1\u7684\u5176\u4ed6\u677f\u5361\u7684\u914d\u7f6e\uff0c\u901a\u8fc7menuconfig\u8fdb\u884c\u914d\u7f6e\uff0c\u4fee\u6539\u4ee3\u7801\uff0c\u7136\u540e\u901a\u8fc7 make savedefconfig \u6765\u751f\u6210\u914d\u7f6e\u6587\u4ef6\uff0c\u7136\u540e\u76f4\u63a5\u5c06defconfig\u590d\u5236\u4fdd\u5b58\u5373\u53ef\u4f5c\u4e3a\u6211\u4eec\u65b0\u6dfb\u52a0\u7684\u677f\u5361\u7684\u914d\u7f6e\u6587\u4ef6\u3002","title":"1. \u4fdd\u5b58\u914d\u7f6e"},{"location":"embedded-dev/linux/porting-to-new-soc/config/#2-tags","text":"\u4f7f\u7528vim\u67e5\u770b\u6e90\u7801\u65f6ctags\u7684\u8df3\u8f6c\u529f\u80fd\u8fd8\u662f\u975e\u5e38\u5b9e\u7528\u7684\uff0c\u5185\u6838\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9009\u9879\u6765\u751f\u6210\u53ea\u5305\u542b\u6307\u5b9a\u67b6\u6784\u7684ctags\u7d22\u5f15\u6587\u4ef6 make ARCH = arm tags","title":"2. tags"},{"location":"embedded-dev/linux/porting-to-new-soc/device-tree/","text":"FDT \u00b6 \u5185\u6838\u5bf9\u8bbe\u5907\u6811\u7684\u5904\u7406\u7684\u4e3b\u8981\u6d41\u7a0b start_kernel --> setup_arch --> setup_machine_fdt /* arch/arm/kernel/devtree.c */ --> early_init_dt_verify --> of_flat_dt_match_machine --> early_init_dt_scan_nodes --> of_scan_flat_dt ( early_init_dt_scan_chosen , boot_command_line ); /* Retrieve various information from the /chosen node */ --> of_scan_flat_dt ( early_init_dt_scan_root , NULL ); /* Initialize {size,address}-cells info */ --> of_scan_flat_dt ( early_init_dt_scan_memory , NULL ); /* Setup memory, calling early_init_dt_add_memory_arch */ --> unflatten_device_tree /* drivers/of/fdt.c */ --> __unflatten_device_tree --> unflatten_dt_nodes ( blob , NULL , dad , NULL ); /* First pass, scan for size */ --> unflatten_dt_nodes ( blob , mem , dad , mynodes ); /* Second pass, do actual unflattening */ --> rest_init --> kernel_thread ( kernel_init , NULL , CLONE_FS ); --> kernel_init --> kernel_init_freeable --> do_basic_setup --> do_initcalls --> do_initcall_level --> of_platform_default_populate_init /* drivers/of/platform.c */ --> of_platform_default_populate --> of_platform_populate --> of_platform_bus_create --> ... \u7b2c\u4e00\u90e8\u5206\u5b8c\u6210\u8bbe\u5907\u6811\u7684\u6241\u5e73\u5316\u5904\u7406\uff1b\u7b2c\u4e8c\u90e8\u5206\u626b\u63cf\u6574\u4e2a\u8bbe\u5907\u6811\uff0c\u5e76\u4e3a\u5176\u4e2d\u7b26\u5408\u8981\u6c42\u7684\u8282\u70b9\u751f\u6210\u5e73\u53f0\u8bbe\u5907\u3002 \u7b2c\u4e8c\u90e8\u5206\u4e2d\u7b26\u5408\u8981\u6c42\u7684\u8282\u70b9\u5305\u62ec\u6839\u8282\u70b9\u4e0b\u6709compatible\u5c5e\u6027\u7684\u8282\u70b9\u4ee5\u53cacompatible\u5c5e\u6027\u5339\u914d\u4e0b\u9762\u7ed3\u6784\u4f53\u4e2d\u5c5e\u6027\u7684\u8282\u70b9\u3002 const struct of_device_id of_default_bus_match_table [] = { { . compatible = \"simple-bus\" , }, { . compatible = \"simple-mfd\" , }, { . compatible = \"isa\" , }, #ifdef CONFIG_ARM_AMBA { . compatible = \"arm,amba-bus\" , }, #endif /* CONFIG_ARM_AMBA */ {} /* Empty terminated list */ };","title":"FDT"},{"location":"embedded-dev/linux/porting-to-new-soc/device-tree/#fdt","text":"\u5185\u6838\u5bf9\u8bbe\u5907\u6811\u7684\u5904\u7406\u7684\u4e3b\u8981\u6d41\u7a0b start_kernel --> setup_arch --> setup_machine_fdt /* arch/arm/kernel/devtree.c */ --> early_init_dt_verify --> of_flat_dt_match_machine --> early_init_dt_scan_nodes --> of_scan_flat_dt ( early_init_dt_scan_chosen , boot_command_line ); /* Retrieve various information from the /chosen node */ --> of_scan_flat_dt ( early_init_dt_scan_root , NULL ); /* Initialize {size,address}-cells info */ --> of_scan_flat_dt ( early_init_dt_scan_memory , NULL ); /* Setup memory, calling early_init_dt_add_memory_arch */ --> unflatten_device_tree /* drivers/of/fdt.c */ --> __unflatten_device_tree --> unflatten_dt_nodes ( blob , NULL , dad , NULL ); /* First pass, scan for size */ --> unflatten_dt_nodes ( blob , mem , dad , mynodes ); /* Second pass, do actual unflattening */ --> rest_init --> kernel_thread ( kernel_init , NULL , CLONE_FS ); --> kernel_init --> kernel_init_freeable --> do_basic_setup --> do_initcalls --> do_initcall_level --> of_platform_default_populate_init /* drivers/of/platform.c */ --> of_platform_default_populate --> of_platform_populate --> of_platform_bus_create --> ... \u7b2c\u4e00\u90e8\u5206\u5b8c\u6210\u8bbe\u5907\u6811\u7684\u6241\u5e73\u5316\u5904\u7406\uff1b\u7b2c\u4e8c\u90e8\u5206\u626b\u63cf\u6574\u4e2a\u8bbe\u5907\u6811\uff0c\u5e76\u4e3a\u5176\u4e2d\u7b26\u5408\u8981\u6c42\u7684\u8282\u70b9\u751f\u6210\u5e73\u53f0\u8bbe\u5907\u3002 \u7b2c\u4e8c\u90e8\u5206\u4e2d\u7b26\u5408\u8981\u6c42\u7684\u8282\u70b9\u5305\u62ec\u6839\u8282\u70b9\u4e0b\u6709compatible\u5c5e\u6027\u7684\u8282\u70b9\u4ee5\u53cacompatible\u5c5e\u6027\u5339\u914d\u4e0b\u9762\u7ed3\u6784\u4f53\u4e2d\u5c5e\u6027\u7684\u8282\u70b9\u3002 const struct of_device_id of_default_bus_match_table [] = { { . compatible = \"simple-bus\" , }, { . compatible = \"simple-mfd\" , }, { . compatible = \"isa\" , }, #ifdef CONFIG_ARM_AMBA { . compatible = \"arm,amba-bus\" , }, #endif /* CONFIG_ARM_AMBA */ {} /* Empty terminated list */ };","title":"FDT"},{"location":"embedded-dev/linux/porting-to-new-soc/parameters/","text":"Parameters \u00b6 1. earlycon \u00b6 earlycon\u5728\u6b63\u5f0f\u7684console\u8bbe\u5907\u53ef\u7528\u4e4b\u524d\u8f93\u51fa\u5185\u6838\u7684\u542f\u52a8\u4fe1\u606f\uff0cearlycon\u9a71\u52a8\u4f1a\u8d1f\u8d23map\u53c2\u6570\u4e2d\u6307\u5b9a\u7684\u5bc4\u5b58\u5668\u5730\u5740\uff0cmap\u957f\u5ea6\u4e3a64\uff0c\u8be6\u7ec6\u7684\u53c2\u6570\u53ef\u4ee5\u53c2\u8003kernel-parameters.txt\u6587\u6863\u3002 2. initcall_debug \u00b6 initcall_debug\u7528\u6765\u8ffd\u8e2ainitcall\u8c03\u7528\u7684\u8fdb\u5ea6\uff0c\u6709\u65f6\u5019\u6709\u4e9b\u5f02\u5e38\u60c5\u51b5\u4f1a\u5bfc\u81f4initcall\u4e2d\u7684\u67d0\u4e9b\u90e8\u5206\u963b\u585e\uff0c\u8fd9\u4e2a\u53c2\u6570\u5bf9\u6211\u4eec\u7684\u8c03\u8bd5\u5f88\u6709\u5e2e\u52a9\u3002","title":"Parameters"},{"location":"embedded-dev/linux/porting-to-new-soc/parameters/#parameters","text":"","title":"Parameters"},{"location":"embedded-dev/linux/porting-to-new-soc/parameters/#1-earlycon","text":"earlycon\u5728\u6b63\u5f0f\u7684console\u8bbe\u5907\u53ef\u7528\u4e4b\u524d\u8f93\u51fa\u5185\u6838\u7684\u542f\u52a8\u4fe1\u606f\uff0cearlycon\u9a71\u52a8\u4f1a\u8d1f\u8d23map\u53c2\u6570\u4e2d\u6307\u5b9a\u7684\u5bc4\u5b58\u5668\u5730\u5740\uff0cmap\u957f\u5ea6\u4e3a64\uff0c\u8be6\u7ec6\u7684\u53c2\u6570\u53ef\u4ee5\u53c2\u8003kernel-parameters.txt\u6587\u6863\u3002","title":"1. earlycon"},{"location":"embedded-dev/linux/porting-to-new-soc/parameters/#2-initcall_debug","text":"initcall_debug\u7528\u6765\u8ffd\u8e2ainitcall\u8c03\u7528\u7684\u8fdb\u5ea6\uff0c\u6709\u65f6\u5019\u6709\u4e9b\u5f02\u5e38\u60c5\u51b5\u4f1a\u5bfc\u81f4initcall\u4e2d\u7684\u67d0\u4e9b\u90e8\u5206\u963b\u585e\uff0c\u8fd9\u4e2a\u53c2\u6570\u5bf9\u6211\u4eec\u7684\u8c03\u8bd5\u5f88\u6709\u5e2e\u52a9\u3002","title":"2. initcall_debug"},{"location":"embedded-dev/sunxi/lichee/zero/","text":"\u8354\u679d\u6d3eZERO \u00b6 \u8354\u679d\u6d3eZERO\u662fsipeed\u63a8\u51fa\u7684\u4e00\u6b3e\u57fa\u4e8e\u5168\u5fd7V3S SOC\u7684\u8ff7\u4f60\u5f00\u53d1\u677f\uff0c\u8be6\u7ec6\u4ed3\u5e93\u53ef\u4ee5\u4ece \u5b98\u65b9\u6587\u6863 \u8fdb\u884c\u67e5\u770b\u3002 Boot Select \u00b6 V3S\u5185\u7f6e32KB BROM\uff0c\u542f\u52a8\u8fc7\u7a0b\u4e2d\u4f1a\u4f9d\u6b21\u68c0\u6d4bBSP Pin\u72b6\u6001\u3001SD\u5361\u955c\u50cf\u3001SPI flash\u955c\u50cf\u3002\u5982\u679cBSP Pin\u4e3a0\uff0c\u4f1a\u76f4\u63a5\u8fdb\u5165FEL\u6a21\u5f0f\uff0c\u5982\u679c\u5728SD\u5361\u6216SPI flash\u4e2d\u68c0\u6d4b\u5230\u6709\u6548\u955c\u50cf\uff0c\u5219\u4f1a\u4ece\u76f8\u5e94\u4ecb\u8d28\u4e2d\u8fdb\u884c\u542f\u52a8\u3002\u5982\u679cBSP Pin\u4e0d\u4e3a0\u4e14\u672a\u5728SD\u5361\u548cSPI flash\u4e2d\u68c0\u6d4b\u5230\u6709\u6548\u955c\u50cf\uff0c\u90a3\u4e48\u6700\u7ec8\u4e5f\u4f1a\u8fdb\u5165FEL\u6a21\u5f0f\u3002 \u5728\u5168\u5fd7V3S\u7528\u6237\u624b\u518c\u4e2d\u5e76\u672a\u627e\u5230BSP Pin\u7684\u5177\u4f53\u8bf4\u660e\uff0c\u7f51\u4e0a\u8d44\u6599\u663e\u793a\uff0cBSP Pin\u662fSPI MISO\u5f15\u811a\uff0c\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u786e\u5b9e\u6709\u6548\u3002 FEL MODE \u00b6 \u5f53SOC\u8fdb\u5165FEL\u6a21\u5f0f\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7USB\u8fde\u63a5PC\u5e76\u4f7f\u7528 sunxi-tools \u8fdb\u884c\u8bbe\u5907\u68c0\u6d4b\u548c\u955c\u50cf\u70e7\u5f55\u7b49\u64cd\u4f5c\u3002 \u8fdb\u5165FEL\u6a21\u5f0f\u7684\u9014\u5f84\u9664\u4e0a\u8ff0Boot Select\u5916\u8fd8\u6709\u4ee5\u4e0b\u9014\u5f84\uff1a \u4f7f\u7528\u4e00\u4e2a\u7279\u6b8a\u7684SD\u5361\u955c\u50cf\uff0c\u955c\u50cf\u5236\u4f5c\u65b9\u6cd5\u5982\u4e0b\uff1a wget https://github.com/linux-sunxi/sunxi-tools/raw/master/bin/fel-sdboot.sunxi dd if = fel-sdboot.sunxi of = /dev/sdX bs = 1024 seek = 8 \u5982\u679cU-Boot\u53ef\u7528\u7684\u8bdd\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u8fdb\u5165FEL\u6a21\u5f0f\uff1a go 0xffff0020 \u4ee5\u4e0a\u4fe1\u606f\u5747\u6765\u81ea https://linux-sunxi.org/FEL \u3002 \u53c2\u8003\u94fe\u63a5 \u00b6 https://linux-sunxi.org","title":"\u8354\u679d\u6d3eZERO"},{"location":"embedded-dev/sunxi/lichee/zero/#zero","text":"\u8354\u679d\u6d3eZERO\u662fsipeed\u63a8\u51fa\u7684\u4e00\u6b3e\u57fa\u4e8e\u5168\u5fd7V3S SOC\u7684\u8ff7\u4f60\u5f00\u53d1\u677f\uff0c\u8be6\u7ec6\u4ed3\u5e93\u53ef\u4ee5\u4ece \u5b98\u65b9\u6587\u6863 \u8fdb\u884c\u67e5\u770b\u3002","title":"\u8354\u679d\u6d3eZERO"},{"location":"embedded-dev/sunxi/lichee/zero/#boot-select","text":"V3S\u5185\u7f6e32KB BROM\uff0c\u542f\u52a8\u8fc7\u7a0b\u4e2d\u4f1a\u4f9d\u6b21\u68c0\u6d4bBSP Pin\u72b6\u6001\u3001SD\u5361\u955c\u50cf\u3001SPI flash\u955c\u50cf\u3002\u5982\u679cBSP Pin\u4e3a0\uff0c\u4f1a\u76f4\u63a5\u8fdb\u5165FEL\u6a21\u5f0f\uff0c\u5982\u679c\u5728SD\u5361\u6216SPI flash\u4e2d\u68c0\u6d4b\u5230\u6709\u6548\u955c\u50cf\uff0c\u5219\u4f1a\u4ece\u76f8\u5e94\u4ecb\u8d28\u4e2d\u8fdb\u884c\u542f\u52a8\u3002\u5982\u679cBSP Pin\u4e0d\u4e3a0\u4e14\u672a\u5728SD\u5361\u548cSPI flash\u4e2d\u68c0\u6d4b\u5230\u6709\u6548\u955c\u50cf\uff0c\u90a3\u4e48\u6700\u7ec8\u4e5f\u4f1a\u8fdb\u5165FEL\u6a21\u5f0f\u3002 \u5728\u5168\u5fd7V3S\u7528\u6237\u624b\u518c\u4e2d\u5e76\u672a\u627e\u5230BSP Pin\u7684\u5177\u4f53\u8bf4\u660e\uff0c\u7f51\u4e0a\u8d44\u6599\u663e\u793a\uff0cBSP Pin\u662fSPI MISO\u5f15\u811a\uff0c\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u786e\u5b9e\u6709\u6548\u3002","title":"Boot Select"},{"location":"embedded-dev/sunxi/lichee/zero/#fel-mode","text":"\u5f53SOC\u8fdb\u5165FEL\u6a21\u5f0f\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7USB\u8fde\u63a5PC\u5e76\u4f7f\u7528 sunxi-tools \u8fdb\u884c\u8bbe\u5907\u68c0\u6d4b\u548c\u955c\u50cf\u70e7\u5f55\u7b49\u64cd\u4f5c\u3002 \u8fdb\u5165FEL\u6a21\u5f0f\u7684\u9014\u5f84\u9664\u4e0a\u8ff0Boot Select\u5916\u8fd8\u6709\u4ee5\u4e0b\u9014\u5f84\uff1a \u4f7f\u7528\u4e00\u4e2a\u7279\u6b8a\u7684SD\u5361\u955c\u50cf\uff0c\u955c\u50cf\u5236\u4f5c\u65b9\u6cd5\u5982\u4e0b\uff1a wget https://github.com/linux-sunxi/sunxi-tools/raw/master/bin/fel-sdboot.sunxi dd if = fel-sdboot.sunxi of = /dev/sdX bs = 1024 seek = 8 \u5982\u679cU-Boot\u53ef\u7528\u7684\u8bdd\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u8fdb\u5165FEL\u6a21\u5f0f\uff1a go 0xffff0020 \u4ee5\u4e0a\u4fe1\u606f\u5747\u6765\u81ea https://linux-sunxi.org/FEL \u3002","title":"FEL MODE"},{"location":"embedded-dev/sunxi/lichee/zero/#_1","text":"https://linux-sunxi.org","title":"\u53c2\u8003\u94fe\u63a5"},{"location":"embedded-dev/usb/hid/","text":"HID\u62a5\u544a\u63cf\u8ff0\u7b26 \u00b6 \u62a5\u544a\u63cf\u8ff0\u7b26\u76f8\u5173\u6559\u7a0b \u00b6 Tutorial about USB HID Report Descriptors USB HID\u62a5\u544a\u63cf\u8ff0\u7b26\u6559\u7a0b Linux\u4e0b\u67e5\u770b\u8bbe\u5907HID \u00b6 \u4f9d\u8d56 usbutils \u548c hidrd \u8f6f\u4ef6\u5305\uff0c\u9700\u8981\u81ea\u884c\u4e0b\u8f7d\u5b89\u88c5\u3002 \u4f7f\u7528debugfs\u67e5\u770b \u00b6 $ # \u76f4\u63a5\u5bfc\u51fa\u63cf\u8ff0\u7b26\u67e5\u770b $ cat /sys/kernel/debug/hid/0003 \\: 04F3 \\: 0103 .0001/rdesc 05 01 09 06 a1 01 05 08 19 01 29 03 15 00 25 01 75 01 95 03 91 02 95 05 91 01 05 07 19 e0 29 e7 95 08 81 02 75 08 95 01 81 01 19 00 29 91 26 ff 00 95 06 81 00 c0 INPUT [ INPUT ] Field ( 0 ) Application ( GenericDesktop.Keyboard ) Usage ( 8 ) Keyboard.00e0 Keyboard.00e1 Keyboard.00e2 Keyboard.00e3 Keyboard.00e4 Keyboard.00e5 Keyboard.00e6 Keyboard.00e7 Logical Minimum ( 0 ) Logical Maximum ( 1 ) Report Size ( 1 ) Report Count ( 8 ) Report Offset ( 0 ) Flags ( Variable Absolute ) Field ( 1 ) Application ( GenericDesktop.Keyboard ) ... $ # \u4f7f\u7528hidrd-convert\u5de5\u5177\u8f6c\u6362\u683c\u5f0f $ cat /sys/kernel/debug/hid/0003 \\: 04F3 \\: 0103 .0001/rdesc | head -n1 | xxd -r -p | hidrd-convert -o spec Usage Page ( Desktop ) , ; Generic desktop controls ( 01h ) Usage ( Keyboard ) , ; Keyboard ( 06h, application collection ) Collection ( Application ) , Usage Page ( LED ) , ; LEDs ( 08h ) Usage Minimum ( 01h ) , Usage Maximum ( 03h ) , Logical Minimum ( 0 ) , Logical Maximum ( 1 ) , Report Size ( 1 ) , Report Count ( 3 ) , Output ( Variable ) , Report Count ( 5 ) , Output ( Constant ) , Usage Page ( Keyboard ) , ; Keyboard/keypad ( 07h ) Usage Minimum ( KB Leftcontrol ) , ; Keyboard left control ( E0h, dynamic value ) Usage Maximum ( KB Right GUI ) , ; Keyboard right GUI ( E7h, dynamic value ) Report Count ( 8 ) , Input ( Variable ) , Report Size ( 8 ) , Report Count ( 1 ) , Input ( Constant ) , Usage Minimum ( None ) , ; No event ( 00h, selector ) Usage Maximum ( KB LANG2 ) , ; Keyboard LANG2 ( 91h, selector ) Logical Maximum ( 255 ) , Report Count ( 6 ) , Input, End Collection \u4f7f\u7528usbutils\u8fdb\u884c\u67e5\u770b \u00b6 $ # \u5bfc\u51fa\u539f\u59cb\u683c\u5f0f $ usbhid-dump -d 04f3 -i 255 006 :002:001:DESCRIPTOR 1668584980 .090532 05 0C 09 01 A1 01 85 01 19 00 2A 3C 02 15 00 26 3C 02 95 01 75 10 81 00 C0 05 01 09 80 A1 01 85 02 19 81 29 83 15 00 25 01 75 01 95 03 81 02 95 05 81 01 C0 006 :002:000:DESCRIPTOR 1668584980 .094501 05 01 09 06 A1 01 05 08 19 01 29 03 15 00 25 01 75 01 95 03 91 02 95 05 91 01 05 07 19 E0 29 E7 95 08 81 02 75 08 95 01 81 01 19 00 29 91 26 FF 00 95 06 81 00 C0 $ # \u4f7f\u7528hidrd-convert\u5de5\u5177\u8f6c\u6362\u683c\u5f0f $ usbhid-dump -d 04f3 -i 255 | grep -v : | xxd -r -p | hidrd-convert -o spec Usage Page ( Consumer ) , ; Consumer ( 0Ch ) Usage ( Consumer Control ) , ; Consumer control ( 01h, application collection ) Collection ( Application ) , Report ID ( 1 ) , Usage Minimum ( 00h ) , Usage Maximum ( AC Format ) , ; AC format ( 023Ch, selector ) Logical Minimum ( 0 ) , Logical Maximum ( 572 ) , Report Count ( 1 ) , Report Size ( 16 ) , Input, End Collection, Usage Page ( Desktop ) , ; Generic desktop controls ( 01h ) Usage ( Sys Control ) , ; System control ( 80h, application collection ) Collection ( Application ) , Report ID ( 2 ) , Usage Minimum ( Sys Power Down ) , ; System power down ( 81h, one-shot control ) Usage Maximum ( Sys Wake Up ) , ; System wake up ( 83h, one-shot control ) Logical Minimum ( 0 ) , Logical Maximum ( 1 ) , Report Size ( 1 ) , Report Count ( 3 ) , Input ( Variable ) , Report Count ( 5 ) , Input ( Constant ) , End Collection, Usage Page ( Desktop ) , ; Generic desktop controls ( 01h ) Usage ( Keyboard ) , ; Keyboard ( 06h, application collection ) Collection ( Application ) , Usage Page ( LED ) , ; LEDs ( 08h ) Usage Minimum ( 01h ) , Usage Maximum ( 03h ) , Logical Minimum ( 0 ) , Logical Maximum ( 1 ) , Report Size ( 1 ) , Report Count ( 3 ) , Output ( Variable ) , Report Count ( 5 ) , Output ( Constant ) , Usage Page ( Keyboard ) , ; Keyboard/keypad ( 07h ) Usage Minimum ( KB Leftcontrol ) , ; Keyboard left control ( E0h, dynamic value ) Usage Maximum ( KB Right GUI ) , ; Keyboard right GUI ( E7h, dynamic value ) Report Count ( 8 ) , Input ( Variable ) , Report Size ( 8 ) , Report Count ( 1 ) , Input ( Constant ) , Usage Minimum ( None ) , ; No event ( 00h, selector ) Usage Maximum ( KB LANG2 ) , ; Keyboard LANG2 ( 91h, selector ) Logical Maximum ( 255 ) , Report Count ( 6 ) , Input, End Collection Boot Interface Descriptor \u00b6 USB HID\u89c4\u8303\u4e2d\u5199\u5230 Set_Protocol Request \u53ef\u4ee5\u5728boot protocol\u548creport protocol\u4e2d\u8fdb\u884c\u5207\u6362\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u56fa\u4ef6\uff08\u6bd4\u5982UEFI\uff09\u4e2d\u5bf9USB\u952e\u76d8\u53ea\u652f\u6301boot protocol\uff0c\u5728\u5bf9USB\u952e\u76d8\u7684\u521d\u59cb\u5316\u6d41\u7a0b\u4e2d\u4f1a\u4f7f\u7528 Set_Protocol Request \u5c06\u952e\u76d8\u8bbe\u7f6e\u4e3aboot protocol\uff0cboot protocol\u7684\u5b9a\u4e49\u662f\u517c\u5bb9report protocol\u7684\uff0c\u5728HID\u89c4\u8303\u9644\u5f55B.2\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63cf\u8ff0\u7b26\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u63cf\u8ff0\u7b26\u5185\u5bb9\u5982\u4e0b Usage Page (Generic Desktop), Usage (Keyboard), Collection (Application), Report Size (1), Report Count (8), Usage Page (Key Codes), Usage Minimum (224), Usage Maximum (231), Logical Minimum (0), Logical Maximum (1), Input (Data, Variable, Absolute), Report Count (1), Report Size (8), Input (Constant), Report Count (5), Report Size (1), Usage Page (LEDs), Usage Minimum (1), Usage Maximum (5), Output (Data, Variable, Absolute), Report Count (1), Report Size (3), Output (Constant), Report Count (6), Report Size (8), Logical Minimum (0), Logical Maximum(255), Usage Page (Key Codes), Usage Minimum (0), Usage Maximum (255), Input (Data, Array), End Collection","title":"HID\u62a5\u544a\u63cf\u8ff0\u7b26"},{"location":"embedded-dev/usb/hid/#hid","text":"","title":"HID\u62a5\u544a\u63cf\u8ff0\u7b26"},{"location":"embedded-dev/usb/hid/#_1","text":"Tutorial about USB HID Report Descriptors USB HID\u62a5\u544a\u63cf\u8ff0\u7b26\u6559\u7a0b","title":"\u62a5\u544a\u63cf\u8ff0\u7b26\u76f8\u5173\u6559\u7a0b"},{"location":"embedded-dev/usb/hid/#linuxhid","text":"\u4f9d\u8d56 usbutils \u548c hidrd \u8f6f\u4ef6\u5305\uff0c\u9700\u8981\u81ea\u884c\u4e0b\u8f7d\u5b89\u88c5\u3002","title":"Linux\u4e0b\u67e5\u770b\u8bbe\u5907HID"},{"location":"embedded-dev/usb/hid/#debugfs","text":"$ # \u76f4\u63a5\u5bfc\u51fa\u63cf\u8ff0\u7b26\u67e5\u770b $ cat /sys/kernel/debug/hid/0003 \\: 04F3 \\: 0103 .0001/rdesc 05 01 09 06 a1 01 05 08 19 01 29 03 15 00 25 01 75 01 95 03 91 02 95 05 91 01 05 07 19 e0 29 e7 95 08 81 02 75 08 95 01 81 01 19 00 29 91 26 ff 00 95 06 81 00 c0 INPUT [ INPUT ] Field ( 0 ) Application ( GenericDesktop.Keyboard ) Usage ( 8 ) Keyboard.00e0 Keyboard.00e1 Keyboard.00e2 Keyboard.00e3 Keyboard.00e4 Keyboard.00e5 Keyboard.00e6 Keyboard.00e7 Logical Minimum ( 0 ) Logical Maximum ( 1 ) Report Size ( 1 ) Report Count ( 8 ) Report Offset ( 0 ) Flags ( Variable Absolute ) Field ( 1 ) Application ( GenericDesktop.Keyboard ) ... $ # \u4f7f\u7528hidrd-convert\u5de5\u5177\u8f6c\u6362\u683c\u5f0f $ cat /sys/kernel/debug/hid/0003 \\: 04F3 \\: 0103 .0001/rdesc | head -n1 | xxd -r -p | hidrd-convert -o spec Usage Page ( Desktop ) , ; Generic desktop controls ( 01h ) Usage ( Keyboard ) , ; Keyboard ( 06h, application collection ) Collection ( Application ) , Usage Page ( LED ) , ; LEDs ( 08h ) Usage Minimum ( 01h ) , Usage Maximum ( 03h ) , Logical Minimum ( 0 ) , Logical Maximum ( 1 ) , Report Size ( 1 ) , Report Count ( 3 ) , Output ( Variable ) , Report Count ( 5 ) , Output ( Constant ) , Usage Page ( Keyboard ) , ; Keyboard/keypad ( 07h ) Usage Minimum ( KB Leftcontrol ) , ; Keyboard left control ( E0h, dynamic value ) Usage Maximum ( KB Right GUI ) , ; Keyboard right GUI ( E7h, dynamic value ) Report Count ( 8 ) , Input ( Variable ) , Report Size ( 8 ) , Report Count ( 1 ) , Input ( Constant ) , Usage Minimum ( None ) , ; No event ( 00h, selector ) Usage Maximum ( KB LANG2 ) , ; Keyboard LANG2 ( 91h, selector ) Logical Maximum ( 255 ) , Report Count ( 6 ) , Input, End Collection","title":"\u4f7f\u7528debugfs\u67e5\u770b"},{"location":"embedded-dev/usb/hid/#usbutils","text":"$ # \u5bfc\u51fa\u539f\u59cb\u683c\u5f0f $ usbhid-dump -d 04f3 -i 255 006 :002:001:DESCRIPTOR 1668584980 .090532 05 0C 09 01 A1 01 85 01 19 00 2A 3C 02 15 00 26 3C 02 95 01 75 10 81 00 C0 05 01 09 80 A1 01 85 02 19 81 29 83 15 00 25 01 75 01 95 03 81 02 95 05 81 01 C0 006 :002:000:DESCRIPTOR 1668584980 .094501 05 01 09 06 A1 01 05 08 19 01 29 03 15 00 25 01 75 01 95 03 91 02 95 05 91 01 05 07 19 E0 29 E7 95 08 81 02 75 08 95 01 81 01 19 00 29 91 26 FF 00 95 06 81 00 C0 $ # \u4f7f\u7528hidrd-convert\u5de5\u5177\u8f6c\u6362\u683c\u5f0f $ usbhid-dump -d 04f3 -i 255 | grep -v : | xxd -r -p | hidrd-convert -o spec Usage Page ( Consumer ) , ; Consumer ( 0Ch ) Usage ( Consumer Control ) , ; Consumer control ( 01h, application collection ) Collection ( Application ) , Report ID ( 1 ) , Usage Minimum ( 00h ) , Usage Maximum ( AC Format ) , ; AC format ( 023Ch, selector ) Logical Minimum ( 0 ) , Logical Maximum ( 572 ) , Report Count ( 1 ) , Report Size ( 16 ) , Input, End Collection, Usage Page ( Desktop ) , ; Generic desktop controls ( 01h ) Usage ( Sys Control ) , ; System control ( 80h, application collection ) Collection ( Application ) , Report ID ( 2 ) , Usage Minimum ( Sys Power Down ) , ; System power down ( 81h, one-shot control ) Usage Maximum ( Sys Wake Up ) , ; System wake up ( 83h, one-shot control ) Logical Minimum ( 0 ) , Logical Maximum ( 1 ) , Report Size ( 1 ) , Report Count ( 3 ) , Input ( Variable ) , Report Count ( 5 ) , Input ( Constant ) , End Collection, Usage Page ( Desktop ) , ; Generic desktop controls ( 01h ) Usage ( Keyboard ) , ; Keyboard ( 06h, application collection ) Collection ( Application ) , Usage Page ( LED ) , ; LEDs ( 08h ) Usage Minimum ( 01h ) , Usage Maximum ( 03h ) , Logical Minimum ( 0 ) , Logical Maximum ( 1 ) , Report Size ( 1 ) , Report Count ( 3 ) , Output ( Variable ) , Report Count ( 5 ) , Output ( Constant ) , Usage Page ( Keyboard ) , ; Keyboard/keypad ( 07h ) Usage Minimum ( KB Leftcontrol ) , ; Keyboard left control ( E0h, dynamic value ) Usage Maximum ( KB Right GUI ) , ; Keyboard right GUI ( E7h, dynamic value ) Report Count ( 8 ) , Input ( Variable ) , Report Size ( 8 ) , Report Count ( 1 ) , Input ( Constant ) , Usage Minimum ( None ) , ; No event ( 00h, selector ) Usage Maximum ( KB LANG2 ) , ; Keyboard LANG2 ( 91h, selector ) Logical Maximum ( 255 ) , Report Count ( 6 ) , Input, End Collection","title":"\u4f7f\u7528usbutils\u8fdb\u884c\u67e5\u770b"},{"location":"embedded-dev/usb/hid/#boot-interface-descriptor","text":"USB HID\u89c4\u8303\u4e2d\u5199\u5230 Set_Protocol Request \u53ef\u4ee5\u5728boot protocol\u548creport protocol\u4e2d\u8fdb\u884c\u5207\u6362\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u56fa\u4ef6\uff08\u6bd4\u5982UEFI\uff09\u4e2d\u5bf9USB\u952e\u76d8\u53ea\u652f\u6301boot protocol\uff0c\u5728\u5bf9USB\u952e\u76d8\u7684\u521d\u59cb\u5316\u6d41\u7a0b\u4e2d\u4f1a\u4f7f\u7528 Set_Protocol Request \u5c06\u952e\u76d8\u8bbe\u7f6e\u4e3aboot protocol\uff0cboot protocol\u7684\u5b9a\u4e49\u662f\u517c\u5bb9report protocol\u7684\uff0c\u5728HID\u89c4\u8303\u9644\u5f55B.2\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63cf\u8ff0\u7b26\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u63cf\u8ff0\u7b26\u5185\u5bb9\u5982\u4e0b Usage Page (Generic Desktop), Usage (Keyboard), Collection (Application), Report Size (1), Report Count (8), Usage Page (Key Codes), Usage Minimum (224), Usage Maximum (231), Logical Minimum (0), Logical Maximum (1), Input (Data, Variable, Absolute), Report Count (1), Report Size (8), Input (Constant), Report Count (5), Report Size (1), Usage Page (LEDs), Usage Minimum (1), Usage Maximum (5), Output (Data, Variable, Absolute), Report Count (1), Report Size (3), Output (Constant), Report Count (6), Report Size (8), Logical Minimum (0), Logical Maximum(255), Usage Page (Key Codes), Usage Minimum (0), Usage Maximum (255), Input (Data, Array), End Collection","title":"Boot Interface Descriptor"},{"location":"projects/epd-clock/","text":"EPD-Clock \u00b6 \u7b80\u4ecb \u00b6 \u4f7f\u7528hanshuo\u7535\u5b50\u4ef7\u7b7e\u4e2d\u76842.9\u5bf8\u58a8\u6c34\u5c4f\u3001MSP430G2553\u5355\u7247\u673a\u4ee5\u53caspi nor flash\u7b49\u5143\u4ef6\u8bbe\u8ba1\u5236\u4f5c\u4e86\u4e00\u6b3e\u91c7\u7528\u5355\u82827\u53f7\u5e72\u7535\u6c60\u4f9b\u7535\u7684\u65f6\u949f\u3002\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u5728\u6bcf\u5929\u5de5\u4f5c16\u5c0f\u65f6\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u8282\u5e72\u7535\u6c60\u53ef\u4f9b\u5176\u8fde\u7eed\u5de5\u4f5c6\u4e2a\u6708\u5de6\u53f3\u3002 \u8be6\u7ec6\u5185\u5bb9\u89c1 github \u6216 gitee \u3002 \u540e\u7eed \u00b6 \u5728\u73b0\u6709\u8bbe\u8ba1\u7684\u57fa\u7840\u4e0a\uff0c\u4f7f\u7528\u767d\u5ad6\u7684ESP32C3\u6a21\u5757\u5bf9\u65f6\u949f\u8fdb\u884c\u4e86\u91cd\u65b0\u8bbe\u8ba1\uff0c\u65b0\u589e\u7684\u529f\u80fd\u4e3b\u8981\u4e3a\u7f51\u7edc\u6821\u65f6\uff0c\u5b9e\u65f6\u5929\u6c14\u83b7\u53d6\u7b49\uff1b\u76f8\u5e94\u7684\uff0c\u4f9b\u7535\u4e5f\u66f4\u6539\u4e3a\u9502\u7535\u6c60\u4f9b\u7535\u3002\u7535\u8def\u53ca\u4ee3\u7801\u5b9e\u73b0\u76ee\u524d\u5747\u5f88\u7b80\u964b\uff0c\u4e0d\u8fc7\u80fd\u7528:)\u3002\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u5728\u4f7f\u7528600mah\u7535\u6c60\u4f9b\u7535\uff0c\u6bcf\u5929\u5de5\u4f5c16\u5c0f\u65f6\uff0c\u6bcf\u5c0f\u65f6\u66f4\u65b0\u4e00\u6b21\u5929\u6c14\u548c\u65f6\u949f\u7684\u60c5\u51b5\u4e0b\u53ef\u8fde\u7eed\u5de5\u4f5c50\u5929\u5de6\u53f3\u3002 \u8be6\u7ec6\u5185\u5bb9\u89c1 github \u6216 gitee \u7684 esp32c3 \u5206\u652f\u3002","title":"Epd-Clock"},{"location":"projects/epd-clock/#epd-clock","text":"","title":"EPD-Clock"},{"location":"projects/epd-clock/#_1","text":"\u4f7f\u7528hanshuo\u7535\u5b50\u4ef7\u7b7e\u4e2d\u76842.9\u5bf8\u58a8\u6c34\u5c4f\u3001MSP430G2553\u5355\u7247\u673a\u4ee5\u53caspi nor flash\u7b49\u5143\u4ef6\u8bbe\u8ba1\u5236\u4f5c\u4e86\u4e00\u6b3e\u91c7\u7528\u5355\u82827\u53f7\u5e72\u7535\u6c60\u4f9b\u7535\u7684\u65f6\u949f\u3002\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u5728\u6bcf\u5929\u5de5\u4f5c16\u5c0f\u65f6\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u8282\u5e72\u7535\u6c60\u53ef\u4f9b\u5176\u8fde\u7eed\u5de5\u4f5c6\u4e2a\u6708\u5de6\u53f3\u3002 \u8be6\u7ec6\u5185\u5bb9\u89c1 github \u6216 gitee \u3002","title":"\u7b80\u4ecb"},{"location":"projects/epd-clock/#_2","text":"\u5728\u73b0\u6709\u8bbe\u8ba1\u7684\u57fa\u7840\u4e0a\uff0c\u4f7f\u7528\u767d\u5ad6\u7684ESP32C3\u6a21\u5757\u5bf9\u65f6\u949f\u8fdb\u884c\u4e86\u91cd\u65b0\u8bbe\u8ba1\uff0c\u65b0\u589e\u7684\u529f\u80fd\u4e3b\u8981\u4e3a\u7f51\u7edc\u6821\u65f6\uff0c\u5b9e\u65f6\u5929\u6c14\u83b7\u53d6\u7b49\uff1b\u76f8\u5e94\u7684\uff0c\u4f9b\u7535\u4e5f\u66f4\u6539\u4e3a\u9502\u7535\u6c60\u4f9b\u7535\u3002\u7535\u8def\u53ca\u4ee3\u7801\u5b9e\u73b0\u76ee\u524d\u5747\u5f88\u7b80\u964b\uff0c\u4e0d\u8fc7\u80fd\u7528:)\u3002\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u5728\u4f7f\u7528600mah\u7535\u6c60\u4f9b\u7535\uff0c\u6bcf\u5929\u5de5\u4f5c16\u5c0f\u65f6\uff0c\u6bcf\u5c0f\u65f6\u66f4\u65b0\u4e00\u6b21\u5929\u6c14\u548c\u65f6\u949f\u7684\u60c5\u51b5\u4e0b\u53ef\u8fde\u7eed\u5de5\u4f5c50\u5929\u5de6\u53f3\u3002 \u8be6\u7ec6\u5185\u5bb9\u89c1 github \u6216 gitee \u7684 esp32c3 \u5206\u652f\u3002","title":"\u540e\u7eed"},{"location":"projects/serprog/","text":"serprog \u00b6 \u6982\u8ff0 \u00b6 serprog\u662f flashrom \u652f\u6301\u7684\u4f17\u591a\u7f16\u7a0b\u5668\u4e2d\u7684\u4e00\u79cd\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e32\u53e3\u64cd\u4f5c\u5355\u7247\u673a\u6765\u7ed9spi flash\u7f16\u7a0b\uff0c\u5728flashrom\u7684 wiki \u4e2d\u4ecb\u7ecd\u4e86\u591a\u79cd\u5e73\u53f0\u7684\u5b9e\u73b0\u3002 \u6211\u6700\u5f00\u59cb\u662f\u4ece Linux \u4e0b\u79bb\u7ebf\u70e7\u5199 SPI \u95ea\u5b58 \u8fd9\u7bc7\u535a\u5ba2\u4e2d\u4e86\u89e3\u5230\u8fd9\u79cd\u7f16\u7a0b\u5668\uff0c\u5bf9\u6b64\u6bd4\u8f83\u611f\u5174\u8da3\uff0c\u4e8e\u662f\u4ed4\u7ec6\u9605\u8bfb\u4e86\u4e00\u4e0b\u539f\u535a\u4e3b\u7684\u6587\u7ae0\u548c\u4ee3\u7801\u4ed3\u5e93\uff0c\u5e76\u5bf9serprog\u7684\u534f\u8bae\u8fdb\u884c\u4e86\u7814\u8bfb\u3002 lpc-serprog \u00b6 \u63a5\u4e0a\u6587\uff0c\u6b63\u597d\u6709\u4e00\u5757lpc54114-lite\u5f00\u53d1\u677f\uff0c\u8be5\u5f00\u53d1\u677f\u6709\u4e00\u7247\u677f\u8f7dspi flash\uff0c\u800c\u4e14\u5fae\u63a7\u5236\u5668\u5177\u6709usb\u8bbe\u5907\u5916\u8bbe\uff0c\u6070\u597d\u53ef\u4ee5\u6ee1\u8db3\u8981\u6c42\uff0c\u4e8e\u662f\u4fbf\u5728\u8be5\u5f00\u53d1\u677f\u4e0a\u8fdb\u884c\u4e86\u7b80\u5355\u5b9e\u73b0\u3002 \u4ee3\u7801\u7f16\u5199\u5b8c\u6210\u540e\u8fdb\u884c\u4e86\u7b80\u5355\u7684\u6d4b\u8bd5\uff0c\u7ed3\u679c\u5982\u4e0b\uff1a # \u8bfbflash, W25X80, 1MiB $ time sudo flashrom -p serprog:dev = /dev/ttyACM0:4000000 -c W25X80 -r /tmp/test.bin flashrom on Linux 4 .19.0-16-amd64 ( x86_64 ) flashrom is free software, get the source code at https://flashrom.org Using clock_gettime for delay loops ( clk_id: 1 , resolution: 1ns ) . serprog: Programmer name is \"lpc-serprog\" Found Winbond flash chip \"W25X80\" ( 1024 kB, SPI ) on serprog. Reading flash... done . real 0m3.106s user 0m1.163s sys 0m0.055s # \u64e6\u9664flash, W25X80, 1MiB $ time sudo flashrom -p serprog:dev = /dev/ttyACM0:4000000 -c W25X80 -E flashrom on Linux 4 .19.0-16-amd64 ( x86_64 ) flashrom is free software, get the source code at https://flashrom.org Using clock_gettime for delay loops ( clk_id: 1 , resolution: 1ns ) . serprog: Programmer name is \"lpc-serprog\" Found Winbond flash chip \"W25X80\" ( 1024 kB, SPI ) on serprog. Erasing and writing flash chip... Erase/write done . real 0m25.594s user 0m23.017s sys 0m0.065s # \u5199flash, W25X80, 1MiB $ time sudo flashrom -p serprog:dev = /dev/ttyACM0:4000000 -c W25X80 -w /tmp/test.bin flashrom on Linux 4 .19.0-16-amd64 ( x86_64 ) flashrom is free software, get the source code at https://flashrom.org Using clock_gettime for delay loops ( clk_id: 1 , resolution: 1ns ) . serprog: Programmer name is \"lpc-serprog\" Found Winbond flash chip \"W25X80\" ( 1024 kB, SPI ) on serprog. Reading old flash chip contents... done . Erasing and writing flash chip... Erase/write done . Verifying flash... VERIFIED. real 0m17.041s user 0m2.757s sys 0m0.717s flashrom\u5728\u4f7f\u7528serprog\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u5728sync\u547d\u4ee4\u9636\u6bb5\u4f1a\u82b1\u8d391s\u7684\u65f6\u95f4\uff0c\u9664\u53bbsync\u9636\u6bb51s\u7684\u65f6\u95f4\u6765\u770b\u8bfb\u5199\u901f\u5ea6\u8fd8\u662f\u4e0d\u9519\u7684\uff0c\u867d\u7136\u76f8\u8f83\u4e8e\u539f\u535a\u4e3b\u7684\u5b9e\u73b0\u8bfb\u5199\u901f\u5ea6\u7565\u6709\u4e0d\u6025\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u5e76\u672a\u505a\u592a\u591a\u4f18\u5316\uff0c\u800c\u4e14\u65e5\u5e38\u62ff\u6765\u4f7f\u7528\u4e5f\u591f\u7528\u4e86\u3002 \u4e0a\u8ff0\u5b9e\u73b0\u7684\u4ee3\u7801\u76ee\u524d\u5206\u522b\u6258\u7ba1\u4e8e github \u4ee5\u53ca gitee \u3002 stm32-serprog \u00b6 \u4e3a\u4e86\u540c\u65f6\u652f\u63013.3V\u4e0e1.8V spi flash\u8bfb\u5199\u7684\u652f\u6301\uff0c\u53c2\u8003 Linux \u4e0b\u79bb\u7ebf\u70e7\u5199 SPI \u95ea\u5b58 \u6587\u7ae0\u4e2dgithub\u4ed3\u5e93\u4e2d\u7684\u539f\u7406\u56fe\u7ed8\u5236\u4e86\u4e00\u5757PCB\uff0c\u5e76\u589e\u52a0\u4e86\u7535\u5e73\u8f6c\u6362\u82af\u7247\u548c\u5207\u6362\u5f00\u5173\uff0c\u7531\u4e8e\u76ee\u524d\u6070\u597d\u6709\u51e0\u7247stm32f103R8T6\uff0c\u4fbf\u4f7f\u7528\u8be5\u5fae\u63a7\u5236\u5668\u4f5c\u4e3astm32-serprog\u7684\u4e3b\u63a7\uff0c\u4f7f\u7528\u4e00\u7247txs0108\u6765\u505a\u7535\u5e73\u8f6c\u6362\uff08\u5176\u5b9e\u8fd9\u91cc\u4f7f\u7528txs0104/txb0104\u4fbf\u53ef\u4ee5\u4e86\uff0c\u4e0d\u8fc7\u7ed8\u5236\u539f\u7406\u56fe\u65f6\u672a\u6ce8\u610f\u5230\uff0c\u56e0\u6b64\u4f7f\u7528\u4e86txs0108\uff0cv0.2\u5df2\u7ecf\u505a\u4e86\u4fee\u6539\uff09\uff0c\u7a0b\u5e8f\u7684\u8bdd\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u539f\u535a\u4e3b\u4ed3\u5e93\u4e2d\u7684\u4ee3\u7801\uff0cpcb\u6548\u679c\u5982\u5982\u4e0b\u3002 \u8be5\u9879\u76ee\u8be6\u7ec6\u60c5\u51b5\u53ef\u4ee5\u5728 ieiao/stm32-serprog \u4e2d\u67e5\u770b\u3002","title":"serprog"},{"location":"projects/serprog/#serprog","text":"","title":"serprog"},{"location":"projects/serprog/#_1","text":"serprog\u662f flashrom \u652f\u6301\u7684\u4f17\u591a\u7f16\u7a0b\u5668\u4e2d\u7684\u4e00\u79cd\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e32\u53e3\u64cd\u4f5c\u5355\u7247\u673a\u6765\u7ed9spi flash\u7f16\u7a0b\uff0c\u5728flashrom\u7684 wiki \u4e2d\u4ecb\u7ecd\u4e86\u591a\u79cd\u5e73\u53f0\u7684\u5b9e\u73b0\u3002 \u6211\u6700\u5f00\u59cb\u662f\u4ece Linux \u4e0b\u79bb\u7ebf\u70e7\u5199 SPI \u95ea\u5b58 \u8fd9\u7bc7\u535a\u5ba2\u4e2d\u4e86\u89e3\u5230\u8fd9\u79cd\u7f16\u7a0b\u5668\uff0c\u5bf9\u6b64\u6bd4\u8f83\u611f\u5174\u8da3\uff0c\u4e8e\u662f\u4ed4\u7ec6\u9605\u8bfb\u4e86\u4e00\u4e0b\u539f\u535a\u4e3b\u7684\u6587\u7ae0\u548c\u4ee3\u7801\u4ed3\u5e93\uff0c\u5e76\u5bf9serprog\u7684\u534f\u8bae\u8fdb\u884c\u4e86\u7814\u8bfb\u3002","title":"\u6982\u8ff0"},{"location":"projects/serprog/#lpc-serprog","text":"\u63a5\u4e0a\u6587\uff0c\u6b63\u597d\u6709\u4e00\u5757lpc54114-lite\u5f00\u53d1\u677f\uff0c\u8be5\u5f00\u53d1\u677f\u6709\u4e00\u7247\u677f\u8f7dspi flash\uff0c\u800c\u4e14\u5fae\u63a7\u5236\u5668\u5177\u6709usb\u8bbe\u5907\u5916\u8bbe\uff0c\u6070\u597d\u53ef\u4ee5\u6ee1\u8db3\u8981\u6c42\uff0c\u4e8e\u662f\u4fbf\u5728\u8be5\u5f00\u53d1\u677f\u4e0a\u8fdb\u884c\u4e86\u7b80\u5355\u5b9e\u73b0\u3002 \u4ee3\u7801\u7f16\u5199\u5b8c\u6210\u540e\u8fdb\u884c\u4e86\u7b80\u5355\u7684\u6d4b\u8bd5\uff0c\u7ed3\u679c\u5982\u4e0b\uff1a # \u8bfbflash, W25X80, 1MiB $ time sudo flashrom -p serprog:dev = /dev/ttyACM0:4000000 -c W25X80 -r /tmp/test.bin flashrom on Linux 4 .19.0-16-amd64 ( x86_64 ) flashrom is free software, get the source code at https://flashrom.org Using clock_gettime for delay loops ( clk_id: 1 , resolution: 1ns ) . serprog: Programmer name is \"lpc-serprog\" Found Winbond flash chip \"W25X80\" ( 1024 kB, SPI ) on serprog. Reading flash... done . real 0m3.106s user 0m1.163s sys 0m0.055s # \u64e6\u9664flash, W25X80, 1MiB $ time sudo flashrom -p serprog:dev = /dev/ttyACM0:4000000 -c W25X80 -E flashrom on Linux 4 .19.0-16-amd64 ( x86_64 ) flashrom is free software, get the source code at https://flashrom.org Using clock_gettime for delay loops ( clk_id: 1 , resolution: 1ns ) . serprog: Programmer name is \"lpc-serprog\" Found Winbond flash chip \"W25X80\" ( 1024 kB, SPI ) on serprog. Erasing and writing flash chip... Erase/write done . real 0m25.594s user 0m23.017s sys 0m0.065s # \u5199flash, W25X80, 1MiB $ time sudo flashrom -p serprog:dev = /dev/ttyACM0:4000000 -c W25X80 -w /tmp/test.bin flashrom on Linux 4 .19.0-16-amd64 ( x86_64 ) flashrom is free software, get the source code at https://flashrom.org Using clock_gettime for delay loops ( clk_id: 1 , resolution: 1ns ) . serprog: Programmer name is \"lpc-serprog\" Found Winbond flash chip \"W25X80\" ( 1024 kB, SPI ) on serprog. Reading old flash chip contents... done . Erasing and writing flash chip... Erase/write done . Verifying flash... VERIFIED. real 0m17.041s user 0m2.757s sys 0m0.717s flashrom\u5728\u4f7f\u7528serprog\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u5728sync\u547d\u4ee4\u9636\u6bb5\u4f1a\u82b1\u8d391s\u7684\u65f6\u95f4\uff0c\u9664\u53bbsync\u9636\u6bb51s\u7684\u65f6\u95f4\u6765\u770b\u8bfb\u5199\u901f\u5ea6\u8fd8\u662f\u4e0d\u9519\u7684\uff0c\u867d\u7136\u76f8\u8f83\u4e8e\u539f\u535a\u4e3b\u7684\u5b9e\u73b0\u8bfb\u5199\u901f\u5ea6\u7565\u6709\u4e0d\u6025\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u5e76\u672a\u505a\u592a\u591a\u4f18\u5316\uff0c\u800c\u4e14\u65e5\u5e38\u62ff\u6765\u4f7f\u7528\u4e5f\u591f\u7528\u4e86\u3002 \u4e0a\u8ff0\u5b9e\u73b0\u7684\u4ee3\u7801\u76ee\u524d\u5206\u522b\u6258\u7ba1\u4e8e github \u4ee5\u53ca gitee \u3002","title":"lpc-serprog"},{"location":"projects/serprog/#stm32-serprog","text":"\u4e3a\u4e86\u540c\u65f6\u652f\u63013.3V\u4e0e1.8V spi flash\u8bfb\u5199\u7684\u652f\u6301\uff0c\u53c2\u8003 Linux \u4e0b\u79bb\u7ebf\u70e7\u5199 SPI \u95ea\u5b58 \u6587\u7ae0\u4e2dgithub\u4ed3\u5e93\u4e2d\u7684\u539f\u7406\u56fe\u7ed8\u5236\u4e86\u4e00\u5757PCB\uff0c\u5e76\u589e\u52a0\u4e86\u7535\u5e73\u8f6c\u6362\u82af\u7247\u548c\u5207\u6362\u5f00\u5173\uff0c\u7531\u4e8e\u76ee\u524d\u6070\u597d\u6709\u51e0\u7247stm32f103R8T6\uff0c\u4fbf\u4f7f\u7528\u8be5\u5fae\u63a7\u5236\u5668\u4f5c\u4e3astm32-serprog\u7684\u4e3b\u63a7\uff0c\u4f7f\u7528\u4e00\u7247txs0108\u6765\u505a\u7535\u5e73\u8f6c\u6362\uff08\u5176\u5b9e\u8fd9\u91cc\u4f7f\u7528txs0104/txb0104\u4fbf\u53ef\u4ee5\u4e86\uff0c\u4e0d\u8fc7\u7ed8\u5236\u539f\u7406\u56fe\u65f6\u672a\u6ce8\u610f\u5230\uff0c\u56e0\u6b64\u4f7f\u7528\u4e86txs0108\uff0cv0.2\u5df2\u7ecf\u505a\u4e86\u4fee\u6539\uff09\uff0c\u7a0b\u5e8f\u7684\u8bdd\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u539f\u535a\u4e3b\u4ed3\u5e93\u4e2d\u7684\u4ee3\u7801\uff0cpcb\u6548\u679c\u5982\u5982\u4e0b\u3002 \u8be5\u9879\u76ee\u8be6\u7ec6\u60c5\u51b5\u53ef\u4ee5\u5728 ieiao/stm32-serprog \u4e2d\u67e5\u770b\u3002","title":"stm32-serprog"},{"location":"tools/gcc/","text":"GCC \u00b6 \u6307\u5b9a\u5b57\u7b26\u7f16\u7801 \u00b6 -finput-charset \u6307\u5b9a\u6e90\u6587\u4ef6\uff08\u4fdd\u5b58\u6587\u4ef6\u65f6\u9009\u62e9\uff09\u7684\u7f16\u7801\u65b9\u5f0f\uff08\u82e5\u4e0d\u6307\u5b9a\uff0c\u7f16\u8bd1\u5668\u9ed8\u8ba4\u662fUTF-8\uff09 -fexec-charset \u6307\u5b9a\u53ef\u6267\u884c\u7a0b\u5e8f\u4e2d\u7684\u5b57\u7b26\u4ee5\u4ec0\u4e48\u7f16\u7801\u65b9\u5f0f\u6765\u8868\u793a\uff0c\u9ed8\u8ba4\u662fUTF-8 \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u6bd4\u8f83\u6709\u7528\u7684\uff0c\u5f53\u4f7f\u7528gcc\u5f00\u53d1\u5355\u7247\u673a\u663e\u793a\u76f8\u5173\u7a0b\u5e8f\u65f6\u82e5\u4f7f\u7528\u7684\u5b57\u5e93\u662fGBK\u6216GB2312\u7f16\u7801\u65f6\u9700\u8981\u4f7f\u7528\u8fd9\u4e2a\u53c2\u6570\u6765\u6307\u5b9a\u7a0b\u5e8f\u4e2d\u5b57\u7b26\u4e32\u7684\u7f16\u7801\u3002 \u53bb\u9664\u672a\u7528\u5230\u7684\u51fd\u6570 \u00b6 \u5728\u7f16\u8bd1\u65f6\u6dfb\u52a0 -ffunction-sections -fdata-sections \u53c2\u6570\uff0c\u5728\u94fe\u63a5\u65f6\u6dfb\u52a0 -Wl,-gc-sections \u53c2\u6570\u5373\u53ef\u81ea\u52a8\u53bb\u9664\u672a\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u51cf\u5c0f\u4ee3\u7801\u4e8c\u8fdb\u5236\u4f53\u79ef\u3002 \u91cd\u5b9a\u5411 \u00b6 \u5d4c\u5165\u5f0f\u5f00\u53d1\u4e2d\u53ef\u4ee5\u5c06 printf \u51fd\u6570\u8fdb\u884c\u91cd\u5b9a\u5411\u4ee5\u4fbf\u53ef\u4ee5\u4f7f\u7528 printf \u51fd\u6570\u8fdb\u884c\u683c\u5f0f\u5316\u8f93\u51fa\u3002 \u589e\u52a0 _write \u51fd\u6570\u7684\u81ea\u5b9a\u4e49\u5b9e\u73b0\uff0c\u5728\u81ea\u5b9a\u4e49\u5b9e\u73b0\u7684\u51fd\u6570\u4e2d\u5c06buf\u4e2d\u7684\u6570\u636e\u901a\u8fc7\u4e32\u53e3\u8fdb\u884c\u53d1\u9001\u5373\u53ef\u5b9e\u73b0\u91cd\u5b9a\u5411\uff0c\u8be5\u51fd\u6570\u539f\u578b\u5982\u4e0b: int _write ( int fd , const void * buf , size_t count ); \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c \\n \u9700\u8981\u505a\u7279\u6b8a\u5904\u7406\uff0c\u5f53\u68c0\u6d4b\u5230\u4f20\u5165\u7684\u5b57\u7b26\u4e32\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u4e3a \\n \u65f6\uff0c\u9700\u8981\u989d\u5916\u589e\u52a0\u4e00\u4e2a \\r \u5b57\u7b26\uff0c\u8fd9\u6837\u4fbf\u7b26\u5408Linux\u7cfb\u7edf\u4e0b\u7684\u4f7f\u7528\u60c5\u51b5\u4e86\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u5b9e\u4f8b\uff1a int _write ( int fd , const void * buf , size_t count ) { uint8_t * p = ( uint8_t * ) buf ; ( void ) fd ; USART_WriteBlocking ( USART0 , p , count ); if ( * ( p + count -1 ) == '\\n' ) USART_WriteByte ( USART0 , '\\r' ); return count ; } \u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u9700\u5728\u94fe\u63a5\u9636\u6bb5\u589e\u52a0 --specs=nano.specs --specs=nosys.specs \u53c2\u6570\u4ee5\u4f7f\u80fd\u91cd\u5b9a\u5411(retarget)\u5e76\u4f7f\u7528nano\u7248\u672c\u7684libc\uff0c\u51cf\u5c0fflash\u53caram\u7684\u6d88\u8017\u3002 \u53c2\u6570\u4f20\u9012 \u00b6 \u53ef\u4ee5\u901a\u8fc7 -Wl,option \u53c2\u6570\u6765\u4f20\u9012\u53c2\u6570\u7ed9\u94fe\u63a5\u5668\uff1b\u540c\u7406\uff0c\u901a\u8fc7 -Wa,option \u53ef\u4ee5\u4f20\u9012\u53c2\u6570\u7ed9\u6c47\u7f16\u5668\u3002 \u751f\u6210\u4f9d\u8d56\u5173\u7cfb \u00b6 \u5728\u4f7f\u7528Makefile\u7ec4\u7ec7\u9879\u76ee\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5728CFLAGS\u4e2d\u589e\u52a0 -MMD -MP \u53c2\u6570\uff0c\u8fd9\u6837GCC\u4fbf\u4f1a\u751f\u6210Makefile\u98ce\u683c\u7684\u4f9d\u8d56\u6587\u4ef6\uff0c\u501f\u52a9\u8fd9\u4e9b\u4f9d\u8d56\u6587\u4ef6\u4fbf\u53ef\u4ee5\u5b9e\u73b0\u4fee\u6539\u5934\u6587\u4ef6\u540e\u81ea\u52a8\u91cd\u65b0\u7f16\u8bd1\u6240\u6709\u76f8\u5173\u7684\u6e90\u7801\u3002","title":"gcc"},{"location":"tools/gcc/#gcc","text":"","title":"GCC"},{"location":"tools/gcc/#_1","text":"-finput-charset \u6307\u5b9a\u6e90\u6587\u4ef6\uff08\u4fdd\u5b58\u6587\u4ef6\u65f6\u9009\u62e9\uff09\u7684\u7f16\u7801\u65b9\u5f0f\uff08\u82e5\u4e0d\u6307\u5b9a\uff0c\u7f16\u8bd1\u5668\u9ed8\u8ba4\u662fUTF-8\uff09 -fexec-charset \u6307\u5b9a\u53ef\u6267\u884c\u7a0b\u5e8f\u4e2d\u7684\u5b57\u7b26\u4ee5\u4ec0\u4e48\u7f16\u7801\u65b9\u5f0f\u6765\u8868\u793a\uff0c\u9ed8\u8ba4\u662fUTF-8 \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u6bd4\u8f83\u6709\u7528\u7684\uff0c\u5f53\u4f7f\u7528gcc\u5f00\u53d1\u5355\u7247\u673a\u663e\u793a\u76f8\u5173\u7a0b\u5e8f\u65f6\u82e5\u4f7f\u7528\u7684\u5b57\u5e93\u662fGBK\u6216GB2312\u7f16\u7801\u65f6\u9700\u8981\u4f7f\u7528\u8fd9\u4e2a\u53c2\u6570\u6765\u6307\u5b9a\u7a0b\u5e8f\u4e2d\u5b57\u7b26\u4e32\u7684\u7f16\u7801\u3002","title":"\u6307\u5b9a\u5b57\u7b26\u7f16\u7801"},{"location":"tools/gcc/#_2","text":"\u5728\u7f16\u8bd1\u65f6\u6dfb\u52a0 -ffunction-sections -fdata-sections \u53c2\u6570\uff0c\u5728\u94fe\u63a5\u65f6\u6dfb\u52a0 -Wl,-gc-sections \u53c2\u6570\u5373\u53ef\u81ea\u52a8\u53bb\u9664\u672a\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u51cf\u5c0f\u4ee3\u7801\u4e8c\u8fdb\u5236\u4f53\u79ef\u3002","title":"\u53bb\u9664\u672a\u7528\u5230\u7684\u51fd\u6570"},{"location":"tools/gcc/#_3","text":"\u5d4c\u5165\u5f0f\u5f00\u53d1\u4e2d\u53ef\u4ee5\u5c06 printf \u51fd\u6570\u8fdb\u884c\u91cd\u5b9a\u5411\u4ee5\u4fbf\u53ef\u4ee5\u4f7f\u7528 printf \u51fd\u6570\u8fdb\u884c\u683c\u5f0f\u5316\u8f93\u51fa\u3002 \u589e\u52a0 _write \u51fd\u6570\u7684\u81ea\u5b9a\u4e49\u5b9e\u73b0\uff0c\u5728\u81ea\u5b9a\u4e49\u5b9e\u73b0\u7684\u51fd\u6570\u4e2d\u5c06buf\u4e2d\u7684\u6570\u636e\u901a\u8fc7\u4e32\u53e3\u8fdb\u884c\u53d1\u9001\u5373\u53ef\u5b9e\u73b0\u91cd\u5b9a\u5411\uff0c\u8be5\u51fd\u6570\u539f\u578b\u5982\u4e0b: int _write ( int fd , const void * buf , size_t count ); \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c \\n \u9700\u8981\u505a\u7279\u6b8a\u5904\u7406\uff0c\u5f53\u68c0\u6d4b\u5230\u4f20\u5165\u7684\u5b57\u7b26\u4e32\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u4e3a \\n \u65f6\uff0c\u9700\u8981\u989d\u5916\u589e\u52a0\u4e00\u4e2a \\r \u5b57\u7b26\uff0c\u8fd9\u6837\u4fbf\u7b26\u5408Linux\u7cfb\u7edf\u4e0b\u7684\u4f7f\u7528\u60c5\u51b5\u4e86\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u5b9e\u4f8b\uff1a int _write ( int fd , const void * buf , size_t count ) { uint8_t * p = ( uint8_t * ) buf ; ( void ) fd ; USART_WriteBlocking ( USART0 , p , count ); if ( * ( p + count -1 ) == '\\n' ) USART_WriteByte ( USART0 , '\\r' ); return count ; } \u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u9700\u5728\u94fe\u63a5\u9636\u6bb5\u589e\u52a0 --specs=nano.specs --specs=nosys.specs \u53c2\u6570\u4ee5\u4f7f\u80fd\u91cd\u5b9a\u5411(retarget)\u5e76\u4f7f\u7528nano\u7248\u672c\u7684libc\uff0c\u51cf\u5c0fflash\u53caram\u7684\u6d88\u8017\u3002","title":"\u91cd\u5b9a\u5411"},{"location":"tools/gcc/#_4","text":"\u53ef\u4ee5\u901a\u8fc7 -Wl,option \u53c2\u6570\u6765\u4f20\u9012\u53c2\u6570\u7ed9\u94fe\u63a5\u5668\uff1b\u540c\u7406\uff0c\u901a\u8fc7 -Wa,option \u53ef\u4ee5\u4f20\u9012\u53c2\u6570\u7ed9\u6c47\u7f16\u5668\u3002","title":"\u53c2\u6570\u4f20\u9012"},{"location":"tools/gcc/#_5","text":"\u5728\u4f7f\u7528Makefile\u7ec4\u7ec7\u9879\u76ee\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5728CFLAGS\u4e2d\u589e\u52a0 -MMD -MP \u53c2\u6570\uff0c\u8fd9\u6837GCC\u4fbf\u4f1a\u751f\u6210Makefile\u98ce\u683c\u7684\u4f9d\u8d56\u6587\u4ef6\uff0c\u501f\u52a9\u8fd9\u4e9b\u4f9d\u8d56\u6587\u4ef6\u4fbf\u53ef\u4ee5\u5b9e\u73b0\u4fee\u6539\u5934\u6587\u4ef6\u540e\u81ea\u52a8\u91cd\u65b0\u7f16\u8bd1\u6240\u6709\u76f8\u5173\u7684\u6e90\u7801\u3002","title":"\u751f\u6210\u4f9d\u8d56\u5173\u7cfb"},{"location":"tools/git/","text":"Git \u00b6 \u5e38\u7528\u64cd\u4f5c \u00b6 \u4ee3\u7801\u5408\u5e76 \u00b6 merge rebase \u6458\u53d6\u63d0\u4ea4 \u00b6 cherry-pick \u4fee\u6539\u67d0\u4e2acommit \u00b6 # \u4fee\u6539\u4e4b\u524d\u7684\u67d0\u4e2a\u63d0\u4ea4\uff0ccommit-id\u4e3a\u60f3\u4fee\u6539\u7684\u63d0\u4ea4\u4e4b\u524d\u7684\u90a3\u4e2a\u63d0\u4ea4 git rebase -i commit-id \u67e5\u770b\u67d0\u884c\u4ee3\u7801\u7684\u63d0\u4ea4\u8bb0\u5f55 \u00b6 # \u67e5\u770b\u67d0\u884c\u4ee3\u7801\u7684\u63d0\u4ea4\u8bb0\u5f55 git blame -L line add\u67d0\u4e00\u884c\u6216\u8005\u67d0\u51e0\u884c \u00b6 git add -p \u6216\u8005\u4f7f\u7528tig\uff0c\u76f4\u63a5\u5728Unstaged changes\u4e2d\u7684\u67d0\u4e00\u884c\u63091\u53ef\u4ee5\u5207\u6362\u8fd9\u4e00\u884c\u7684\u72b6\u6001","title":"Git"},{"location":"tools/git/#git","text":"","title":"Git"},{"location":"tools/git/#_1","text":"","title":"\u5e38\u7528\u64cd\u4f5c"},{"location":"tools/git/#_2","text":"merge rebase","title":"\u4ee3\u7801\u5408\u5e76"},{"location":"tools/git/#_3","text":"cherry-pick","title":"\u6458\u53d6\u63d0\u4ea4"},{"location":"tools/git/#commit","text":"# \u4fee\u6539\u4e4b\u524d\u7684\u67d0\u4e2a\u63d0\u4ea4\uff0ccommit-id\u4e3a\u60f3\u4fee\u6539\u7684\u63d0\u4ea4\u4e4b\u524d\u7684\u90a3\u4e2a\u63d0\u4ea4 git rebase -i commit-id","title":"\u4fee\u6539\u67d0\u4e2acommit"},{"location":"tools/git/#_4","text":"# \u67e5\u770b\u67d0\u884c\u4ee3\u7801\u7684\u63d0\u4ea4\u8bb0\u5f55 git blame -L line","title":"\u67e5\u770b\u67d0\u884c\u4ee3\u7801\u7684\u63d0\u4ea4\u8bb0\u5f55"},{"location":"tools/git/#add","text":"git add -p \u6216\u8005\u4f7f\u7528tig\uff0c\u76f4\u63a5\u5728Unstaged changes\u4e2d\u7684\u67d0\u4e00\u884c\u63091\u53ef\u4ee5\u5207\u6362\u8fd9\u4e00\u884c\u7684\u72b6\u6001","title":"add\u67d0\u4e00\u884c\u6216\u8005\u67d0\u51e0\u884c"},{"location":"tools/hexdump/","text":"Hexdump \u00b6 hexdump, hd \u2014 ASCII, decimal, hexadecimal, octal dump The hexdump utility is a filter which displays the specified files, or the standard input, if no files are specified, in a user specified format. hexdump\u9664\u4e86\u76f4\u63a5\u67e5\u770b\u4e8c\u8fdb\u5236\u6587\u4ef6\u4ee5\u5916\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5176\u683c\u5f0f\u5316\u8f93\u51fa\u529f\u80fd\u5b9e\u73b0\u4e00\u4e9b\u6bd4\u8f83\u65b9\u4fbf\u7684\u529f\u80fd\uff0c\u4f8b\u5982\u5c06\u4e8c\u8fdb\u5236\u6587\u4ef6\u8f6c\u6362\u4e3a16\u8fdb\u5236\u6587\u672c\u6587\u4ef6\uff0c\u4f7f\u7528 -e \u53c2\u6570\u6765\u6307\u5b9a\u683c\u5f0f\uff0cman\u624b\u518c\u4e2d\u63d0\u4f9b\u7684\u793a\u4f8b\u5982\u4e0b\uff1a # hex bytes % echo hello | hexdump -v -e '/1 \"%02X \"' ; echo 68 65 6C 6C 6F 0A # same, with ASCII section % echo hello | hexdump -e '8/1 \"%02X \"\"\\t\"\" \"' -e '8/1 \"%c\"\"\\n\"' 68 65 6C 6C 6F 0A hello \u4e24\u4e2a\u793a\u4f8b\u7684\u529f\u80fd\u5206\u522b\u5982\u4e0b\uff1a \u6bcf\u6b21\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282\uff0c\u5e76\u4f7f\u7528 %02X \u683c\u5f0f\u6765\u683c\u5f0f\u5316\u8f93\u51fa \u7b2c\u4e00\u4e2a -e \u542b\u4e49\u4e3a\u6bcf\u6b21\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282\uff0c\u4ee58\u5b57\u8282\u4e3a\u4e00\u7ec4\u4f7f\u7528 \"%02X \"\"\\t\"\" \" \u683c\u5f0f\u6765\u683c\u5f0f\u5316\u8f93\u51fa\uff0c\u7b2c\u4e8c\u4e2a\u540c\u7406 \u6240\u4ee5\uff0c\u5c06\u7b2c\u4e8c\u4e2a\u793a\u4f8b\u7684\u8f93\u5165\u4fee\u6539\u4e3a\u5927\u4e8e8\u4e2a\u5b57\u7b26\u65f6\uff0c\u5176\u8f93\u51fa\u5982\u4e0b\uff1a $ echo helloooo | hexdump -e '8/1 \"%02X \"\"\\t\"\" \"' -e '8/1 \"%c\"\"\\n\"' 68 65 6C 6C 6F 6F 6F 6F helloooo 0A \u53ef\u4ee5\u53d1\u73b0\uff0c\u5408\u7406\u7684\u4f7f\u7528\u683c\u5f0f\u5316\u8f93\u51fa\u53ef\u4ee5\u5b9e\u73b0\u5404\u79cd\u5f62\u5f0f\u7684\u4e8c\u8fdb\u5236\u548c\u5b57\u7b26\u8f6c\u6362\u3002 \u4f8b\u5982\u5728\u8c03\u8bd5verilog\u7a0b\u5e8f\u4e2d\u9700\u8981\u751f\u6210\u4e00\u4e9b\u6c47\u7f16\u6307\u4ee4\u7801\u6ce8\u5165rom\u6a21\u5757\uff0c\u901a\u5e38\u6211\u4eec\u4f7f\u7528\u6c47\u7f16\u7f16\u5199\u9700\u8981\u7684\u7a0b\u5e8f\u5e76\u7f16\u8bd1\u751f\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u7136\u540e\u5c06\u5176\u8f6c\u6362\u4e3a16\u8fdb\u5236ascii\u6587\u4ef6\u5e76\u901a\u8fc7testbench\u8fdb\u884c\u8bfb\u53d6\uff0c\u8fd9\u4fbf\u9700\u8981\u4e00\u4e2a\u7a0b\u5e8f\u6765\u5b8c\u6210\u8f6c\u6362\u5de5\u4f5c\u3002 \u5047\u8bbe\u6709\u4e00\u4e2a\u9700\u8981\u8f6c\u6362\u7684bin\u6587\u4ef6\uff0c\u5176\u5185\u5bb9\u5982\u4e0b\uff1a $ hexdump -C inst_rom.bin 00000000 00 11 01 34 20 00 21 34 00 44 21 34 44 00 21 34 | ...4 .!4.D!4D.!4 | 00000010 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | ................ | 00000020 00 00 00 00 00 00 00 00 00 00 20 01 01 00 00 03 | .......... ..... | 00000030 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 | ................ | 00000040 \u9700\u8981\u5c06\u5176\u4ee54\u5b57\u8282\u4e3a\u5355\u4f4d\u8f6c\u6362\u4e3aascii\u6587\u4ef6\uff0c\u8fd9\u65f6\u5019hexdump\u4fbf\u53ef\u4ee5\u51fa\u9a6c\u4e86\uff0c\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4: $ hexdump -v -e '/4 \"%08x\\n\"' inst_rom.bin 34011100 34210020 34214400 34210044 00000002 00000000 00000000 00000000 00000000 00000000 01200000 03000001 00000000 00000000 00000001 00000000 bingo! \u5df2\u7ecf\u975e\u5e38\u5b8c\u7f8e\u7684\u8f6c\u6362\u51fa\u6765\u4e86\uff0c\u53ea\u8981\u5c06\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u6587\u4ef6\u4e2d\u4fbf\u5b8c\u7f8e\u7684\u89e3\u51b3\u95ee\u9898\u4e86\u3002","title":"hexdump"},{"location":"tools/hexdump/#hexdump","text":"hexdump, hd \u2014 ASCII, decimal, hexadecimal, octal dump The hexdump utility is a filter which displays the specified files, or the standard input, if no files are specified, in a user specified format. hexdump\u9664\u4e86\u76f4\u63a5\u67e5\u770b\u4e8c\u8fdb\u5236\u6587\u4ef6\u4ee5\u5916\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5176\u683c\u5f0f\u5316\u8f93\u51fa\u529f\u80fd\u5b9e\u73b0\u4e00\u4e9b\u6bd4\u8f83\u65b9\u4fbf\u7684\u529f\u80fd\uff0c\u4f8b\u5982\u5c06\u4e8c\u8fdb\u5236\u6587\u4ef6\u8f6c\u6362\u4e3a16\u8fdb\u5236\u6587\u672c\u6587\u4ef6\uff0c\u4f7f\u7528 -e \u53c2\u6570\u6765\u6307\u5b9a\u683c\u5f0f\uff0cman\u624b\u518c\u4e2d\u63d0\u4f9b\u7684\u793a\u4f8b\u5982\u4e0b\uff1a # hex bytes % echo hello | hexdump -v -e '/1 \"%02X \"' ; echo 68 65 6C 6C 6F 0A # same, with ASCII section % echo hello | hexdump -e '8/1 \"%02X \"\"\\t\"\" \"' -e '8/1 \"%c\"\"\\n\"' 68 65 6C 6C 6F 0A hello \u4e24\u4e2a\u793a\u4f8b\u7684\u529f\u80fd\u5206\u522b\u5982\u4e0b\uff1a \u6bcf\u6b21\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282\uff0c\u5e76\u4f7f\u7528 %02X \u683c\u5f0f\u6765\u683c\u5f0f\u5316\u8f93\u51fa \u7b2c\u4e00\u4e2a -e \u542b\u4e49\u4e3a\u6bcf\u6b21\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282\uff0c\u4ee58\u5b57\u8282\u4e3a\u4e00\u7ec4\u4f7f\u7528 \"%02X \"\"\\t\"\" \" \u683c\u5f0f\u6765\u683c\u5f0f\u5316\u8f93\u51fa\uff0c\u7b2c\u4e8c\u4e2a\u540c\u7406 \u6240\u4ee5\uff0c\u5c06\u7b2c\u4e8c\u4e2a\u793a\u4f8b\u7684\u8f93\u5165\u4fee\u6539\u4e3a\u5927\u4e8e8\u4e2a\u5b57\u7b26\u65f6\uff0c\u5176\u8f93\u51fa\u5982\u4e0b\uff1a $ echo helloooo | hexdump -e '8/1 \"%02X \"\"\\t\"\" \"' -e '8/1 \"%c\"\"\\n\"' 68 65 6C 6C 6F 6F 6F 6F helloooo 0A \u53ef\u4ee5\u53d1\u73b0\uff0c\u5408\u7406\u7684\u4f7f\u7528\u683c\u5f0f\u5316\u8f93\u51fa\u53ef\u4ee5\u5b9e\u73b0\u5404\u79cd\u5f62\u5f0f\u7684\u4e8c\u8fdb\u5236\u548c\u5b57\u7b26\u8f6c\u6362\u3002 \u4f8b\u5982\u5728\u8c03\u8bd5verilog\u7a0b\u5e8f\u4e2d\u9700\u8981\u751f\u6210\u4e00\u4e9b\u6c47\u7f16\u6307\u4ee4\u7801\u6ce8\u5165rom\u6a21\u5757\uff0c\u901a\u5e38\u6211\u4eec\u4f7f\u7528\u6c47\u7f16\u7f16\u5199\u9700\u8981\u7684\u7a0b\u5e8f\u5e76\u7f16\u8bd1\u751f\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u7136\u540e\u5c06\u5176\u8f6c\u6362\u4e3a16\u8fdb\u5236ascii\u6587\u4ef6\u5e76\u901a\u8fc7testbench\u8fdb\u884c\u8bfb\u53d6\uff0c\u8fd9\u4fbf\u9700\u8981\u4e00\u4e2a\u7a0b\u5e8f\u6765\u5b8c\u6210\u8f6c\u6362\u5de5\u4f5c\u3002 \u5047\u8bbe\u6709\u4e00\u4e2a\u9700\u8981\u8f6c\u6362\u7684bin\u6587\u4ef6\uff0c\u5176\u5185\u5bb9\u5982\u4e0b\uff1a $ hexdump -C inst_rom.bin 00000000 00 11 01 34 20 00 21 34 00 44 21 34 44 00 21 34 | ...4 .!4.D!4D.!4 | 00000010 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | ................ | 00000020 00 00 00 00 00 00 00 00 00 00 20 01 01 00 00 03 | .......... ..... | 00000030 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 | ................ | 00000040 \u9700\u8981\u5c06\u5176\u4ee54\u5b57\u8282\u4e3a\u5355\u4f4d\u8f6c\u6362\u4e3aascii\u6587\u4ef6\uff0c\u8fd9\u65f6\u5019hexdump\u4fbf\u53ef\u4ee5\u51fa\u9a6c\u4e86\uff0c\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4: $ hexdump -v -e '/4 \"%08x\\n\"' inst_rom.bin 34011100 34210020 34214400 34210044 00000002 00000000 00000000 00000000 00000000 00000000 01200000 03000001 00000000 00000000 00000001 00000000 bingo! \u5df2\u7ecf\u975e\u5e38\u5b8c\u7f8e\u7684\u8f6c\u6362\u51fa\u6765\u4e86\uff0c\u53ea\u8981\u5c06\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u6587\u4ef6\u4e2d\u4fbf\u5b8c\u7f8e\u7684\u89e3\u51b3\u95ee\u9898\u4e86\u3002","title":"Hexdump"},{"location":"tools/linux_tips/","text":"Linux Tips \u00b6 Linux\u7cfb\u7edf\u4e2d\u7684\u4e00\u4e9b\u5c0f\u5de5\u5177\u3001\u8f6f\u4ef6\u914d\u7f6e\u4ee5\u53ca\u5176\u4ed6\u4e00\u4e9b\u5c0f\u73a9\u610f\u513f linux\u4e2d\u6700\u7b80\u5355\u751f\u6210\u4e00\u4e2auuid\u7684\u65b9\u6cd5 $ cat /proc/sys/kernel/random \u5c06sd\u5361/U\u76d8\u683c\u5f0f\u5316\u4e3a\u65e0\u5206\u533a\u7684\u6837\u5b50\uff0c\u5176\u5b9e\u662f\u8986\u76d6\u4e86MBR $ sudo mkfs.vfat -F 32 -I /d \u68c0\u6d4b\u7f51\u7ebf\u63d2\u62d4 $ /sys/class/net/eth0/carrier 32\u4f4d\u8fd0\u884c\u5e93 $ apt install lib32z1 \u5b57\u7b26\u8f6c\u827a\u672f\u5b57 $ figlet linux\u67e5\u770b\u8fd0\u884c\u65f6\u957f $ cat /proc/uptime \u53cd\u5411\u67e5\u8be2\u547d\u4ee4\u884c\u5386\u53f2\u8bb0\u5f55\uff0c\u8d85\u5b9e\u7528 $ Ctrl+r linux\u4e32\u53e3\u5de5\u5177 $ picocom $ minicom $ cutecom \u4e32\u53e3\u63d2\u62d4\u9ed8\u8ba4\u65e0\u901a\u77e5\uff0c\u53ef\u4ee5\u589e\u52a0\u4e00\u4e9b\u4e2audev\u901a\u77e5\u6765\u5b9e\u73b0 ACTION==\"add\", KERNEL==\"ttyUSB*[0-9]\", SUBSYSTEM==\"tty\", RUN+=\"/sbin/runuser -l $user -c 'notify-send %k \u4e32\u53e3\u5df2\u63d2\u5165'\" ACTION==\"remove\", KERNEL==\"ttyUSB*[0-9]\", SUBSYSTEM==\"tty\", RUN+=\"/sbin/runuser -l $user -c 'notify-send %k \u4e32\u53e3\u5df2\u62d4\u51fa'\" \u6587\u672c\u8f6c\u6570\u7ec4\uff0c\u547d\u4ee4\u884c\u4e00\u952e\u751f\u6210\u5934\u6587\u4ef6 $ xxd -i file kde\u7f51\u7edc\u8bbe\u7f6e\u4e2d\u5bfc\u5165openvpn\u914d\u7f6e \u7cfb\u7edf\u8bbe\u7f6e>\u8fde\u63a5>\u6dfb\u52a0\u8fde\u63a5>\u5bfc\u5165vpn\u8fde\u63a5 \u5982\u679c.ovpn\u914d\u7f6e\u6587\u4ef6\u4e2d\u5305\u542btls-crypt\u5b57\u6bb5\uff0c\u8fd8\u9700\u8981\u5728\u9ad8\u7ea7\u8bbe\u7f6e\u4e2d\u5bf9TLS\u8fdb\u884c\u8bbe\u7f6e nfs\u670d\u52a1\u914d\u7f6e\u6587\u4ef6 $ /etc/exports mount\u7ed1\u5b9a\u76ee\u5f55 $ sudo mount --bind src dest kvm\u542f\u52a8\u5931\u8d25,\u63d0\u793a \u542f\u52a8\u57df\u65f6\u51fa\u9519: \u6240\u9700\u64cd\u4f5c\u65e0\u6548\uff1a\u7f51\u7edc 'default' \u672a\u6fc0\u6d3b $ sudo virsh net-start default getopt\u547d\u4ee4\u7684\u4f7f\u7528 set -- ` getopt -q -l append:port: a:p: --append test -p /dev/ttyUSB0 while [ -n \" $1 \" ] do case \" $1 \" in -a | --append ) append = $2 shift ;; -p | --port ) port = $2 shift ;; -- ) shift break ;; esac shift done USB\u5171\u4eab\u7f51\u7edcRNDIS # host $ modprobe rndis_hos # board $ modprobe g_ether.ko # on host $ ifconfig usb0 192 .168.2.1 # on board $ ifconfig usb0 192 .168.2.100 # enable forwarding on host $ echo 1 > /proc/sys/net/ipv4/ip_forward $ iptables -P FORWARD ACCEPT $ iptables -A POSTROUTING -t nat -j MASQUERADE -s 192 .168.2.0/24 input\u8bbe\u5907\u6d4b\u8bd5\u5de5\u5177 evtest \u547d\u4ee4\u7528\u4e8e\u6d4b\u8bd5input\u8bbe\u5907\u7684\u8f93\u5165 PRIME Render Offload \u53cc\u663e\u5361\u7b14\u8bb0\u672c\u5b89\u88c5Nvidia\u95ed\u6e90\u9a71\u52a8\u540e\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u73af\u5883\u53d8\u91cf\u542f\u7528\u72ec\u663e\u52a0\u901f\uff1f \u505a\u6cd5\u5c31\u662f\u5728\u6267\u884c\u7a0b\u5e8f\u65f6\u6dfb\u52a0\u5982\u4e0b\u7684\u73af\u5883\u53d8\u91cf\uff0c\u6216\u8005\u76f4\u63a5\u4fee\u6539 /usr/share/applications \u76ee\u5f55\u4e0b\u5404\u7a0b\u5e8f\u63cf\u8ff0\u6587\u4ef6\u4e2d\u7684 Exec \u5b57\u6bb5\uff0c\u5c06\u5982\u4e0b\u7684\u73af\u5883\u53d8\u91cf\u6dfb\u52a0\u5230\u547d\u4ee4\u4e2d\u3002 __NV_PRIME_RENDER_OFFLOAD = 1 __GLX_VENDOR_LIBRARY_NAME = nvidia","title":"Linux Tips"},{"location":"tools/linux_tips/#linux-tips","text":"Linux\u7cfb\u7edf\u4e2d\u7684\u4e00\u4e9b\u5c0f\u5de5\u5177\u3001\u8f6f\u4ef6\u914d\u7f6e\u4ee5\u53ca\u5176\u4ed6\u4e00\u4e9b\u5c0f\u73a9\u610f\u513f linux\u4e2d\u6700\u7b80\u5355\u751f\u6210\u4e00\u4e2auuid\u7684\u65b9\u6cd5 $ cat /proc/sys/kernel/random \u5c06sd\u5361/U\u76d8\u683c\u5f0f\u5316\u4e3a\u65e0\u5206\u533a\u7684\u6837\u5b50\uff0c\u5176\u5b9e\u662f\u8986\u76d6\u4e86MBR $ sudo mkfs.vfat -F 32 -I /d \u68c0\u6d4b\u7f51\u7ebf\u63d2\u62d4 $ /sys/class/net/eth0/carrier 32\u4f4d\u8fd0\u884c\u5e93 $ apt install lib32z1 \u5b57\u7b26\u8f6c\u827a\u672f\u5b57 $ figlet linux\u67e5\u770b\u8fd0\u884c\u65f6\u957f $ cat /proc/uptime \u53cd\u5411\u67e5\u8be2\u547d\u4ee4\u884c\u5386\u53f2\u8bb0\u5f55\uff0c\u8d85\u5b9e\u7528 $ Ctrl+r linux\u4e32\u53e3\u5de5\u5177 $ picocom $ minicom $ cutecom \u4e32\u53e3\u63d2\u62d4\u9ed8\u8ba4\u65e0\u901a\u77e5\uff0c\u53ef\u4ee5\u589e\u52a0\u4e00\u4e9b\u4e2audev\u901a\u77e5\u6765\u5b9e\u73b0 ACTION==\"add\", KERNEL==\"ttyUSB*[0-9]\", SUBSYSTEM==\"tty\", RUN+=\"/sbin/runuser -l $user -c 'notify-send %k \u4e32\u53e3\u5df2\u63d2\u5165'\" ACTION==\"remove\", KERNEL==\"ttyUSB*[0-9]\", SUBSYSTEM==\"tty\", RUN+=\"/sbin/runuser -l $user -c 'notify-send %k \u4e32\u53e3\u5df2\u62d4\u51fa'\" \u6587\u672c\u8f6c\u6570\u7ec4\uff0c\u547d\u4ee4\u884c\u4e00\u952e\u751f\u6210\u5934\u6587\u4ef6 $ xxd -i file kde\u7f51\u7edc\u8bbe\u7f6e\u4e2d\u5bfc\u5165openvpn\u914d\u7f6e \u7cfb\u7edf\u8bbe\u7f6e>\u8fde\u63a5>\u6dfb\u52a0\u8fde\u63a5>\u5bfc\u5165vpn\u8fde\u63a5 \u5982\u679c.ovpn\u914d\u7f6e\u6587\u4ef6\u4e2d\u5305\u542btls-crypt\u5b57\u6bb5\uff0c\u8fd8\u9700\u8981\u5728\u9ad8\u7ea7\u8bbe\u7f6e\u4e2d\u5bf9TLS\u8fdb\u884c\u8bbe\u7f6e nfs\u670d\u52a1\u914d\u7f6e\u6587\u4ef6 $ /etc/exports mount\u7ed1\u5b9a\u76ee\u5f55 $ sudo mount --bind src dest kvm\u542f\u52a8\u5931\u8d25,\u63d0\u793a \u542f\u52a8\u57df\u65f6\u51fa\u9519: \u6240\u9700\u64cd\u4f5c\u65e0\u6548\uff1a\u7f51\u7edc 'default' \u672a\u6fc0\u6d3b $ sudo virsh net-start default getopt\u547d\u4ee4\u7684\u4f7f\u7528 set -- ` getopt -q -l append:port: a:p: --append test -p /dev/ttyUSB0 while [ -n \" $1 \" ] do case \" $1 \" in -a | --append ) append = $2 shift ;; -p | --port ) port = $2 shift ;; -- ) shift break ;; esac shift done USB\u5171\u4eab\u7f51\u7edcRNDIS # host $ modprobe rndis_hos # board $ modprobe g_ether.ko # on host $ ifconfig usb0 192 .168.2.1 # on board $ ifconfig usb0 192 .168.2.100 # enable forwarding on host $ echo 1 > /proc/sys/net/ipv4/ip_forward $ iptables -P FORWARD ACCEPT $ iptables -A POSTROUTING -t nat -j MASQUERADE -s 192 .168.2.0/24 input\u8bbe\u5907\u6d4b\u8bd5\u5de5\u5177 evtest \u547d\u4ee4\u7528\u4e8e\u6d4b\u8bd5input\u8bbe\u5907\u7684\u8f93\u5165 PRIME Render Offload \u53cc\u663e\u5361\u7b14\u8bb0\u672c\u5b89\u88c5Nvidia\u95ed\u6e90\u9a71\u52a8\u540e\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u73af\u5883\u53d8\u91cf\u542f\u7528\u72ec\u663e\u52a0\u901f\uff1f \u505a\u6cd5\u5c31\u662f\u5728\u6267\u884c\u7a0b\u5e8f\u65f6\u6dfb\u52a0\u5982\u4e0b\u7684\u73af\u5883\u53d8\u91cf\uff0c\u6216\u8005\u76f4\u63a5\u4fee\u6539 /usr/share/applications \u76ee\u5f55\u4e0b\u5404\u7a0b\u5e8f\u63cf\u8ff0\u6587\u4ef6\u4e2d\u7684 Exec \u5b57\u6bb5\uff0c\u5c06\u5982\u4e0b\u7684\u73af\u5883\u53d8\u91cf\u6dfb\u52a0\u5230\u547d\u4ee4\u4e2d\u3002 __NV_PRIME_RENDER_OFFLOAD = 1 __GLX_VENDOR_LIBRARY_NAME = nvidia","title":"Linux Tips"},{"location":"tools/make/","text":"Make \u00b6 \u904d\u5386\u6587\u4ef6 \u00b6 dirs := $( shell find . -maxdepth 3 -type d ) files := $( foreach dir, $( dirs ) , $( wildcard $( dir ) /*.c )) objs := $( patsubst %.c,%.o, $( FILES )) \u53d8\u91cf\u7684\u66ff\u6362\u5f15\u7528 \u00b6 # $(VAR:A=B) # example # \u6548\u679c\u548cpatsust\u662f\u4e00\u6837\u7684 foo := a.o b.o c.o bar := $( foo:%.o = %.c ) \u5c06\u4e2d\u95f4\u6587\u4ef6\u8f93\u51fa\u5230\u6307\u5b9a\u7684\u76ee\u5f55 \u00b6 \u5c06\u4e2d\u95f4\u6587\u4ef6\u8f93\u51fa\u5230\u6307\u5b9a\u7684\u76ee\u5f55\u9700\u8981\u5c06\u6784\u5efa\u89c4\u5219\u4e00\u5e76\u8fdb\u884c\u4fee\u6539\uff0c\u5982\u4e0b\u793a\u4f8b\u53ef\u4ee5\u5c06\u4e2d\u95f4\u6587\u4ef6\u8f93\u51fa\u5230 OUTPUT \u6307\u5b9a\u7684\u76ee\u5f55\u4e2d\u53bb OUTPUT := build # \u9700\u8981\u6539\u5199\u8fd9\u91cc\u7684\u5339\u914d\u89c4\u5219\u5e76\u589e\u52a0\u4e0b\u9762\u521b\u5efa\u5bf9\u5e94\u76ee\u5f55\u7684\u64cd\u4f5c $(OUTPUT)/%.o : %. c @echo \" CC $ <\" @if [ ! -d $( dir $@ ) ] ; then mkdir -p $( dir $@ ) ; fi @ $( CC ) -c -o $@ $< $( CFLAGS ) \u5934\u6587\u4ef6\u6539\u52a8\u540e\u4e0d\u4f1a\u91cd\u65b0\u7f16\u8bd1\u7684\u89e3\u51b3\u529e\u6cd5 \u00b6 gcc\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53eb\u505a -M \u7684\u9009\u9879\u7528\u6765\u751f\u6210make\u683c\u5f0f\u7684\u6e90\u7801\u4f9d\u8d56\u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7f16\u8bd1\u9009\u9879\u4e2d\u589e\u52a0 -MMD , -MP \u4e24\u4e2a\u53c2\u6570\u6765\u81ea\u52a8\u751f\u6210\u548c\u6e90\u6587\u4ef6\u540d\u79f0\u76f8\u540c\u5e76\u4e14\u540e\u7f00\u4e3a .d \u7684\u4f9d\u8d56\u6587\u4ef6\u5e76\u5728\u9876\u5c42Makefile\u4e2d\u4f7f\u7528 -include $(deps) \u6765\u5305\u542b\u8fd9\u4e9b\u89c4\u5219\uff0c\u8fd9\u6837\u5f53 .h \u6587\u4ef6\u4fee\u6539\u540e\u4fbf\u4f1a\u81ea\u52a8\u7f16\u8bd1\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\u7684\u6587\u4ef6\u4e86\uff0c\u4f7f\u7528\u793a\u4f8b\u5982\u4e0b: CFLAGS += -MMD -MP objs := $( patsubst %.c, $( OUTPUT ) /%.o, $( srcs )) deps := $( objs:%.o = %.d ) -include $(deps) $(OUTPUT)/%.o : %. c @echo \" CC $ <\" @if [ ! -d $( dir $@ ) ] ; then mkdir -p $( dir $@ ) ; fi @ $( CC ) -c -o $@ $< $( CFLAGS ) \u7b80\u5355\u7684\u6a21\u677f \u00b6 # Makefile CROSS := CC = $( CROSS ) gcc STRIP = $( CROSS ) strip objs := a.o objs += lib/b.o c-flags := -ffunction-sections -fdata-sections ld-flags := -Wl,-gc-sections target : $( objs ) @CC $( ld-flags ) -o $@ $^ @STRIP $@ $(objs) : %. o : %. c @CC $( c-flags ) -c -o $@ $^ .PHONY : clean clean : @find -name '*.o' | xargs rm -f","title":"make"},{"location":"tools/make/#make","text":"","title":"Make"},{"location":"tools/make/#_1","text":"dirs := $( shell find . -maxdepth 3 -type d ) files := $( foreach dir, $( dirs ) , $( wildcard $( dir ) /*.c )) objs := $( patsubst %.c,%.o, $( FILES ))","title":"\u904d\u5386\u6587\u4ef6"},{"location":"tools/make/#_2","text":"# $(VAR:A=B) # example # \u6548\u679c\u548cpatsust\u662f\u4e00\u6837\u7684 foo := a.o b.o c.o bar := $( foo:%.o = %.c )","title":"\u53d8\u91cf\u7684\u66ff\u6362\u5f15\u7528"},{"location":"tools/make/#_3","text":"\u5c06\u4e2d\u95f4\u6587\u4ef6\u8f93\u51fa\u5230\u6307\u5b9a\u7684\u76ee\u5f55\u9700\u8981\u5c06\u6784\u5efa\u89c4\u5219\u4e00\u5e76\u8fdb\u884c\u4fee\u6539\uff0c\u5982\u4e0b\u793a\u4f8b\u53ef\u4ee5\u5c06\u4e2d\u95f4\u6587\u4ef6\u8f93\u51fa\u5230 OUTPUT \u6307\u5b9a\u7684\u76ee\u5f55\u4e2d\u53bb OUTPUT := build # \u9700\u8981\u6539\u5199\u8fd9\u91cc\u7684\u5339\u914d\u89c4\u5219\u5e76\u589e\u52a0\u4e0b\u9762\u521b\u5efa\u5bf9\u5e94\u76ee\u5f55\u7684\u64cd\u4f5c $(OUTPUT)/%.o : %. c @echo \" CC $ <\" @if [ ! -d $( dir $@ ) ] ; then mkdir -p $( dir $@ ) ; fi @ $( CC ) -c -o $@ $< $( CFLAGS )","title":"\u5c06\u4e2d\u95f4\u6587\u4ef6\u8f93\u51fa\u5230\u6307\u5b9a\u7684\u76ee\u5f55"},{"location":"tools/make/#_4","text":"gcc\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53eb\u505a -M \u7684\u9009\u9879\u7528\u6765\u751f\u6210make\u683c\u5f0f\u7684\u6e90\u7801\u4f9d\u8d56\u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7f16\u8bd1\u9009\u9879\u4e2d\u589e\u52a0 -MMD , -MP \u4e24\u4e2a\u53c2\u6570\u6765\u81ea\u52a8\u751f\u6210\u548c\u6e90\u6587\u4ef6\u540d\u79f0\u76f8\u540c\u5e76\u4e14\u540e\u7f00\u4e3a .d \u7684\u4f9d\u8d56\u6587\u4ef6\u5e76\u5728\u9876\u5c42Makefile\u4e2d\u4f7f\u7528 -include $(deps) \u6765\u5305\u542b\u8fd9\u4e9b\u89c4\u5219\uff0c\u8fd9\u6837\u5f53 .h \u6587\u4ef6\u4fee\u6539\u540e\u4fbf\u4f1a\u81ea\u52a8\u7f16\u8bd1\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\u7684\u6587\u4ef6\u4e86\uff0c\u4f7f\u7528\u793a\u4f8b\u5982\u4e0b: CFLAGS += -MMD -MP objs := $( patsubst %.c, $( OUTPUT ) /%.o, $( srcs )) deps := $( objs:%.o = %.d ) -include $(deps) $(OUTPUT)/%.o : %. c @echo \" CC $ <\" @if [ ! -d $( dir $@ ) ] ; then mkdir -p $( dir $@ ) ; fi @ $( CC ) -c -o $@ $< $( CFLAGS )","title":"\u5934\u6587\u4ef6\u6539\u52a8\u540e\u4e0d\u4f1a\u91cd\u65b0\u7f16\u8bd1\u7684\u89e3\u51b3\u529e\u6cd5"},{"location":"tools/make/#_5","text":"# Makefile CROSS := CC = $( CROSS ) gcc STRIP = $( CROSS ) strip objs := a.o objs += lib/b.o c-flags := -ffunction-sections -fdata-sections ld-flags := -Wl,-gc-sections target : $( objs ) @CC $( ld-flags ) -o $@ $^ @STRIP $@ $(objs) : %. o : %. c @CC $( c-flags ) -c -o $@ $^ .PHONY : clean clean : @find -name '*.o' | xargs rm -f","title":"\u7b80\u5355\u7684\u6a21\u677f"},{"location":"tools/pulseview/","text":"PulseView \u00b6 \u903b\u8f91\u5206\u6790\u4eea\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u517c\u5bb9\u6dd8\u5b9d\u4e0a\u552e\u5356\u7684\u5404\u7c7b\u4f4e\u7aef\u903b\u8f91\u5206\u6790\u4eea\u3002 \u5728Linux\u4e2d\u4f7f\u7528\u5305\u7ba1\u7406\u5de5\u5177\u5b89\u88c5Pulseview\u540e\u4f1a\u62a5\u627e\u4e0d\u5230\u8bbe\u5907\u7684\u9519\u8bef\uff0c\u7ecf\u8fc7\u591a\u6b21\u5b9e\u9a8c\uff0c\u53d1\u73b0\u53ea\u8981\u5b89\u88c5sigrok\u4fbf\u53ef\u4ee5\u81ea\u52a8\u5b89\u88c5PulseView\u5e76\u4e14\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u4e86\u3002","title":"PulseView"},{"location":"tools/pulseview/#pulseview","text":"\u903b\u8f91\u5206\u6790\u4eea\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u517c\u5bb9\u6dd8\u5b9d\u4e0a\u552e\u5356\u7684\u5404\u7c7b\u4f4e\u7aef\u903b\u8f91\u5206\u6790\u4eea\u3002 \u5728Linux\u4e2d\u4f7f\u7528\u5305\u7ba1\u7406\u5de5\u5177\u5b89\u88c5Pulseview\u540e\u4f1a\u62a5\u627e\u4e0d\u5230\u8bbe\u5907\u7684\u9519\u8bef\uff0c\u7ecf\u8fc7\u591a\u6b21\u5b9e\u9a8c\uff0c\u53d1\u73b0\u53ea\u8981\u5b89\u88c5sigrok\u4fbf\u53ef\u4ee5\u81ea\u52a8\u5b89\u88c5PulseView\u5e76\u4e14\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u4e86\u3002","title":"PulseView"},{"location":"tools/tmux/","text":"tmux \u00b6 session\u64cd\u4f5c \u00b6 \u65b0\u5efasession \u00b6 tmux new -s <session-name> \u79bb\u5f00session \u00b6 # ctrl + b d tmux detach \u8fdb\u5165session \u00b6 tmux attach -t <session-name> \u5173\u95edsession \u00b6 tmux kill-session -t <session-name> \u5207\u6362session \u00b6 tmux switch -t <session-name> \u7a97\u683c\u64cd\u4f5c \u00b6 \u5207\u5272\u7a97\u683c\u7684\u5feb\u6377\u952e ctrl+b % \u53ef\u4ee5\u5feb\u901f\u7684\u5de6\u53f3\u5207\u5272\uff0cctrl+b \" \u53ef\u4ee5\u5feb\u901f\u7684\u4e0a\u4e0b\u8fdb\u884c\u5207\u5272\u3002 \u5feb\u6377\u952e ctrl+b z ,\u5c06\u4f1a\u653e\u5927\u5f53\u524d\u64cd\u4f5c\u7684\u7a97\u683c\uff0c\u7ee7\u7eed\u89e6\u53d1\u8be5\u5feb\u6377\u952e\u5c06\u4f1a\u8fd8\u539f\u5f53\u524d\u7684\u7a97\u683c\u3002 \u5feb\u6377\u952e ctrl+b t \u5c06\u4f1a\u628a\u5728\u5f53\u524d\u7684\u7a97\u683c\u5f53\u4e2d\u663e\u793a\u65f6\u949f\u3002 \u5728vim\u6309\u952e\u6a21\u5f0f\u4e0b ctrl+b h/j/k/l \u7528\u6765\u5728\u4e0d\u540c\u7684\u7a97\u683c\u4e4b\u95f4\u5207\u6362\u3002 ctrl+b [ \u5728\u5f53\u524d\u7a97\u683c\u4e2d\u8fdb\u884c\u6eda\u5c4f\u64cd\u4f5c \u70b9\u51fbshift\u5e76\u4f7f\u7528\u9f20\u6807\u64cd\u4f5c\u53ef\u6062\u590d\u7ec8\u7aef\u9ed8\u8ba4\u9f20\u6807\u529f\u80fd\uff0c\u590d\u5236\u7c98\u8d34\u4f1a\u65b9\u4fbf\u4e00\u4e9b\u3002 ctrl+b q \u663e\u793a\u7a97\u683c\u7f16\u53f7\u3002 ctrl+b alt+\u65b9\u5411\u952e\u8c03\u6574\u7a97\u683c\u957f\u5bbd\u3002 \u7a97\u53e3\u64cd\u4f5c \u00b6 \u521b\u5efa\u7a97\u53e3\u7684\u5feb\u6377\u952ectrl+b c, \u53ef\u4ee5\u901a\u8fc7\u5feb\u6377\u952e\u5feb\u901f\u7684\u521b\u5efa\u4e00\u4e2a\u7a97\u53e3\u51fa\u6765\u3002 ctrl+b n \u5feb\u901f\u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u7a97\u53e3\uff1bctrl+b p \u5feb\u901f\u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u7a97\u53e3\u3002 ctrl+b num \u5feb\u901f\u5207\u6362\u5230\u6307\u5b9a\u5e8f\u53f7\u7a97\u53e3\u3002 ctrl+b , \u8be5\u5feb\u6377\u952e\u53ef\u4ee5\u91cd\u65b0\u547d\u540d\u7a97\u53e3 \u914d\u7f6e\u6587\u4ef6 \u00b6 \u914d\u7f6e\u6587\u4ef6\u4e3a~/.tmux.conf\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u6613\u7684\u914d\u7f6e\u6587\u4ef6\u5b9e\u4f8b\uff1a # \u57fa\u7840\u8bbe\u7f6e set -g default-command \"/bin/bash\" set -g default-terminal \"screen-256color\" set -g display-time 3000 set -g escape-time 0 set -g history-limit 65535 set -g base-index 1 set -g pane-base-index 1 set -g status-style bg=blue # \u9009\u4e2d\u7a97\u53e3 bind-key k select-pane -U bind-key j select-pane -D bind-key h select-pane -L bind-key l select-pane -R # copy-mode \u5c06\u5feb\u6377\u952e\u8bbe\u7f6e\u4e3a vi \u6a21\u5f0f setw -g mode-keys vi # \u542f\u7528\u9f20\u6807(Tmux v2.1) set -g mouse on","title":"tmux"},{"location":"tools/tmux/#tmux","text":"","title":"tmux"},{"location":"tools/tmux/#session","text":"","title":"session\u64cd\u4f5c"},{"location":"tools/tmux/#session_1","text":"tmux new -s <session-name>","title":"\u65b0\u5efasession"},{"location":"tools/tmux/#session_2","text":"# ctrl + b d tmux detach","title":"\u79bb\u5f00session"},{"location":"tools/tmux/#session_3","text":"tmux attach -t <session-name>","title":"\u8fdb\u5165session"},{"location":"tools/tmux/#session_4","text":"tmux kill-session -t <session-name>","title":"\u5173\u95edsession"},{"location":"tools/tmux/#session_5","text":"tmux switch -t <session-name>","title":"\u5207\u6362session"},{"location":"tools/tmux/#_1","text":"\u5207\u5272\u7a97\u683c\u7684\u5feb\u6377\u952e ctrl+b % \u53ef\u4ee5\u5feb\u901f\u7684\u5de6\u53f3\u5207\u5272\uff0cctrl+b \" \u53ef\u4ee5\u5feb\u901f\u7684\u4e0a\u4e0b\u8fdb\u884c\u5207\u5272\u3002 \u5feb\u6377\u952e ctrl+b z ,\u5c06\u4f1a\u653e\u5927\u5f53\u524d\u64cd\u4f5c\u7684\u7a97\u683c\uff0c\u7ee7\u7eed\u89e6\u53d1\u8be5\u5feb\u6377\u952e\u5c06\u4f1a\u8fd8\u539f\u5f53\u524d\u7684\u7a97\u683c\u3002 \u5feb\u6377\u952e ctrl+b t \u5c06\u4f1a\u628a\u5728\u5f53\u524d\u7684\u7a97\u683c\u5f53\u4e2d\u663e\u793a\u65f6\u949f\u3002 \u5728vim\u6309\u952e\u6a21\u5f0f\u4e0b ctrl+b h/j/k/l \u7528\u6765\u5728\u4e0d\u540c\u7684\u7a97\u683c\u4e4b\u95f4\u5207\u6362\u3002 ctrl+b [ \u5728\u5f53\u524d\u7a97\u683c\u4e2d\u8fdb\u884c\u6eda\u5c4f\u64cd\u4f5c \u70b9\u51fbshift\u5e76\u4f7f\u7528\u9f20\u6807\u64cd\u4f5c\u53ef\u6062\u590d\u7ec8\u7aef\u9ed8\u8ba4\u9f20\u6807\u529f\u80fd\uff0c\u590d\u5236\u7c98\u8d34\u4f1a\u65b9\u4fbf\u4e00\u4e9b\u3002 ctrl+b q \u663e\u793a\u7a97\u683c\u7f16\u53f7\u3002 ctrl+b alt+\u65b9\u5411\u952e\u8c03\u6574\u7a97\u683c\u957f\u5bbd\u3002","title":"\u7a97\u683c\u64cd\u4f5c"},{"location":"tools/tmux/#_2","text":"\u521b\u5efa\u7a97\u53e3\u7684\u5feb\u6377\u952ectrl+b c, \u53ef\u4ee5\u901a\u8fc7\u5feb\u6377\u952e\u5feb\u901f\u7684\u521b\u5efa\u4e00\u4e2a\u7a97\u53e3\u51fa\u6765\u3002 ctrl+b n \u5feb\u901f\u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u7a97\u53e3\uff1bctrl+b p \u5feb\u901f\u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u7a97\u53e3\u3002 ctrl+b num \u5feb\u901f\u5207\u6362\u5230\u6307\u5b9a\u5e8f\u53f7\u7a97\u53e3\u3002 ctrl+b , \u8be5\u5feb\u6377\u952e\u53ef\u4ee5\u91cd\u65b0\u547d\u540d\u7a97\u53e3","title":"\u7a97\u53e3\u64cd\u4f5c"},{"location":"tools/tmux/#_3","text":"\u914d\u7f6e\u6587\u4ef6\u4e3a~/.tmux.conf\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u6613\u7684\u914d\u7f6e\u6587\u4ef6\u5b9e\u4f8b\uff1a # \u57fa\u7840\u8bbe\u7f6e set -g default-command \"/bin/bash\" set -g default-terminal \"screen-256color\" set -g display-time 3000 set -g escape-time 0 set -g history-limit 65535 set -g base-index 1 set -g pane-base-index 1 set -g status-style bg=blue # \u9009\u4e2d\u7a97\u53e3 bind-key k select-pane -U bind-key j select-pane -D bind-key h select-pane -L bind-key l select-pane -R # copy-mode \u5c06\u5feb\u6377\u952e\u8bbe\u7f6e\u4e3a vi \u6a21\u5f0f setw -g mode-keys vi # \u542f\u7528\u9f20\u6807(Tmux v2.1) set -g mouse on","title":"\u914d\u7f6e\u6587\u4ef6"},{"location":"tools/editor/eclipse/","text":"eclipse \u00b6 \u5173\u95edlaunch bar \u00b6 \u65b0\u7248\u672c\u7684eclipse\u7684\u83dc\u5355\u680f\u4f1a\u6709\u4e00\u4e2a\u5f88\u5360\u7a7a\u95f4\u7684launch bar\uff0c\u5173\u95ed\u7684\u8def\u5f84\u5982\u4e0b\u3002 Window->Preferences->Run/Debug->Launching->Launch Bar","title":"eclipse"},{"location":"tools/editor/eclipse/#eclipse","text":"","title":"eclipse"},{"location":"tools/editor/eclipse/#launch-bar","text":"\u65b0\u7248\u672c\u7684eclipse\u7684\u83dc\u5355\u680f\u4f1a\u6709\u4e00\u4e2a\u5f88\u5360\u7a7a\u95f4\u7684launch bar\uff0c\u5173\u95ed\u7684\u8def\u5f84\u5982\u4e0b\u3002 Window->Preferences->Run/Debug->Launching->Launch Bar","title":"\u5173\u95edlaunch bar"},{"location":"tools/editor/vim/","text":"vim \u00b6 \u5e38\u7528\u914d\u7f6e \u00b6 \u914d\u7f6e\u6587\u4ef6\u4e3a ~/.vimrc \uff0c\u4ee5\u4e0b\u662f\u4e00\u4efd\u7b80\u5355\u7684\u914d\u7f6e\u6587\u4ef6\u793a\u4f8b\uff1a set nocompatible set nu! filetype on set autoindent set cindent set smartindent set tags = ./.tags ; ,.tags set ai! set showmatch set ruler set hlsearch set list set cul set tabstop = 4 set shiftwidth = 4 set backspace = indent,eol,start set ww = h,l \" set cc=81 set cc=0 \" set listchars = tab:\u2192 \\ ,trail:\u00b7,space:\u00b7 set listchars = tab:\u2192 \\ ,trail:\u00b7 let mapleader = \",\" let g:mapleader = \",\" syntax enable \" plug call plug#begin('~/.vim/plugged') Plug 'morhetz/gruvbox' Plug 'vim-airline/vim-airline' Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' } Plug 'neoclide/coc.nvim', {'branch': 'release'} call plug#end() \" colorscheme set background = dark let g:gruvbox_contrast_dark = 'hard' colorscheme gruvbox set laststatus = 2 let g:airline_extensions = [] nmap <leader>w :w!<CR> nmap <leader>l :set list!<CR> nmap <leader>d :NERDTreeToggle<CR> nmap <leader>s :set tabstop = 4 <CR>:set shiftwidth = 4 <CR>:set expandtab<CR> nmap <leader>S :set tabstop = 8 <CR>:set shiftwidth = 8 <CR>:set expandtab<CR> nmap <leader>t :set tabstop = 4 <CR>:set shiftwidth = 4 <CR>:set noexpandtab<CR> nmap <leader>T :set tabstop = 8 <CR>:set shiftwidth = 8 <CR>:set noexpandtab<CR> nmap <leader>c :CocStart<CR> nmap <C- ] > g<c- ] > autocmd bufenter * if ( winnr ( \" $ \" ) == 1 && exists ( \"b:NERDTree\" ) && b:NERDTree.isTabTree ()) | q | endif \" stop CoC by default (but Coc is enabled) let g:coc_start_at_startup=0 \" Append other coc-nvim configs LSP\u914d\u7f6e \u00b6 \u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u7684\u4f7f\u7528\uff0ccoc-nvim\u7684\u4f7f\u7528\u4f53\u9a8c\u8fd8\u662f\u4e0d\u9519\u7684\uff0c\u914d\u5408clangd\uff0c\u5373\u4f7f\u5728\u5d4c\u5165\u5f0f\u5f00\u53d1\u4e2d\u4e5f\u53ef\u4ee5\u5f97\u5230\u5341\u5206\u8212\u670d\u7684\u81ea\u52a8\u8865\u5168\u4f53\u9a8c\u3002 clangd\u3001coc-nvim\u4ee5\u53cacoc-clangd\u7684\u5b89\u88c5\u53ef\u4ee5\u67e5\u770b\u5b98\u65b9\u7f51\u7ad9\u7684\u63cf\u8ff0\uff0c\u6587\u6863\u5341\u5206\u8be6\u7ec6\uff0c\u57fa\u672c\u65e0\u8111\u6309\u7167\u6d41\u7a0b\u6765\u4fbf\u53ef\u4ee5\u4e86\u3002 \u4f7f\u7528 :CocLocalConfig \u53ef\u4ee5\u5728\u5de5\u7a0b\u76ee\u5f55\u6253\u5f00\u76f8\u5e94\u7684\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u7f16\u8f91\uff0c\u8fd9\u91cc\u5728\u914d\u7f6eclangd\u6307\u5b9a\u5de5\u5177\u94fe\u65f6\u8e29\u5230\u4e86\u4e00\u4e2a\u5751\uff0c\u4e00\u5f00\u59cb\u76f4\u63a5\u4f7f\u7528 --query-driver=/path/to/toolchain \u8fd9\u6837\u7684\u53c2\u6570\u65f6\u59cb\u7ec8\u65e0\u6cd5\u8ba9clangd\u6b63\u5e38\u5de5\u4f5c\uff0c\u76f4\u5230\u5c06coc-clangd\u7684\u53c2\u6570\u6309\u7167\u5982\u4e0b\u5f62\u5f0f\u8fdb\u884c\u914d\u7f6e\u624d\u5f00\u59cb\u6b63\u5e38\u5de5\u4f5c\u3002 { \"clangd.disableDiagnostics\" : true , \"inlayHint.enable\" : false , \"clangd.arguments\" : [ \"--query-driver\" , \"/path/to/toolchain/bin/xxx-gcc\" , \"--compile-commands-dir\" , \"build\" , \"--header-insertion\" , \"never\" ] } \u51fd\u6570\u81ea\u52a8\u8865\u5168\u65f6\u4f7f\u7528 CTRL+J \u548c CTRL+K \u53ef\u4ee5\u5728\u51fd\u6570\u53c2\u6570\u95f4\u8fdb\u884c\u5207\u6362\uff1b space+s \u53ef\u4ee5\u5168\u5c40\u641c\u7d22\u7b26\u53f7\u3002","title":"vim"},{"location":"tools/editor/vim/#vim","text":"","title":"vim"},{"location":"tools/editor/vim/#_1","text":"\u914d\u7f6e\u6587\u4ef6\u4e3a ~/.vimrc \uff0c\u4ee5\u4e0b\u662f\u4e00\u4efd\u7b80\u5355\u7684\u914d\u7f6e\u6587\u4ef6\u793a\u4f8b\uff1a set nocompatible set nu! filetype on set autoindent set cindent set smartindent set tags = ./.tags ; ,.tags set ai! set showmatch set ruler set hlsearch set list set cul set tabstop = 4 set shiftwidth = 4 set backspace = indent,eol,start set ww = h,l \" set cc=81 set cc=0 \" set listchars = tab:\u2192 \\ ,trail:\u00b7,space:\u00b7 set listchars = tab:\u2192 \\ ,trail:\u00b7 let mapleader = \",\" let g:mapleader = \",\" syntax enable \" plug call plug#begin('~/.vim/plugged') Plug 'morhetz/gruvbox' Plug 'vim-airline/vim-airline' Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' } Plug 'neoclide/coc.nvim', {'branch': 'release'} call plug#end() \" colorscheme set background = dark let g:gruvbox_contrast_dark = 'hard' colorscheme gruvbox set laststatus = 2 let g:airline_extensions = [] nmap <leader>w :w!<CR> nmap <leader>l :set list!<CR> nmap <leader>d :NERDTreeToggle<CR> nmap <leader>s :set tabstop = 4 <CR>:set shiftwidth = 4 <CR>:set expandtab<CR> nmap <leader>S :set tabstop = 8 <CR>:set shiftwidth = 8 <CR>:set expandtab<CR> nmap <leader>t :set tabstop = 4 <CR>:set shiftwidth = 4 <CR>:set noexpandtab<CR> nmap <leader>T :set tabstop = 8 <CR>:set shiftwidth = 8 <CR>:set noexpandtab<CR> nmap <leader>c :CocStart<CR> nmap <C- ] > g<c- ] > autocmd bufenter * if ( winnr ( \" $ \" ) == 1 && exists ( \"b:NERDTree\" ) && b:NERDTree.isTabTree ()) | q | endif \" stop CoC by default (but Coc is enabled) let g:coc_start_at_startup=0 \" Append other coc-nvim configs","title":"\u5e38\u7528\u914d\u7f6e"},{"location":"tools/editor/vim/#lsp","text":"\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u7684\u4f7f\u7528\uff0ccoc-nvim\u7684\u4f7f\u7528\u4f53\u9a8c\u8fd8\u662f\u4e0d\u9519\u7684\uff0c\u914d\u5408clangd\uff0c\u5373\u4f7f\u5728\u5d4c\u5165\u5f0f\u5f00\u53d1\u4e2d\u4e5f\u53ef\u4ee5\u5f97\u5230\u5341\u5206\u8212\u670d\u7684\u81ea\u52a8\u8865\u5168\u4f53\u9a8c\u3002 clangd\u3001coc-nvim\u4ee5\u53cacoc-clangd\u7684\u5b89\u88c5\u53ef\u4ee5\u67e5\u770b\u5b98\u65b9\u7f51\u7ad9\u7684\u63cf\u8ff0\uff0c\u6587\u6863\u5341\u5206\u8be6\u7ec6\uff0c\u57fa\u672c\u65e0\u8111\u6309\u7167\u6d41\u7a0b\u6765\u4fbf\u53ef\u4ee5\u4e86\u3002 \u4f7f\u7528 :CocLocalConfig \u53ef\u4ee5\u5728\u5de5\u7a0b\u76ee\u5f55\u6253\u5f00\u76f8\u5e94\u7684\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u7f16\u8f91\uff0c\u8fd9\u91cc\u5728\u914d\u7f6eclangd\u6307\u5b9a\u5de5\u5177\u94fe\u65f6\u8e29\u5230\u4e86\u4e00\u4e2a\u5751\uff0c\u4e00\u5f00\u59cb\u76f4\u63a5\u4f7f\u7528 --query-driver=/path/to/toolchain \u8fd9\u6837\u7684\u53c2\u6570\u65f6\u59cb\u7ec8\u65e0\u6cd5\u8ba9clangd\u6b63\u5e38\u5de5\u4f5c\uff0c\u76f4\u5230\u5c06coc-clangd\u7684\u53c2\u6570\u6309\u7167\u5982\u4e0b\u5f62\u5f0f\u8fdb\u884c\u914d\u7f6e\u624d\u5f00\u59cb\u6b63\u5e38\u5de5\u4f5c\u3002 { \"clangd.disableDiagnostics\" : true , \"inlayHint.enable\" : false , \"clangd.arguments\" : [ \"--query-driver\" , \"/path/to/toolchain/bin/xxx-gcc\" , \"--compile-commands-dir\" , \"build\" , \"--header-insertion\" , \"never\" ] } \u51fd\u6570\u81ea\u52a8\u8865\u5168\u65f6\u4f7f\u7528 CTRL+J \u548c CTRL+K \u53ef\u4ee5\u5728\u51fd\u6570\u53c2\u6570\u95f4\u8fdb\u884c\u5207\u6362\uff1b space+s \u53ef\u4ee5\u5168\u5c40\u641c\u7d22\u7b26\u53f7\u3002","title":"LSP\u914d\u7f6e"},{"location":"tools/editor/vscode/","text":"vscode \u00b6 \u5b57\u4f53 \u00b6 monospace\uff0c\u7b49\u5bbd\u5b57\u4f53 \u663e\u793aTAB \u00b6 renderControlCharacters\u3002 \u663e\u793a\u7a7a\u683c \u00b6 renderWhitespace\uff0c\u9009\u62e9all\u3002 ruler \u00b6 \"editor.rulers\": [80,120] \u5c31\u53ef\u4ee5\u4e86 \u60f3\u753b\u51e0\u6761\u7ebf\u90fd\u53ef\u4ee5\u3002 \u6269\u5c55 \u00b6 \u9605\u8bfb\u5185\u6838\u4ee3\u7801\u53ef\u4ee5\u4f7f\u7528GNU Global\u6269\u5c55\u3002","title":"vscode"},{"location":"tools/editor/vscode/#vscode","text":"","title":"vscode"},{"location":"tools/editor/vscode/#_1","text":"monospace\uff0c\u7b49\u5bbd\u5b57\u4f53","title":"\u5b57\u4f53"},{"location":"tools/editor/vscode/#tab","text":"renderControlCharacters\u3002","title":"\u663e\u793aTAB"},{"location":"tools/editor/vscode/#_2","text":"renderWhitespace\uff0c\u9009\u62e9all\u3002","title":"\u663e\u793a\u7a7a\u683c"},{"location":"tools/editor/vscode/#ruler","text":"\"editor.rulers\": [80,120] \u5c31\u53ef\u4ee5\u4e86 \u60f3\u753b\u51e0\u6761\u7ebf\u90fd\u53ef\u4ee5\u3002","title":"ruler"},{"location":"tools/editor/vscode/#_3","text":"\u9605\u8bfb\u5185\u6838\u4ee3\u7801\u53ef\u4ee5\u4f7f\u7528GNU Global\u6269\u5c55\u3002","title":"\u6269\u5c55"},{"location":"tools/network/wireless/wpa_supplicant/","text":"wpa_supplicant \u00b6 wpa_supplicant\u662f\u8de8\u5e73\u53f0\u7684\u65e0\u7ebf\u8bbf\u95ee\u5ba2\u6237\u7aef\uff0c\u53ef\u7528\u4e8ePC\u3001\u7b14\u8bb0\u672c\u4ee5\u53ca\u5d4c\u5165\u5f0f\u7b49\u4e0d\u540c\u573a\u5408\uff0c\u8be6\u7ec6\u6587\u6863\u53ef\u67e5\u770b man\u624b\u518c \u3002 \u8fde\u63a5wifi \u00b6 \u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u53ef\u6309\u7167\u5982\u4e0b\u987a\u5e8f\u4f7f\u7528wpa_supplicant\u5de5\u5177\u6765\u8fde\u63a5wifi\u3002 \u4f7f\u80fd wlan0 \u63a5\u53e3 ifconfig wlan0 up \u70ed\u70b9\u626b\u63cf\uff08\u53ef\u9009\uff09 iw dev wlan0 scan \u4f7f\u7528 wpa_passphrase \u751f\u6210\u914d\u7f6e\u6587\u4ef6 wpa_passphrase SSID Passwd > /etc/wpa_supplicant.conf \u5e94\u7528\u914d\u7f6e wpa_supplicant -B -i wlan0 -c /etc/wpa_supplicant.conf \u83b7\u53d6IP udhcpc -i wlan0 \u53c2\u8003\u94fe\u63a5 \u00b6 https://whycan.com/t_5292.html","title":"wpa_supplicant"},{"location":"tools/network/wireless/wpa_supplicant/#wpa_supplicant","text":"wpa_supplicant\u662f\u8de8\u5e73\u53f0\u7684\u65e0\u7ebf\u8bbf\u95ee\u5ba2\u6237\u7aef\uff0c\u53ef\u7528\u4e8ePC\u3001\u7b14\u8bb0\u672c\u4ee5\u53ca\u5d4c\u5165\u5f0f\u7b49\u4e0d\u540c\u573a\u5408\uff0c\u8be6\u7ec6\u6587\u6863\u53ef\u67e5\u770b man\u624b\u518c \u3002","title":"wpa_supplicant"},{"location":"tools/network/wireless/wpa_supplicant/#wifi","text":"\u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u53ef\u6309\u7167\u5982\u4e0b\u987a\u5e8f\u4f7f\u7528wpa_supplicant\u5de5\u5177\u6765\u8fde\u63a5wifi\u3002 \u4f7f\u80fd wlan0 \u63a5\u53e3 ifconfig wlan0 up \u70ed\u70b9\u626b\u63cf\uff08\u53ef\u9009\uff09 iw dev wlan0 scan \u4f7f\u7528 wpa_passphrase \u751f\u6210\u914d\u7f6e\u6587\u4ef6 wpa_passphrase SSID Passwd > /etc/wpa_supplicant.conf \u5e94\u7528\u914d\u7f6e wpa_supplicant -B -i wlan0 -c /etc/wpa_supplicant.conf \u83b7\u53d6IP udhcpc -i wlan0","title":"\u8fde\u63a5wifi"},{"location":"tools/network/wireless/wpa_supplicant/#_1","text":"https://whycan.com/t_5292.html","title":"\u53c2\u8003\u94fe\u63a5"}]}